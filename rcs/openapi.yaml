openapi: 3.0.1
info:
  title: Riot Client Services
  description: Auto-generated from the RCS help files.
  contact:
    name: Mikael DÃºi Bolinder (DevOps Activist)
    url: https://discord.gg/riotgamesdevrel
  license:
    name: The Unlicense
  version: 1.0.0-magisteriis
servers:
  - url: 'https://127.0.0.1:{port}'
    description: YOUR local instance of RCS.
    variables:
      port:
        description: The port this RCS instance is running on. Changes every restart.
paths:
  /Exit:
    post:
      tags:
        - builtin
      summary: Closes the connection.
      operationId: Exit
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
            application/x-yaml:
              schema:
                type: object
            application/x-msgpack:
              schema:
                type: object
  /Help:
    post:
      tags:
        - builtin
      summary: Returns information on available functions and types
      description: 'With no arguments, returns a list of all available functions and types along with a short description. If a function or type is specified, returns detailed information about it.'
      operationId: Help
      parameters:
        - name: target
          in: query
          description: Name of the function or type to describe
          schema:
            type: string
        - name: format
          in: query
          description: Format for returned information
          schema:
            $ref: '#/components/schemas/RemotingHelpFormat'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
            application/x-yaml:
              schema:
                type: object
            application/x-msgpack:
              schema:
                type: object
  /Subscribe:
    post:
      tags:
        - builtin
      summary: Subscribes to a given event
      operationId: Subscribe
      parameters:
        - name: eventName
          in: query
          description: Name of the event to subscribe to
          required: true
          schema:
            type: string
        - name: format
          in: query
          description: 'Desired format to receive events in. If unspecified, events will be sent in the active result format at the time.'
          schema:
            $ref: '#/components/schemas/RemotingSerializedFormat'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
            application/x-yaml:
              schema:
                type: object
            application/x-msgpack:
              schema:
                type: object
  /Unsubscribe:
    post:
      tags:
        - builtin
      summary: Unsubscribes from a given event
      operationId: Unsubscribe
      parameters:
        - name: eventName
          in: query
          description: Name of the event to unsubscribe from
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
            application/x-yaml:
              schema:
                type: object
            application/x-msgpack:
              schema:
                type: object
  /WebSocketFormat:
    post:
      tags:
        - builtin
        - websocket
      summary: Controls the console output format
      description: 'With no arguments, returns the current output format being used. If a format is specified, switches the console output to that format.'
      operationId: WebSocketFormat
      parameters:
        - name: format
          in: query
          description: Output format to switch to
          schema:
            $ref: '#/components/schemas/RemotingSerializedFormat'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
            application/x-yaml:
              schema:
                type: object
            application/x-msgpack:
              schema:
                type: object
  /accounts-security/v1/access:
    get:
      tags:
        - accounts-security
      summary: Returns the action need to be done and outbound URL for it
      operationId: GetAccountsSecurityV1Access
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountsSecurityAccountsSecurity'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AccountsSecurityAccountsSecurity'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/AccountsSecurityAccountsSecurity'
  '/age-restriction/v1/age-restriction/products/{productId}':
    get:
      tags:
        - age-restriction
      summary: Returns the age-restriction state for the productId
      operationId: GetAgeRestrictionV1AgeRestrictionProductsByProductId
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgeRestrictionAgeRestriction'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AgeRestrictionAgeRestriction'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/AgeRestrictionAgeRestriction'
  '/age-restriction/v1/debug/age-restriction/products/{productId}':
    put:
      tags:
        - age-restriction
      summary: 'DEBUG: Sets the age-restriction state for the productId'
      operationId: PutAgeRestrictionV1DebugAgeRestrictionProductsByProductId
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: string
        - name: restricted
          in: query
          required: true
          schema:
            type: boolean
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgeRestrictionAgeRestriction'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AgeRestrictionAgeRestriction'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/AgeRestrictionAgeRestriction'
  /agent/v1/connection-info:
    post:
      tags:
        - Plugins
        - Plugin agent
      summary: Method for the agent to inform Foundation about how to connect
      operationId: PostAgentV1ConnectionInfo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionInfo'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ConnectionInfo'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/ConnectionInfo'
      responses:
        '204':
          description: No content
  /agent/v1/requests:
    get:
      tags:
        - Plugins
        - Plugin agent
      summary: Get the list of pending and active requests being handled by the agent
      operationId: GetAgentV1Requests
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentRequestQueue'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AgentRequestQueue'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/AgentRequestQueue'
  /agent/v1/requests/create-uri-handler:
    post:
      tags:
        - Plugins
        - Plugin agent
      summary: Create URI handler under Registry to launch from riotclient:// uri
      operationId: PostAgentV1RequestsCreateUriHandler
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UriHandlerRequest'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/UriHandlerRequest'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/UriHandlerRequest'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
            application/x-yaml:
              schema:
                type: object
            application/x-msgpack:
              schema:
                type: object
  /agent/v1/requests/prepare-directory-permissions:
    post:
      tags:
        - Plugins
        - Plugin agent
      summary: Prepare permissions on a collection of directories for use by all users
      operationId: PostAgentV1RequestsPrepareDirectoryPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PreparePermissionsRequest'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/PreparePermissionsRequest'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/PreparePermissionsRequest'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
            application/x-yaml:
              schema:
                type: object
            application/x-msgpack:
              schema:
                type: object
  /agent/v1/requests/prepare-permissions:
    post:
      tags:
        - Plugins
        - Plugin agent
      summary: Prepare permissions on a collection of paths for use by all users
      operationId: PostAgentV1RequestsPreparePermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PreparePermissionsRequest'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/PreparePermissionsRequest'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/PreparePermissionsRequest'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
            application/x-yaml:
              schema:
                type: object
            application/x-msgpack:
              schema:
                type: object
  /agent/v1/requests/register-watch-path:
    post:
      tags:
        - Plugins
        - Plugin agent
      summary: '[Mac] Register a watch path, which the agent will check for existence'
      operationId: PostAgentV1RequestsRegisterWatchPath
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterWatchPathRequest'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/RegisterWatchPathRequest'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/RegisterWatchPathRequest'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
            application/x-yaml:
              schema:
                type: object
            application/x-msgpack:
              schema:
                type: object
  /agent/v1/requests/third-party-dependency:
    post:
      tags:
        - Plugins
        - Plugin agent
      summary: Queue a third party dependency for install
      operationId: PostAgentV1RequestsThirdPartyDependency
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ThirdPartyDependencyRequest'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ThirdPartyDependencyRequest'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/ThirdPartyDependencyRequest'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThirdPartyDependencyStatus'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ThirdPartyDependencyStatus'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/ThirdPartyDependencyStatus'
  '/agent/v1/requests/third-party-dependency/{requestId}':
    delete:
      tags:
        - Plugins
        - Plugin agent
      summary: Cancel a third party dependency job
      operationId: DeleteAgentV1RequestsThirdPartyDependencyByRequestId
      parameters:
        - name: requestId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
            application/x-yaml:
              schema:
                type: object
            application/x-msgpack:
              schema:
                type: object
    get:
      tags:
        - Plugins
        - Plugin agent
      summary: Get the current status for a third party dependency job
      operationId: GetAgentV1RequestsThirdPartyDependencyByRequestId
      parameters:
        - name: requestId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThirdPartyDependencyStatus'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ThirdPartyDependencyStatus'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/ThirdPartyDependencyStatus'
  /agent/v1/session:
    delete:
      tags:
        - Plugins
        - Plugin agent
      summary: Stop the agent
      operationId: DeleteAgentV1Session
      responses:
        '204':
          description: No content
    get:
      tags:
        - Plugins
        - Plugin agent
      summary: Get the running state of the agent
      operationId: GetAgentV1Session
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentSession'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AgentSession'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/AgentSession'
    post:
      tags:
        - Plugins
        - Plugin agent
      summary: Start the agent
      operationId: PostAgentV1Session
      responses:
        '204':
          description: No content
  '/anti-addiction/v1/products/{productId}/anti-addiction-state':
    post:
      tags:
        - anti-addiction
      summary: Test API for triggering anti-addiction state for testing purposes
      operationId: PostAntiAddictionV1ProductsByProductIdAntiAddictionState
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AntiAddictionAntiAddictionState'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/AntiAddictionAntiAddictionState'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/AntiAddictionAntiAddictionState'
      responses:
        '204':
          description: No content
  '/anti-addiction/v1/products/{productId}/policies/{policyType}/anti-addiction-state':
    get:
      tags:
        - anti-addiction
      summary: Returns an anti-addiction state by productId and policy
      operationId: GetAntiAddictionV1ProductsByProductIdPoliciesByPolicyTypeAntiAddictionState
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: string
        - name: policyType
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AntiAddictionAntiAddictionState'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AntiAddictionAntiAddictionState'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/AntiAddictionAntiAddictionState'
  /app-command/submit:
    put:
      tags:
        - app-command
      summary: Used to coerce an application to invoke a registered command.
      operationId: PutAppCommandSubmit
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppCommandCommand'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/AppCommandCommand'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/AppCommandCommand'
      responses:
        '204':
          description: No content
  /app-command/v1/auth/status:
    delete:
      tags:
        - app-command
      summary: Deletes the stored authentication status
      operationId: DeleteAppCommandV1AuthStatus
      responses:
        '204':
          description: No content
    get:
      tags:
        - app-command
      summary: Returns the authentication status
      operationId: GetAppCommandV1AuthStatus
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppCommandAuthStatus'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AppCommandAuthStatus'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/AppCommandAuthStatus'
  /app-command/v1/focus-request:
    delete:
      tags:
        - app-command
      summary: 'Delete the current app focus request, if one exists'
      description: 'Delete the current app focus request, if one exists'
      operationId: DeleteAppCommandV1FocusRequest
      responses:
        '204':
          description: No content
    get:
      tags:
        - app-command
      summary: 'Get the current app focus request, if one exists'
      description: 'Get the current app focus request, if one exists'
      operationId: GetAppCommandV1FocusRequest
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppFocusRequest'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AppFocusRequest'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/AppFocusRequest'
  /chat/v1/debug:
    get:
      tags:
        - chat
      summary: get debug config
      operationId: GetChatV1Debug
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatDebugConfig'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChatDebugConfig'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/ChatDebugConfig'
    post:
      tags:
        - chat
      summary: set debug config
      operationId: PostChatV1Debug
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatDebugConfig'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ChatDebugConfig'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/ChatDebugConfig'
      responses:
        '204':
          description: No content
  /chat/v1/debug/finalize/initialize:
    post:
      tags:
        - chat
      summary: debug finalize and initialize
      operationId: PostChatV1DebugFinalizeInitialize
      responses:
        '204':
          description: No content
  /chat/v1/device-settings:
    get:
      tags:
        - chat
      summary: Get the current values of the device settings related to chat.
      operationId: GetChatV1DeviceSettings
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatDeviceChatSettings'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChatDeviceChatSettings'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/ChatDeviceChatSettings'
    put:
      tags:
        - chat
      summary: Update the device settings related to chat
      operationId: PutChatV1DeviceSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatDeviceChatSettings'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ChatDeviceChatSettings'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/ChatDeviceChatSettings'
      responses:
        '204':
          description: No content
  /chat/v1/session:
    get:
      tags:
        - chat
      summary: get chat session state
      description: "Chat notifies updated events on these endpoints, typically in this order:\n\n* `/chat/v1/session`    ->  { state: \"connecting\", pid: \"\", name: \"\", loaded: false }    //chat is now connecting (empty pid, name)\n* `/chat/v1/session`    ->  { state: \"connected\", pid: \"sum3530124@pvp.net\", name: \"Scarlet Witch\", loaded: false }    //chat is now connected initial data for showing the friends list in the UX is not loaded\n* `/chat/v#/presences`      //for all your friend presences (no way around this currently)\n* `/chat/v#/presences`      //for yourself\n* `/chat/v#/groups`         //batch of every group in your friends list\n* `/chat/v#/friends`        //batch\n* `/chat/v#/blocked`        //batch\n* `/chat/v#/conversations`  //recent conversations\n* `/chat/v#/messages`\n* `/chat/v#/participants`\n* `/chat/v1/session`     -> { state: \"connected\", pid: \"sum3530124@pvp.net\", name: \"Scarlet Witch\", loaded: true }    //chat is now connected and has loaded the initial data to show in the UX\n"
      operationId: GetChatV1Session
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatChatSession'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChatChatSession'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/ChatChatSession'
  /chat/v1/session/connect:
    post:
      tags:
        - chat
      summary: force to chat to connect & allow reconnects
      operationId: PostChatV1SessionConnect
      responses:
        '204':
          description: No content
  '/chat/v1/session/debug/terminate/{product}':
    post:
      tags:
        - chat
      summary: Simulate termination of a product to the chat plugin
      operationId: PostChatV1SessionDebugTerminateByProduct
      parameters:
        - name: product
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No content
  /chat/v1/session/disconnect:
    post:
      tags:
        - chat
      summary: force chat to disconnect & disallow reconnects
      operationId: PostChatV1SessionDisconnect
      responses:
        '204':
          description: No content
  /chat/v1/session/platform:
    post:
      tags:
        - chat
      summary: Update the chat session's League of Legends platform id
      operationId: PostChatV1SessionPlatform
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatSessionPlatform'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ChatSessionPlatform'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/ChatSessionPlatform'
      responses:
        '204':
          description: No content
  /chat/v1/session/state:
    get:
      tags:
        - chat
      summary: get chat product session state
      description: Endpoint deleted August 2021; Please use '/chat/v2/session/state'.
      operationId: GetChatV1SessionState
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatSessionState'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChatSessionState'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/ChatSessionState'
    put:
      tags:
        - chat
      summary: edit session state for specific product
      description: Endpoint deleted August 2021; Please use '/chat/v2/session/state'.
      operationId: PutChatV1SessionState
      parameters:
        - name: rchat-blocking
          in: query
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatProductSessionState'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ChatProductSessionState'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/ChatProductSessionState'
      responses:
        '204':
          description: No content
  /chat/v1/settings:
    get:
      tags:
        - chat
      summary: Get the account settings related to chat
      description: "**Response:**\n\n```\n{\n  \"bounceDockIconEnabled\": [bounceDockIconEnabled], // If the dock icon will bounce when receiving a new message, game invite, etc\n  \"chat-status-message\": \"[status_message]\",      // The player's status message. This gets updated within chat when the \"status\" of the player is changed\n  \"chatFilterDisabled\": [chatFilterDisabled],       // If bad language is filtered in chat messages\n  \"chatGroupMobile\": [chatGroupMobile],             // If mobile friends are grouped in their own \"MOBILE\" folder\n  \"chatGroupOffline\": [chatGroupOffline],           // If offline friends are grouped in their own \"OFFLINE\" folder\n  \"chatWindow\": {                                   // The chat window settings\n    \"detached\": [detached],                         // If the chat window is docked or popped out\n    \"height\": [height],                             // The height of the chat window\n    \"left\": [left],                                 // The location of the left side of the chat window\n    \"top\": [top],                                   // The location of the top side of the chat window\n    \"width\": [width]                                // The width of the chat window\n  },\n  \"closed-conversations\": {                         // Which conversations have been closed. Used within chat to determine which recent convos to remove on startup. This gets updated\n                                                      // within chat when a conversation is deleted\n    \"[convo_id]\": [closed_timestamp],\n    ...\n  },\n  \"friendRequestToastsDisabled\": [friendRequestToastsDisabled], // If a toast appears when you receive a friend request\n  \"linkClickWarningEnabled\": [linkClickWarningEnabled],         // If a link warning will appear when clicking on links\n  \"messageNotificationsEnabled\": [messageNotificationsEnabled], // If a native toast or regular toast appears when receiving a message\n  \"moreUnreadsEnabled\": [moreUnreadsEnabled],                   // If a \"more unreads\" indicator appears for unread items not currently in scroll view\n  \"muted-conversations\": {                                      // A list of 1:1 muted conversations. This gets updated within chat when the \"muted\" state of a conversation is changed\n    \"[convo_id]\": 1\n  },                       \n  \"recentlyPlayedOpen\": [recentlyPlayedOpen],                  // If the \"recently played\" folder is open\n  \"roster-group-collapsed\": {                                  // A list of each folder's collapsed state. This gets updated within chat when the \"collapsed\" state of a group is changed\n    \"[group_folder_name]\": [collapsed],\n    ...\n  },\n  \"showWhenTypingEnabled\": [showWhenTypingEnabled],            // If an indicator is shown to other players when writing a message to them\n  \"sortBy\": \"[sort_type]\"                                    // How to sort friends in the friends list (ex. by \"availability\" vs \"alphabetical\")\n}\n```\n\nMost of these chat settings are straightforward and only require an update when a player enables or disables a setting. For example, when they check or uncheck a box for the setting.\n"
      operationId: GetChatV1Settings
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatAccountChatSettings'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChatAccountChatSettings'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/ChatAccountChatSettings'
    patch:
      tags:
        - chat
      summary: 'Update the account settings related to chat, partial update using only given fields'
      operationId: PatchChatV1Settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
          application/x-yaml:
            schema:
              type: object
              additionalProperties:
                type: object
          application/x-msgpack:
            schema:
              type: object
              additionalProperties:
                type: object
      responses:
        '204':
          description: No content
    put:
      tags:
        - chat
      summary: 'Update the account settings related to chat, complete overwrite'
      operationId: PutChatV1Settings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatAccountChatSettings'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ChatAccountChatSettings'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/ChatAccountChatSettings'
      responses:
        '204':
          description: No content
  /chat/v1/social:
    post:
      tags:
        - chat
      summary: Get game/product social data for building the friend list UI
      operationId: PostChatV1Social
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatSocialDataReq'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ChatSocialDataReq'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/ChatSocialDataReq'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatSocialData'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChatSocialData'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/ChatSocialData'
  /chat/v2/friendrequests:
    get:
      tags:
        - chat
      summary: Get all friend requests
      description: "**Response:** named requests root object: a flat list of friend request property groups with 'pid' and 'name' inside (could have zero or more entries):\n\n```\n{\n  \"requests\": [\n    {\n      \"name\":         \"[friend name]\",\n      \"note\":         \"[friend note]\",     // Can be set to contain information about the friend request. (ex. recofriender saves the player name from social media here)\n      \"pid\":          \"[friend pid]\",\n      \"subscription\": \"pending_out\"        //either \"pending_out\" or \"pending_in\" (sent or received request)\n    }\n  ]\n}\n```\n\n\nEndpoint deleted July 2021; Please use '/chat/v6/friendrequests'."
      operationId: GetChatV2Friendrequests
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatFriendRequestList'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChatFriendRequestList'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/ChatFriendRequestList'
    post:
      tags:
        - chat
      summary: Add friend request / invite friend
      description: "Data:\n\n```\n{\n  \"name\": \"player summoner name\", //currently required, until we fix it\n  \"note\": \"string\",               //note to attach to request. will be substituted in as the friend note if request accepted\n  \"pid\": \"string\"                 //currently helps speed up the query, but in the future can be used in place of the name\n}\n```\n\n\nEndpoint deleted July 2021; Please use '/chat/v6/friendrequests'."
      operationId: PostChatV2Friendrequests
      parameters:
        - name: rchat-blocking
          in: query
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatFriendRequestAdd'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ChatFriendRequestAdd'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/ChatFriendRequestAdd'
      responses:
        '204':
          description: No content
  '/chat/v2/friendrequests/{pid}':
    delete:
      tags:
        - chat
      summary: Remove or decline friend request
      description: Endpoint deleted July 2021; Please use '/chat/v6/friendrequests'.
      operationId: DeleteChatV2FriendrequestsByPid
      parameters:
        - name: pid
          in: path
          required: true
          schema:
            type: string
        - name: rchat-blocking
          in: query
          schema:
            type: boolean
      responses:
        '204':
          description: No content
    get:
      tags:
        - chat
      summary: Get friend request
      description: "**Response:** named requests root object: a flat list of friend request property groups with 'pid' and 'name' inside (could have zero or more entries):\n\n```\n{\n  \"requests\": [\n    {\n      \"name\":         \"[friend name]\",\n      \"note\":         \"[friend note]\",     // Can be set to contain information about the friend request. (ex. recofriender saves the player name from social media here)\n      \"pid\":          \"[friend pid]\",\n      \"subscription\": \"pending_out\"        //either \"pending_out\" or \"pending_in\" (sent or received request)\n    }\n  ]\n}\n```\n\n\nEndpoint deleted July 2021; Please use '/chat/v6/friendrequests?pid={pid}' with pid query arg."
      operationId: GetChatV2FriendrequestsByPid
      parameters:
        - name: pid
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatFriendRequestList'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChatFriendRequestList'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/ChatFriendRequestList'
  /chat/v2/me:
    delete:
      tags:
        - chat
      summary: Delete multi-game presence of a specific product
      description: Endpoint deleted August 2021; Please use '/chat/v3/me'.
      operationId: DeleteChatV2Me
      parameters:
        - name: rchat-blocking
          in: query
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatPresenceProduct'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ChatPresenceProduct'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/ChatPresenceProduct'
      responses:
        '204':
          description: No content
    put:
      tags:
        - chat
      summary: Put/update a multi-game presence for a specific product. This implicitly sets the product's chat session state to `active`.
      description: Endpoint deleted August 2021; Please use '/chat/v3/me'.
      operationId: PutChatV2Me
      parameters:
        - name: rchat-blocking
          in: query
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatChatGamePresence'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ChatChatGamePresence'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/ChatChatGamePresence'
      responses:
        '204':
          description: No content
  /chat/v2/me/debug-jwt:
    post:
      tags:
        - chat
      summary: Simulate updating a game presence with jwt (server authoritative info)
      description: Endpoint deleted August 2021; Please use '/chat/v3/me/debug-jwt'.
      operationId: PostChatV2MeDebugJwt
      parameters:
        - name: rchat-blocking
          in: query
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatDebugChatGamePresence'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ChatDebugChatGamePresence'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/ChatDebugChatGamePresence'
      responses:
        '204':
          description: No content
  /chat/v2/session/connect:
    post:
      tags:
        - chat
      summary: force to chat to connect & allow reconnects
      operationId: PostChatV2SessionConnect
      responses:
        '204':
          description: No content
  '/chat/v2/session/debug/terminate/{product}':
    post:
      tags:
        - chat
      summary: Simulate termination of a product to the chat plugin
      operationId: PostChatV2SessionDebugTerminateByProduct
      parameters:
        - name: product
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No content
  /chat/v2/session/disconnect:
    post:
      tags:
        - chat
      summary: force chat to disconnect & disallow reconnects
      operationId: PostChatV2SessionDisconnect
      responses:
        '204':
          description: No content
  /chat/v2/session/platform:
    post:
      tags:
        - chat
      summary: Update the chat session's League of Legends platform id
      operationId: PostChatV2SessionPlatform
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatSessionPlatform'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ChatSessionPlatform'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/ChatSessionPlatform'
      responses:
        '204':
          description: No content
  /chat/v2/session/state:
    get:
      tags:
        - chat
      summary: get chat product session state
      operationId: GetChatV2SessionState
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatSessionState'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChatSessionState'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/ChatSessionState'
    put:
      tags:
        - chat
      summary: edit session state for specific product
      operationId: PutChatV2SessionState
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatProductSessionState'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ChatProductSessionState'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/ChatProductSessionState'
      responses:
        '204':
          description: No content
  /chat/v3/blocked:
    delete:
      tags:
        - chat
      summary: Unblock a player
      description: Endpoint deleted August 2021; Please use '/chat/v4/blocked'.
      operationId: DeleteChatV3Blocked
      parameters:
        - name: rchat-blocking
          in: query
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatBlockPid'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ChatBlockPid'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/ChatBlockPid'
      responses:
        '204':
          description: No content
    get:
      tags:
        - chat
      summary: Get blocked players
      description: "**Response**:\n\n```\n{\n  \"blocked\": [\n    {\n      \"action\": \"[action]\",         // \"deny\" for blocked\n      \"name\": \"[name]\",             // player name\n      \"order\": \"[order],            // order in block list\n      \"pid\": \"[pid]\"                // player id\n    }\n  ]\n}\n```\n\n\nEndpoint deleted August 2021; Please use '/chat/v4/blocked'."
      operationId: GetChatV3Blocked
      parameters:
        - name: pid
          in: query
          schema:
            type: string
        - name: puuid
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatChatBlockedList'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChatChatBlockedList'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/ChatChatBlockedList'
    post:
      tags:
        - chat
      summary: Block a player
      description: Endpoint deleted August 2021; Please use '/chat/v4/blocked'.
      operationId: PostChatV3Blocked
      parameters:
        - name: rchat-blocking
          in: query
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatBlockPid'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ChatBlockPid'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/ChatBlockPid'
      responses:
        '204':
          description: No content
  /chat/v3/errors:
    delete:
      tags:
        - chat
      summary: Delete a specific error
      operationId: DeleteChatV3Errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatErrorId'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ChatErrorId'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/ChatErrorId'
      responses:
        '204':
          description: No content
    get:
      tags:
        - chat
      summary: Get a specific error
      description: "**Response:** list of error objects (could have zero or more entries):\n\n```\n{ \"errors\": [\n              { \"class\":   \"[class]\",        //source of error (muc, presence, friend, etc)\n                \"subtype\": \"[subtype]\",      //extra detail; usually most descriptive - along with text field\n                \"type\":    \"[type]\",         //detail - usually action based on error??? (cancel, ignore, etc)\n                \"code\":    \"[code]\",         //numeric error code\n                \"text\":    \"[description]\",  //if available; usually most descriptive (when provided) - along with subtype field\n                \"[key]\":   \"[value]\",        //extra available data, such as...\n                \"pid\":     \"[{pid}]\",        //player id if available\n                \"cid\":     \"[{cid}]\",        //conversation id if available\n                \"id\":      \"[error id]\",     //unique among all errors\n                \"ts\":      \"[timestamp]\"     //integer value: milliseconds UTC\n              },\n              { \"class\":   \"muc\",           //EXAMPLE ERROR OF FAILURE TO JOIN MUC\n                \"subtype\": \"not-allowed\",\n                \"type\":    \"cancel\",\n                \"text\":    \"\",\n                \"code\":    \"405\",\n                \"pid\":     \"sum3530124@pvp.net\",\n                \"cid\":     \"2785eb60-495f-4037-9fa0-98d70bac1b00@pgc.pvp.net\",\n                \"id\":      \"e_1491935420384\"\n                \"ts\":      \"1491935419627\"\n              },\n              { \"class\":   \"auth\",          //EXAMPLE ERROR OF FAILURE TO LOGIN TO CHAT\n                \"id\":      \"e_auth\",\n                \"code\":    \"401\",\n                \"type\":    \"temporary-auth-failure\"\n                \"ts\":      \"1497989043000\",\n                \"cid\":     \"\",\n                \"pid\":     \"\",\n                \"subtype\": \"\",\n                \"text\":    \"\",\n              },\n              ...\n            ]\n}\n```\n\n**Notes:**\n\n* Errors for group chat (multi-user chat: MUC) will have \"class\":\"muc\" and a \"cuuid\" field\n* Usually the \"subtype\" and the \"text\" fields are most descriptive, if they exist\n"
      operationId: GetChatV3Errors
      parameters:
        - name: id
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatErrorList'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChatErrorList'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/ChatErrorList'
  /chat/v3/friendrequests:
    delete:
      tags:
        - chat
      summary: Remove or decline friend request
      description: Endpoint deleted July 2021; Please use '/chat/v6/friendrequests'.
      operationId: DeleteChatV3Friendrequests
      parameters:
        - name: rchat-blocking
          in: query
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatRequestPid'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ChatRequestPid'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/ChatRequestPid'
      responses:
        '204':
          description: No content
    get:
      tags:
        - chat
      summary: Get friend requests
      description: "**Response:** named requests root object: a flat list of friend request property groups with 'pid' and 'name' inside (could have zero or more entries):\n\n```\n{\n  \"requests\": [\n    {\n      \"name\":         \"[friend name]\",\n      \"note\":         \"[friend note]\",     // Can be set to contain information about the friend request. (ex. recofriender saves the player name from social media here)\n      \"pid\":          \"[friend pid]\",\n      \"subscription\": \"pending_out\"        //either \"pending_out\" or \"pending_in\" (sent or received request)\n    }\n  ]\n}\n```\n\n\nEndpoint deleted July 2021; Please use '/chat/v6/friendrequests'."
      operationId: GetChatV3Friendrequests
      parameters:
        - name: pid
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatFriendRequestList'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChatFriendRequestList'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/ChatFriendRequestList'
    post:
      tags:
        - chat
      summary: Add friend request / invite friend
      description: Endpoint deleted July 2021; Please use '/chat/v6/friendrequests'.
      operationId: PostChatV3Friendrequests
      parameters:
        - name: rchat-blocking
          in: query
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatFriendRequestAdd'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ChatFriendRequestAdd'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/ChatFriendRequestAdd'
      responses:
        '204':
          description: No content
  /chat/v3/friends:
    delete:
      tags:
        - chat
      summary: Remove friend
      description: Endpoint deleted August 2021; Please use '/chat/v4/friends'.
      operationId: DeleteChatV3Friends
      parameters:
        - name: rchat-blocking
          in: query
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatFriendPid'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ChatFriendPid'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/ChatFriendPid'
      responses:
        '204':
          description: No content
    get:
      tags:
        - chat
      summary: Get friends
      description: "**Response:** named friends root object: a flat list of friend property groups with 'pid' and 'name' inside (could have zero or more entries):```\n{\n  \"friends\": [\n    {\n      \"displayGroup\": \"[display group name]\",   // The current display group of this friend. This will either be the regular group or a meta group (ex. \"MOBILE\", \"OFFLINE\")\n      \"group\":        \"[group name]\",           // The group this friend is a part of\n      \"name\":         \"[friend name]\",\n      \"note\":         \"[friend note]\",\n      \"pid\":          \"[friend pid]\",\n      \"priority\":     \"[group priority value]\"\n    }\n    ...\n  ]\n}\n```\n\n\nEndpoint deleted August 2021; Please use '/chat/v4/friends'."
      operationId: GetChatV3Friends
      parameters:
        - name: pid
          in: query
          schema:
            type: string
        - name: puuid
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatChatFriends'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChatChatFriends'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/ChatChatFriends'
    put:
      tags:
        - chat
      summary: Update a friend
      description: "**Data:**\n\n```\n{\n  \"puuid\":  \"[puuid]\",           //specify player to update\n  \"pid\":    \"[pid]\",             //specify player to update, JID format, if not using puuid\n  \"group\":  \"[new group name]\",  //if moving friend to different group, specify it here\n  \"note\":   \"[new friend note]\"  //if changing friend note, specify it here\n}\n```\n\n\nEndpoint deleted August 2021; Please use '/chat/v4/friends'."
      operationId: PutChatV3Friends
      parameters:
        - name: rchat-blocking
          in: query
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatFriendUpdate'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ChatFriendUpdate'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/ChatFriendUpdate'
      responses:
        '204':
          description: No content
  /chat/v3/groups:
    delete:
      tags:
        - chat
      summary: Delete a friend group
      description: Endpoint deleted August 2021; Please use '/chat/v4/groups'.
      operationId: DeleteChatV3Groups
      parameters:
        - name: rchat-blocking
          in: query
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatFriendGroupName'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ChatFriendGroupName'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/ChatFriendGroupName'
      responses:
        '204':
          description: No content
    get:
      tags:
        - chat
      summary: Get groups
      description: "**Response:** named groups root object: an ordered list of friend groups. First is highest displayed.  Could have one or more entries, always has a default group:\n\n```\n{\n  \"groups\": [\n    {\n      \"collapsed\":    [collapsed],                  // If the group is open or closed\n      \"isMetaGroup\":  [isMetaGroup],                // If the group is a meta group (ex. \"MOBILE\", \"OFFLINE\")\n      \"name\":        \"[group name]\"\n    }\n    ...\n  ]\n}\n```\n\n**Mobile and Offline Groups**\n\nThe mobile and offline groups will appear in the list of groups if the \"chatGroupMobile\" or \"chatGroupOffline\" settings are set to true. They will appear like this:\n\n```\n{\n  \"groups\": [\n    ...\n    {\n      \"collapsed\": [collapsed],\n      \"isMetaGroup\": true,\n      \"name\": \"MOBILE\"\n    },\n    ...\n    {\n      \"collapsed\": [collapsed],\n      \"isMetaGroup\": true,\n      \"name\": \"OFFLINE\"\n    }\n    ...\n  ]\n}\n```\n\nFriends who are either in the \"offline\" or \"mobile\" state will automatically be given the corresponding \"displayGroup\" (ex. either \"OFFLINE\" or \"MOBILE\") in place of their regular group name. If the settings are turned off the groups will be removed and the friends' \"displayGroup\"s will be set back to their regular group names.\n\n\nEndpoint deleted August 2021; Please use '/chat/v4/groups/order'."
      operationId: GetChatV3Groups
      parameters:
        - name: name
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatChatGroupList'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChatChatGroupList'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/ChatChatGroupList'
    post:
      tags:
        - chat
      summary: Create a friend group
      description: "**Data:**\n\n```\n{\n\"name\":  \"[new group name]\"\n}\n```\nRequirements to create a friend group:\n\n1. name can't be empty --> error 400\n2. name can't happen to be the default group \"**Default\" --> error 403\n3. name can't happen to be a meta group, neither \"OFFLINE\" nor \"MOBILE\" --> error 403\n4. name can't already be the name of another group --> error 409\n\n\nEndpoint deleted August 2021; Please use '/chat/v4/groups'."
      operationId: PostChatV3Groups
      parameters:
        - name: rchat-blocking
          in: query
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatFriendGroupCreate'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ChatFriendGroupCreate'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/ChatFriendGroupCreate'
      responses:
        '204':
          description: No content
    put:
      tags:
        - chat
      summary: Update a friend group
      description: "**Data:**\n\n```\n{\n\"collapsed\": [new collapsed]   //if collapsing or uncollapsing, specify it here\n\"name\":      \"[current name]\", //current name of group\n\"new_name\":  \"[new name]\",     //same name, or new name if renaming\n}\n```\n\n\nEndpoint deleted August 2021; Please use '/chat/v4/groups'."
      operationId: PutChatV3Groups
      parameters:
        - name: rchat-blocking
          in: query
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatChatGroupUpdate'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ChatChatGroupUpdate'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/ChatChatGroupUpdate'
      responses:
        '204':
          description: No content
  /chat/v3/groups/order:
    put:
      tags:
        - chat
      summary: Order the friend groups
      description: Endpoint deleted August 2021; Please use '/chat/v4/groups/order'.
      operationId: PutChatV3GroupsOrder
      parameters:
        - name: rchat-blocking
          in: query
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatFriendGroupOrder'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ChatFriendGroupOrder'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/ChatFriendGroupOrder'
      responses:
        '204':
          description: No content
  /chat/v3/me:
    delete:
      tags:
        - chat
      summary: Delete multi-game presence of a specific product
      operationId: DeleteChatV3Me
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatPresenceProduct'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ChatPresenceProduct'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/ChatPresenceProduct'
      responses:
        '204':
          description: No content
    put:
      tags:
        - chat
      summary: Put/update a multi-game presence for a specific product. This implicitly sets the product's chat session state to `active`.
      operationId: PutChatV3Me
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatChatGamePresence'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ChatChatGamePresence'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/ChatChatGamePresence'
      responses:
        '204':
          description: No content
  /chat/v3/me/debug-jwt:
    post:
      tags:
        - chat
      summary: Simulate updating a game presence with jwt (server authoritative info)
      operationId: PostChatV3MeDebugJwt
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatDebugChatGamePresence'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ChatDebugChatGamePresence'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/ChatDebugChatGamePresence'
      responses:
        '204':
          description: No content
  /chat/v4/blocked:
    delete:
      tags:
        - chat
      summary: Unblock a player
      operationId: DeleteChatV4Blocked
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatBlockPid'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ChatBlockPid'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/ChatBlockPid'
      responses:
        '204':
          description: No content
    get:
      tags:
        - chat
      summary: Get blocked players
      description: "**Response**:\n\n```\n{\n  \"blocked\": [\n    {\n      \"action\": \"[action]\",         // \"deny\" for blocked\n      \"name\": \"[name]\",             // player name\n      \"order\": \"[order],            // order in block list\n      \"pid\": \"[pid]\"                // player id\n    }\n  ]\n}\n```\n"
      operationId: GetChatV4Blocked
      parameters:
        - name: pid
          in: query
          schema:
            type: string
        - name: puuid
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatChatBlockedList'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChatChatBlockedList'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/ChatChatBlockedList'
    post:
      tags:
        - chat
      summary: Block a player
      operationId: PostChatV4Blocked
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatBlockPid'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ChatBlockPid'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/ChatBlockPid'
      responses:
        '204':
          description: No content
  /chat/v4/conversations:
    get:
      tags:
        - chat
      summary: Get all conversations
      description: 'Endpoint deleted July 2021; Please use ''/chat/v7/conversations'' or ''/chat/v7/conversations/{domain}''.'
      operationId: GetChatV4Conversations
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatUIStateConversationList'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChatUIStateConversationList'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/ChatUIStateConversationList'
  '/chat/v4/conversations/{cid}':
    delete:
      tags:
        - chat
      summary: Delete or leave a conversation by cid
      description: Endpoint deleted July 2021; Please use '/chat/v7/conversations' where 'cid' is a body argument.
      operationId: DeleteChatV4ConversationsByCid
      parameters:
        - name: cid
          in: path
          required: true
          schema:
            type: string
        - name: rchat-blocking
          in: query
          schema:
            type: boolean
      responses:
        '204':
          description: No content
    get:
      tags:
        - chat
      summary: Get a conversation by cid
      description: Endpoint deleted July 2021; Please use '/chat/v7/conversations?cid=xyz' with query arg if you need a specific conversation.
      operationId: GetChatV4ConversationsByCid
      parameters:
        - name: cid
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatUIStateConversationList'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChatUIStateConversationList'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/ChatUIStateConversationList'
    post:
      tags:
        - chat
      summary: Create or join a conversation by cid
      description: Endpoint deleted July 2021; Please use '/chat/v7/conversations' where 'cid' is a body argument. It supports federated chat better.
      operationId: PostChatV4ConversationsByCid
      parameters:
        - name: cid
          in: path
          required: true
          schema:
            type: string
        - name: rchat-blocking
          in: query
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatUIStateConversationJoin'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ChatUIStateConversationJoin'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/ChatUIStateConversationJoin'
      responses:
        '204':
          description: No content
    put:
      tags:
        - chat
      summary: Edit conversation by cid
      description: Endpoint deleted July 2021; Please use '/chat/v7/conversations' where 'cid' is a body argument.
      operationId: PutChatV4ConversationsByCid
      parameters:
        - name: cid
          in: path
          required: true
          schema:
            type: string
        - name: rchat-blocking
          in: query
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatUIStateConversationUpdate'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ChatUIStateConversationUpdate'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/ChatUIStateConversationUpdate'
      responses:
        '204':
          description: No content
  '/chat/v4/conversations/{cid}/messages':
    delete:
      tags:
        - chat
      summary: Clear conversation message history
      description: Endpoint deleted August 2021; Please use 'chat/v6/messages'.
      operationId: DeleteChatV4ConversationsByCidMessages
      parameters:
        - name: cid
          in: path
          required: true
          schema:
            type: string
        - name: rchat-blocking
          in: query
          schema:
            type: boolean
      responses:
        '204':
          description: No content
    get:
      tags:
        - chat
      summary: Get conversation messages
      description: "**Response**: named messages root object: a flat list of message property groups (could have zero or more entries):\n\n```\n{ \"messages\": [\n                  { \"body\": \"[message]\",            //actual text of this message\n                    \"pid\":  \"[{pid}]\",              //pid of sender\n                    \"name\": \"[name]\",               //name of sender\n                    \"ts\":   \"[timestamp]\",          //integer value: milliseconds UTC\n                    \"cid\":  \"[cid]\",                //conversation id\n                    \"id\":   \"[message id]\",         //unique key within the conversation - for storage\n                    \"read\": true/false,               //whether message has been marked as read or not\n                    \"type\": \"[chat, groupchat, dm]\" //how the message was sent: from friend, from group chat, or a direct message from player in a group chat\n                  },\n                  { \"body\": \"[message]\",\n                    \"pid\":  \"[{pid}]\",\n                    \"ts\":   \"[timestamp]\",\n                    \"cid\":  \"[cid]\",\n                    \"id\":   \"[message id]\",\n                    \"read\": true/false,\n                    \"type\": \"[chat, groupchat, dm]\"\n                  },\n                  ...\n                ]\n}\n```\n\n**NOTE**: messages are sorted by time-stamp, earliest first, latest last\n\n\nEndpoint deleted August 2021; Please use 'chat/v6/messages'."
      operationId: GetChatV4ConversationsByCidMessages
      parameters:
        - name: cid
          in: path
          required: true
          schema:
            type: string
        - name: rchat-blocking
          in: query
          schema:
            type: boolean
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatMessageList'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChatMessageList'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/ChatMessageList'
    post:
      tags:
        - chat
      summary: Send a new chat message to a room or individual
      description: "**Sending A Message**\nA conversation id (cid) can be a MUC cid or for peer to peer messages, a player id (pid) can be used as a cid.\n\n```\nPOST /chat/v3/conversations/{cid}/messages      //cid is the conversation id passed as a path argument\n```\nData:\n\n```\n{\n  \"message\": \"[message]\" //the text to send\n  \"type\"   : \"[chat, groupchat, dm]\"\n}\n```\nAdditional notes:\n\n* type - used to specify the type of message (inferred from conversation type if left blank)\n  * chat: for P2P messages with friends\n  * groupchat: for group messages within a group chat\n  * dm: for Direct Messages with somebody in a group chat with you, or with a friend\n\nAs players post messages to a conversation, chat notifies on REST in this order:\n\n* /chat/v3/conversations/\n  * with updated data:  \"unread_count\" and the last message ID in the conversation\n* /chat/v3/conversations/{cid}/messages\n  * a list of new messages for the conversation (earliest first, latest last, but many times just one new message)\n\n**Direct Messages (private messages within a group chat)**\n\nPrivate messages between players that are not friends are possible, and this messaging is always tied to a JWT authenticated group chat (MUC) that both players are a part of. The MUC they are a part of has its own conversation-id (cid) and the private conversation between participants includes that cid in its derived cid.  For example if players \"Brad\" and \"Sue\" are both in MUC \"lobby01@league.pvp.net\" and Brad sends a direct message to Sue, then his client will...\n\n```\nPOST /chat/v3/conversations/{cid}/messages      //where cid = \"lobby01@league.pvp.net/Sue\"\n```\nNOTE: all {cid} values should be URL encoded, so the example cid when sent url encoded is \"lobby01%40league.pvp.net%2FSue\"\n\nData:\n\n```\n{\n  \"message\": \"[message]\" //the text to send\n  \"type\"   : \"dm\"\n}      \n```\nAdditional notes:\n\n* The conversation object (and child objects like messages) from Brad's perspective will be at: /chat/v3/conversations/lobby01%40league.pvp.net%2FSue\n* The conversation from Sue's perspective will be at:  /chat/v3/conversations/lobby01%40league.pvp.net%2FBrad\n* All operations (GET participants, GET messages, POST messages, etc) are the same as regular conversations\n* for direct messaging, the conversation \"type\" and the message \"type\" will always be \"dm\" \n\n\nEndpoint deleted August 2021; Please use 'chat/v6/messages'."
      operationId: PostChatV4ConversationsByCidMessages
      parameters:
        - name: cid
          in: path
          required: true
          schema:
            type: string
        - name: rchat-blocking
          in: query
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatMessageSend'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ChatMessageSend'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/ChatMessageSend'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatMessageList'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChatMessageList'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/ChatMessageList'
  '/chat/v4/conversations/{cid}/messages/{id}':
    get:
      tags:
        - chat
      summary: Get a specific conversation message
      description: "**Response**: named messages root object: a flat list of message property groups (could have zero or more entries):\n\n```\n{ \"messages\": [\n                  { \"body\": \"[message]\",            //actual text of this message\n                    \"pid\":  \"[{pid}]\",              //pid of sender\n                    \"name\": \"[name]\",               //name of sender\n                    \"ts\":   \"[timestamp]\",          //integer value: milliseconds UTC\n                    \"cid\":  \"[cid]\",                //conversation id\n                    \"id\":   \"[message id]\",         //unique key within the conversation - for storage\n                    \"read\": true/false,               //whether message has been marked as read or not\n                    \"type\": \"[chat, groupchat, dm]\" //how the message was sent: from friend, from group chat, or a direct message from player in a group chat\n                  },\n                  { \"body\": \"[message]\",\n                    \"pid\":  \"[{pid}]\",\n                    \"ts\":   \"[timestamp]\",\n                    \"cid\":  \"[cid]\",\n                    \"id\":   \"[message id]\",\n                    \"read\": true/false,\n                    \"type\": \"[chat, groupchat, dm]\"\n                  },\n                  ...\n                ]\n}\n```\n\n**NOTE**: messages are sorted by time-stamp, earliest first, latest last\n\n\nEndpoint deleted August 2021; Please use 'chat/v6/messages'."
      operationId: GetChatV4ConversationsByCidMessagesById
      parameters:
        - name: cid
          in: path
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatMessageList'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChatMessageList'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/ChatMessageList'
  '/chat/v4/conversations/{cid}/participants':
    get:
      tags:
        - chat
      summary: Get the participants in a conversation
      description: "**Response:** named participants root object: a flat list of conversation participant property groups (could have zero or more entries):\n\n```\n{ \"participants\": [\n                      { \"cid\":  \"[cid]\",\n                        \"pid\":  \"[pid]\",\n                        \"name\": \"[name]\"\n                      },\n                      { \"cid\":  \"[cid]\",\n                        \"pid\":  \"[pid]\",\n                        \"name\": \"[name]\"\n                      },\n                        ...\n                      ]}\n```\n"
      operationId: GetChatV4ConversationsByCidParticipants
      parameters:
        - name: cid
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatChatPlayerParticipants'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChatChatPlayerParticipants'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/ChatChatPlayerParticipants'
  '/chat/v4/conversations/{cid}/participants/{pid}':
    get:
      tags:
        - chat
      summary: Get specific participant in a conversation
      description: "**Response:** named participants root object: a flat list of conversation participant property groups (could have zero or more entries):\n\n```\n{ \"participants\": [\n                      { \"cid\":  \"[cid]\",\n                        \"pid\":  \"[pid]\",\n                        \"name\": \"[name]\"\n                      },\n                      { \"cid\":  \"[cid]\",\n                        \"pid\":  \"[pid]\",\n                        \"name\": \"[name]\"\n                      },\n                        ...\n                      ]}\n```\n"
      operationId: GetChatV4ConversationsByCidParticipantsByPid
      parameters:
        - name: cid
          in: path
          required: true
          schema:
            type: string
        - name: pid
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatChatPlayerParticipants'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChatChatPlayerParticipants'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/ChatChatPlayerParticipants'
  '/chat/v4/conversations/{cid}/read':
    post:
      tags:
        - chat
      summary: Mark conversation as read
      description: Endpoint deleted July 2021; Please use '/chat/v7/conversations/read' where 'cid' is a body arg.
      operationId: PostChatV4ConversationsByCidRead
      parameters:
        - name: cid
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No content
  /chat/v4/conversations/active:
    delete:
      tags:
        - chat
      summary: Clear active conversation
      description: Endpoint deleted July 2021; Please use '/chat/v7/conversations/active'.
      operationId: DeleteChatV4ConversationsActive
      responses:
        '204':
          description: No content
    get:
      tags:
        - chat
      summary: Get active conversation
      description: Endpoint deleted July 2021; Please use '/chat/v7/conversations/active'.
      operationId: GetChatV4ConversationsActive
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatUIStateConversationList'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChatUIStateConversationList'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/ChatUIStateConversationList'
    put:
      tags:
        - chat
      summary: Set active conversation
      description: Endpoint deleted July 2021; Please use '/chat/v7/conversations/active'.
      operationId: PutChatV4ConversationsActive
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatActiveConvo'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ChatActiveConvo'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/ChatActiveConvo'
      responses:
        '204':
          description: No content
  '/chat/v4/conversations/muc/join/{name}':
    post:
      tags:
        - chat
      summary: Creates and joins a group conversation with the given name (debug builds only).
      description: 'Endpoint deleted July 2021; Sorry, not supporting this debug functionality moving forward.'
      operationId: PostChatV4ConversationsMucJoinByName
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: rchat-blocking
          in: query
          schema:
            type: boolean
      responses:
        '204':
          description: No content
  /chat/v4/friendrequests:
    delete:
      tags:
        - chat
      summary: Remove or decline friend request
      description: Endpoint deleted August 2021; Please use '/chat/v6/friendrequests'.
      operationId: DeleteChatV4Friendrequests
      parameters:
        - name: rchat-blocking
          in: query
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatRequestPid'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ChatRequestPid'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/ChatRequestPid'
      responses:
        '204':
          description: No content
    get:
      tags:
        - chat
      summary: Get friend requests
      description: "**Response:** named requests root object: a flat list of friend request property groups with 'pid' and 'name' inside (could have zero or more entries):\n\n```\n{\n  \"requests\": [\n    {\n      \"name\":         \"[friend name]\",\n      \"note\":         \"[friend note]\",     // Can be set to contain information about the friend request. (ex. recofriender saves the player name from social media here)\n      \"pid\":          \"[friend pid]\",\n      \"subscription\": \"pending_out\"        //either \"pending_out\" or \"pending_in\" (sent or received request)\n    }\n  ]\n}\n```\n\n\nEndpoint deleted August 2021; Please use '/chat/v6/friendrequests'."
      operationId: GetChatV4Friendrequests
      parameters:
        - name: pid
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatFriendRequestList'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChatFriendRequestList'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/ChatFriendRequestList'
    post:
      tags:
        - chat
      summary: Add friend request / invite friend
      description: Endpoint deleted August 2021; Please use '/chat/v6/friendrequests'.
      operationId: PostChatV4Friendrequests
      parameters:
        - name: rchat-blocking
          in: query
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatFriendRequestAdd'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ChatFriendRequestAdd'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/ChatFriendRequestAdd'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatFriendRequestList'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChatFriendRequestList'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/ChatFriendRequestList'
  /chat/v4/friends:
    delete:
      tags:
        - chat
      summary: Remove friend
      operationId: DeleteChatV4Friends
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatFriendPid'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ChatFriendPid'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/ChatFriendPid'
      responses:
        '204':
          description: No content
    get:
      tags:
        - chat
      summary: Get friends
      description: "**Response:** named friends root object: a flat list of friend property groups with 'pid' and 'name' inside (could have zero or more entries):```\n{\n  \"friends\": [\n    {\n      \"displayGroup\":   \"[display group name]\",   // The current display group of this friend. This will either be the regular group or a meta group (ex. \"MOBILE\", \"OFFLINE\")\n      \"group\":          \"[group name]\",           // The group this friend is a part of\n      \"name\":           \"[friend name]\",\n      \"note\":           \"[friend note]\",\n      \"pid\":            \"[friend pid]\",\n      \"priority\":       \"[group priority value]\"\n      \"last_online_ts\": \"[last online timestamp]\"\n    }\n    ...\n  ]\n}\n```\n"
      operationId: GetChatV4Friends
      parameters:
        - name: pid
          in: query
          schema:
            type: string
        - name: puuid
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatChatFriends'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChatChatFriends'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/ChatChatFriends'
    put:
      tags:
        - chat
      summary: Update a friend
      description: "**Data:**\n\n```\n{\n  \"puuid\":  \"[puuid]\",           //specify player to update\n  \"pid\":    \"[pid]\",             //specify player to update, JID format, if not using puuid\n  \"group\":  \"[new group name]\",  //if moving friend to different group, specify it here\n  \"note\":   \"[new friend note]\"  //if changing friend note, specify it here\n}\n```\n"
      operationId: PutChatV4Friends
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatFriendUpdate'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ChatFriendUpdate'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/ChatFriendUpdate'
      responses:
        '204':
          description: No content
  /chat/v4/groups:
    delete:
      tags:
        - chat
      summary: Delete a friend group
      operationId: DeleteChatV4Groups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatFriendGroupName'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ChatFriendGroupName'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/ChatFriendGroupName'
      responses:
        '204':
          description: No content
    get:
      tags:
        - chat
      summary: Get groups
      description: "**Response:** named groups root object: an ordered list of friend groups. First is highest displayed.  Could have one or more entries, always has a default group:\n\n```\n{\n  \"groups\": [\n    {\n      \"collapsed\":    [collapsed],                  // If the group is open or closed\n      \"isMetaGroup\":  [isMetaGroup],                // If the group is a meta group (ex. \"MOBILE\", \"OFFLINE\")\n      \"name\":        \"[group name]\"\n    }\n    ...\n  ]\n}\n```\n\n**Mobile and Offline Groups**\n\nThe mobile and offline groups will appear in the list of groups if the \"chatGroupMobile\" or \"chatGroupOffline\" settings are set to true. They will appear like this:\n\n```\n{\n  \"groups\": [\n    ...\n    {\n      \"collapsed\": [collapsed],\n      \"isMetaGroup\": true,\n      \"name\": \"MOBILE\"\n    },\n    ...\n    {\n      \"collapsed\": [collapsed],\n      \"isMetaGroup\": true,\n      \"name\": \"OFFLINE\"\n    }\n    ...\n  ]\n}\n```\n\nFriends who are either in the \"offline\" or \"mobile\" state will automatically be given the corresponding \"displayGroup\" (ex. either \"OFFLINE\" or \"MOBILE\") in place of their regular group name. If the settings are turned off the groups will be removed and the friends' \"displayGroup\"s will be set back to their regular group names.\n"
      operationId: GetChatV4Groups
      parameters:
        - name: name
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatChatGroupList'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChatChatGroupList'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/ChatChatGroupList'
    post:
      tags:
        - chat
      summary: Create a friend group
      description: "**Data:**\n\n```\n{\n\"name\":  \"[new group name]\"\n}\n```\nRequirements to create a friend group:\n\n1. name can't be empty --> error 400\n2. name can't happen to be the default group \"**Default\" --> error 403\n3. name can't happen to be a meta group, neither \"OFFLINE\" nor \"MOBILE\" --> error 403\n4. name can't already be the name of another group --> error 409\n"
      operationId: PostChatV4Groups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatFriendGroupCreate'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ChatFriendGroupCreate'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/ChatFriendGroupCreate'
      responses:
        '204':
          description: No content
    put:
      tags:
        - chat
      summary: Update a friend group
      description: "**Data:**\n\n```\n{\n\"collapsed\": [new collapsed]   //if collapsing or uncollapsing, specify it here\n\"name\":      \"[current name]\", //current name of group\n\"new_name\":  \"[new name]\",     //same name, or new name if renaming\n}\n```\n"
      operationId: PutChatV4Groups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatChatGroupUpdate'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ChatChatGroupUpdate'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/ChatChatGroupUpdate'
      responses:
        '204':
          description: No content
  /chat/v4/groups/order:
    put:
      tags:
        - chat
      summary: Order the friend groups
      operationId: PutChatV4GroupsOrder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatFriendGroupOrder'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ChatFriendGroupOrder'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/ChatFriendGroupOrder'
      responses:
        '204':
          description: No content
  /chat/v4/presences:
    get:
      tags:
        - chat
      summary: Get multi-game presences
      operationId: GetChatV4Presences
      parameters:
        - name: pid
          in: query
          schema:
            type: string
        - name: puuid
          in: query
          schema:
            type: string
        - name: product
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatMultiGamePresenceList'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChatMultiGamePresenceList'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/ChatMultiGamePresenceList'
  /chat/v5/conversations:
    delete:
      tags:
        - chat
      summary: Delete or leave a conversation
      description: Endpoint deleted July 2021; Please use '/chat/v7/conversations'.
      operationId: DeleteChatV5Conversations
      parameters:
        - name: rchat-blocking
          in: query
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatConvoCid'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ChatConvoCid'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/ChatConvoCid'
      responses:
        '204':
          description: No content
    get:
      tags:
        - chat
      summary: Get a conversation by cid
      description: 'Endpoint deleted July 2021; Please use ''/chat/v7/conversations'' or ''/chat/v7/conversations/{domain}''.'
      operationId: GetChatV5Conversations
      parameters:
        - name: cid
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatUIStateConversationList'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChatUIStateConversationList'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/ChatUIStateConversationList'
    post:
      tags:
        - chat
      summary: Create or join a conversation
      description: Endpoint deleted July 2021; Please use '/chat/v7/conversations'. It supports federated chat better.
      operationId: PostChatV5Conversations
      parameters:
        - name: rchat-blocking
          in: query
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatConvoJoin'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ChatConvoJoin'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/ChatConvoJoin'
      responses:
        '204':
          description: No content
    put:
      tags:
        - chat
      summary: Edit conversation
      description: Endpoint deleted July 2021; Please use '/chat/v7/conversations'.
      operationId: PutChatV5Conversations
      parameters:
        - name: rchat-blocking
          in: query
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatConvoUpdate'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ChatConvoUpdate'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/ChatConvoUpdate'
      responses:
        '204':
          description: No content
  /chat/v5/conversations/active:
    delete:
      tags:
        - chat
      summary: Clear active conversation
      description: Endpoint deleted July 2021; Please use '/chat/v7/conversations/active'.
      operationId: DeleteChatV5ConversationsActive
      responses:
        '204':
          description: No content
    get:
      tags:
        - chat
      summary: Get active conversation
      description: Endpoint deleted July 2021; Please use '/chat/v7/conversations/active'.
      operationId: GetChatV5ConversationsActive
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatUIStateConversationList'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChatUIStateConversationList'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/ChatUIStateConversationList'
    put:
      tags:
        - chat
      summary: Set active conversation
      description: Endpoint deleted July 2021; Please use '/chat/v7/conversations/active'.
      operationId: PutChatV5ConversationsActive
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatActiveConvo'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ChatActiveConvo'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/ChatActiveConvo'
      responses:
        '204':
          description: No content
  /chat/v5/conversations/read:
    post:
      tags:
        - chat
      summary: Mark conversation as read
      description: Endpoint deleted July 2021; Please use '/chat/v7/conversations/read'.
      operationId: PostChatV5ConversationsRead
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatConvoCid'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ChatConvoCid'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/ChatConvoCid'
      responses:
        '204':
          description: No content
  /chat/v5/friendrequests:
    delete:
      tags:
        - chat
      summary: Remove or decline friend request
      description: Endpoint deleted August 2021; Please use '/chat/v6/friendrequests'.
      operationId: DeleteChatV5Friendrequests
      parameters:
        - name: rchat-blocking
          in: query
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatRequestPuuid'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ChatRequestPuuid'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/ChatRequestPuuid'
      responses:
        '204':
          description: No content
    get:
      tags:
        - chat
      summary: Get friend requests
      description: "**Response:** named requests root object: a flat list of friend request property groups with 'puuid' and GnT info inside (could have zero or more entries in list):\n\n```\n{\n  \"requests\": [\n    {\n      \"gameName\":     \"[friend gameName]\",\n      \"tagLine\":      \"[friend tagLine]\",\n      \"note\":         \"[friend note]\",     // Can be set to contain information about the friend request. (ex. recofriender saves the player name from social media here)\n      \"puuid\":        \"[friend puuid]\",\n      \"subscription\": \"pending_out\"        //either \"pending_out\" or \"pending_in\" (sent or received request)\n    }\n  ]\n}\n```\n\n\nEndpoint deleted August 2021; Please use '/chat/v6/friendrequests'."
      operationId: GetChatV5Friendrequests
      parameters:
        - name: puuid
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatFriendRequestListPuuid'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChatFriendRequestListPuuid'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/ChatFriendRequestListPuuid'
    post:
      tags:
        - chat
      summary: Add friend request / invite friend
      description: Endpoint deleted August 2021; Please use '/chat/v6/friendrequests'.
      operationId: PostChatV5Friendrequests
      parameters:
        - name: rchat-blocking
          in: query
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatFriendRequestPost'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ChatFriendRequestPost'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/ChatFriendRequestPost'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatFriendRequestListPuuid'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChatFriendRequestListPuuid'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/ChatFriendRequestListPuuid'
  /chat/v5/messages:
    delete:
      tags:
        - chat
      summary: Clear conversation message history
      description: Endpoint deleted August 2021; Please use 'chat/v6/messages'.
      operationId: DeleteChatV5Messages
      parameters:
        - name: rchat-blocking
          in: query
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatConvoCid'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ChatConvoCid'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/ChatConvoCid'
      responses:
        '204':
          description: No content
    get:
      tags:
        - chat
      summary: Get conversation messages
      description: "**Response**: named messages root object: a flat list of message property groups (could have zero or more entries):\n\n```\n{ \"messages\": [\n                  { \"body\": \"[message]\",            //actual text of this message\n                    \"pid\":  \"[{pid}]\",              //pid of sender\n                    \"name\": \"[name]\",               //name of sender\n                    \"ts\":   \"[timestamp]\",          //integer value: milliseconds UTC\n                    \"cid\":  \"[cid]\",                //conversation id\n                    \"id\":   \"[message id]\",         //unique key within the conversation - for storage\n                    \"read\": true/false,               //whether message has been marked as read or not\n                    \"type\": \"[chat, groupchat, dm]\" //how the message was sent: from friend, from group chat, or a direct message from player in a group chat\n                  },\n                  { \"body\": \"[message]\",\n                    \"pid\":  \"[{pid}]\",\n                    \"ts\":   \"[timestamp]\",\n                    \"cid\":  \"[cid]\",\n                    \"id\":   \"[message id]\",\n                    \"read\": true/false,\n                    \"type\": \"[chat, groupchat, dm]\"\n                  },\n                  ...\n                ]\n}\n```\n\n**NOTE**: messages are sorted by time-stamp, earliest first, latest last\n\n\nEndpoint deleted August 2021; Please use 'chat/v6/messages'."
      operationId: GetChatV5Messages
      parameters:
        - name: cid
          in: query
          schema:
            type: string
        - name: mid
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatChatMessageList'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChatChatMessageList'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/ChatChatMessageList'
    post:
      tags:
        - chat
      summary: Send a new chat message to a room or individual
      description: "**Sending A Message**\nA conversation id (cid) can be a MUC cid or for peer to peer messages, a player id (pid) can be used as a cid.\n\n```\nPOST /chat/v3/conversations/{cid}/messages      //cid is the conversation id passed as a path argument\n```\nData:\n\n```\n{\n  \"message\": \"[message]\" //the text to send\n  \"type\"   : \"[chat, groupchat, dm]\"\n}\n```\nAdditional notes:\n\n* type - used to specify the type of message (inferred from conversation type if left blank)\n  * chat: for P2P messages with friends\n  * groupchat: for group messages within a group chat\n  * dm: for Direct Messages with somebody in a group chat with you, or with a friend\n\nAs players post messages to a conversation, chat notifies on REST in this order:\n\n* /chat/v3/conversations/\n  * with updated data:  \"unread_count\" and the last message ID in the conversation\n* /chat/v3/conversations/{cid}/messages\n  * a list of new messages for the conversation (earliest first, latest last, but many times just one new message)\n\n**Direct Messages (private messages within a group chat)**\n\nPrivate messages between players that are not friends are possible, and this messaging is always tied to a JWT authenticated group chat (MUC) that both players are a part of. The MUC they are a part of has its own conversation-id (cid) and the private conversation between participants includes that cid in its derived cid.  For example if players \"Brad\" and \"Sue\" are both in MUC \"lobby01@league.pvp.net\" and Brad sends a direct message to Sue, then his client will...\n\n```\nPOST /chat/v3/conversations/{cid}/messages      //where cid = \"lobby01@league.pvp.net/Sue\"\n```\nNOTE: all {cid} values should be URL encoded, so the example cid when sent url encoded is \"lobby01%40league.pvp.net%2FSue\"\n\nData:\n\n```\n{\n  \"message\": \"[message]\" //the text to send\n  \"type\"   : \"dm\"\n}      \n```\nAdditional notes:\n\n* The conversation object (and child objects like messages) from Brad's perspective will be at: /chat/v3/conversations/lobby01%40league.pvp.net%2FSue\n* The conversation from Sue's perspective will be at:  /chat/v3/conversations/lobby01%40league.pvp.net%2FBrad\n* All operations (GET participants, GET messages, POST messages, etc) are the same as regular conversations\n* for direct messaging, the conversation \"type\" and the message \"type\" will always be \"dm\" \n\n\nEndpoint deleted August 2021; Please use 'chat/v6/messages'."
      operationId: PostChatV5Messages
      parameters:
        - name: rchat-blocking
          in: query
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatMessagePost'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ChatMessagePost'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/ChatMessagePost'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatChatMessageList'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChatChatMessageList'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/ChatChatMessageList'
  '/chat/v5/messages/{domain}':
    get:
      tags:
        - chat
      summary: 'Get messages by domain (optional query args: cid &/or mid)'
      description: 'Endpoint deleted August 2021; Please use ''chat/v6/messages/{domain}''.'
      operationId: GetChatV5MessagesByDomain
      parameters:
        - name: domain
          in: path
          required: true
          schema:
            type: string
        - name: cid
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatChatMessageList'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChatChatMessageList'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/ChatChatMessageList'
  /chat/v5/participants:
    get:
      tags:
        - chat
      summary: Get specific participant in a conversation
      operationId: GetChatV5Participants
      parameters:
        - name: cid
          in: query
          schema:
            type: string
        - name: pid
          in: query
          schema:
            type: string
        - name: puuid
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatChatParticipants'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChatChatParticipants'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/ChatChatParticipants'
    put:
      tags:
        - chat
      summary: 'edit a player to mute or unmute them, across all conversations'
      operationId: PutChatV5Participants
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatParticipantEdit'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ChatParticipantEdit'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/ChatParticipantEdit'
      responses:
        '204':
          description: No content
  '/chat/v5/participants/{domain}':
    get:
      tags:
        - chat
      summary: 'Get conversations by domain (optional query arg: cid)'
      operationId: GetChatV5ParticipantsByDomain
      parameters:
        - name: domain
          in: path
          required: true
          schema:
            type: string
        - name: cid
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatChatParticipants'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChatChatParticipants'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/ChatChatParticipants'
  /chat/v6/conversations:
    delete:
      tags:
        - chat
      summary: Delete or leave a conversation
      description: Endpoint deleted August 2021; Please use '/chat/v7/conversations'.
      operationId: DeleteChatV6Conversations
      parameters:
        - name: rchat-blocking
          in: query
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatConvoCid'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ChatConvoCid'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/ChatConvoCid'
      responses:
        '204':
          description: No content
    get:
      tags:
        - chat
      summary: Get a conversation by cid
      description: Endpoint deleted August 2021; Please use '/chat/v7/conversations'.
      operationId: GetChatV6Conversations
      parameters:
        - name: cid
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatUIStateConversationList'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChatUIStateConversationList'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/ChatUIStateConversationList'
    post:
      tags:
        - chat
      summary: Create or join a conversation
      description: Endpoint deleted August 2021; Please use '/chat/v7/conversations'.
      operationId: PostChatV6Conversations
      parameters:
        - name: rchat-blocking
          in: query
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatConvoJoinFederated'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ChatConvoJoinFederated'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/ChatConvoJoinFederated'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatUIStateConversationList'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChatUIStateConversationList'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/ChatUIStateConversationList'
    put:
      tags:
        - chat
      summary: Edit conversation
      description: Endpoint deleted August 2021; Please use '/chat/v7/conversations'.
      operationId: PutChatV6Conversations
      parameters:
        - name: rchat-blocking
          in: query
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatConvoUpdate'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ChatConvoUpdate'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/ChatConvoUpdate'
      responses:
        '204':
          description: No content
  '/chat/v6/conversations/{domain}':
    get:
      tags:
        - chat
      summary: 'Get conversations by domain (optional query arg: cid)'
      description: Endpoint deleted August 2021; Please use '/chat/v7/conversations'.
      operationId: GetChatV6ConversationsByDomain
      parameters:
        - name: domain
          in: path
          required: true
          schema:
            type: string
        - name: cid
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatUIStateConversationList'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChatUIStateConversationList'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/ChatUIStateConversationList'
  /chat/v6/conversations/active:
    delete:
      tags:
        - chat
      summary: Clear active conversation
      description: Endpoint deleted August 2021; Please use '/chat/v7/conversations'.
      operationId: DeleteChatV6ConversationsActive
      responses:
        '204':
          description: No content
    get:
      tags:
        - chat
      summary: Get active conversation
      description: Endpoint deleted August 2021; Please use '/chat/v7/conversations'.
      operationId: GetChatV6ConversationsActive
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatUIStateConversationList'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChatUIStateConversationList'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/ChatUIStateConversationList'
    put:
      tags:
        - chat
      summary: Set active conversation
      description: Endpoint deleted August 2021; Please use '/chat/v7/conversations'.
      operationId: PutChatV6ConversationsActive
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatActiveConvo'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ChatActiveConvo'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/ChatActiveConvo'
      responses:
        '204':
          description: No content
  /chat/v6/conversations/read:
    post:
      tags:
        - chat
      summary: Mark conversation as read
      description: Endpoint deleted August 2021; Please use '/chat/v7/conversations'.
      operationId: PostChatV6ConversationsRead
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatConvoCid'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ChatConvoCid'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/ChatConvoCid'
      responses:
        '204':
          description: No content
  /chat/v6/friendrequests:
    delete:
      tags:
        - chat
      summary: Remove or decline friend request
      operationId: DeleteChatV6Friendrequests
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatRequestPuuid'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ChatRequestPuuid'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/ChatRequestPuuid'
      responses:
        '204':
          description: No content
    get:
      tags:
        - chat
      summary: Get friend requests
      description: "**Response:** named requests root object: a flat list of friend request property groups with 'puuid' and GnT info inside (could have zero or more entries in list):\n\n```\n{\n  \"requests\": [\n    {\n      \"gameName\":     \"[friend gameName]\",\n      \"tagLine\":      \"[friend tagLine]\",\n      \"note\":         \"[friend note]\",     // Can be set to contain information about the friend request. (ex. recofriender saves the player name from social media here)\n      \"puuid\":        \"[friend puuid]\",\n      \"subscription\": \"pending_out\"        //either \"pending_out\" or \"pending_in\" (sent or received request)\n    }\n  ]\n}\n```\n"
      operationId: GetChatV6Friendrequests
      parameters:
        - name: puuid
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatFriendRequestListPuuid'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChatFriendRequestListPuuid'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/ChatFriendRequestListPuuid'
    post:
      tags:
        - chat
      summary: Add friend request / invite friend
      operationId: PostChatV6Friendrequests
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatFriendRequestPost'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ChatFriendRequestPost'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/ChatFriendRequestPost'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatFriendRequestListPuuid'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChatFriendRequestListPuuid'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/ChatFriendRequestListPuuid'
  /chat/v6/messages:
    delete:
      tags:
        - chat
      summary: Clear conversation message history
      operationId: DeleteChatV6Messages
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatConvoCid'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ChatConvoCid'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/ChatConvoCid'
      responses:
        '204':
          description: No content
    get:
      tags:
        - chat
      summary: Get conversation messages
      description: "**Response**: named messages root object: a flat list of message property groups (could have zero or more entries):\n\n```\n{ \"messages\": [\n                  { \"body\": \"[message]\",            //actual text of this message\n                    \"pid\":  \"[{pid}]\",              //pid of sender\n                    \"name\": \"[name]\",               //name of sender\n                    \"ts\":   \"[timestamp]\",          //integer value: milliseconds UTC\n                    \"cid\":  \"[cid]\",                //conversation id\n                    \"id\":   \"[message id]\",         //unique key within the conversation - for storage\n                    \"read\": true/false,               //whether message has been marked as read or not\n                    \"type\": \"[chat, groupchat, dm]\" //how the message was sent: from friend, from group chat, or a direct message from player in a group chat\n                  },\n                  { \"body\": \"[message]\",\n                    \"pid\":  \"[{pid}]\",\n                    \"ts\":   \"[timestamp]\",\n                    \"cid\":  \"[cid]\",\n                    \"id\":   \"[message id]\",\n                    \"read\": true/false,\n                    \"type\": \"[chat, groupchat, dm]\"\n                  },\n                  ...\n                ]\n}\n```\n\n**NOTE**: messages are sorted by time-stamp, earliest first, latest last\n"
      operationId: GetChatV6Messages
      parameters:
        - name: cid
          in: query
          schema:
            type: string
        - name: mid
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatChatMessageList'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChatChatMessageList'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/ChatChatMessageList'
    post:
      tags:
        - chat
      summary: Send a new chat message to a room or individual
      description: "**Sending A Message**\nA conversation id (cid) can be a MUC cid or for peer to peer messages, a player id (pid) can be used as a cid.\n\n```\nPOST /chat/v3/conversations/{cid}/messages      //cid is the conversation id passed as a path argument\n```\nData:\n\n```\n{\n  \"message\": \"[message]\" //the text to send\n  \"type\"   : \"[chat, groupchat, dm]\"\n}\n```\nAdditional notes:\n\n* type - used to specify the type of message (inferred from conversation type if left blank)\n  * chat: for P2P messages with friends\n  * groupchat: for group messages within a group chat\n  * dm: for Direct Messages with somebody in a group chat with you, or with a friend\n\nAs players post messages to a conversation, chat notifies on REST in this order:\n\n* /chat/v3/conversations/\n  * with updated data:  \"unread_count\" and the last message ID in the conversation\n* /chat/v3/conversations/{cid}/messages\n  * a list of new messages for the conversation (earliest first, latest last, but many times just one new message)\n\n**Direct Messages (private messages within a group chat)**\n\nPrivate messages between players that are not friends are possible, and this messaging is always tied to a JWT authenticated group chat (MUC) that both players are a part of. The MUC they are a part of has its own conversation-id (cid) and the private conversation between participants includes that cid in its derived cid.  For example if players \"Brad\" and \"Sue\" are both in MUC \"lobby01@league.pvp.net\" and Brad sends a direct message to Sue, then his client will...\n\n```\nPOST /chat/v3/conversations/{cid}/messages      //where cid = \"lobby01@league.pvp.net/Sue\"\n```\nNOTE: all {cid} values should be URL encoded, so the example cid when sent url encoded is \"lobby01%40league.pvp.net%2FSue\"\n\nData:\n\n```\n{\n  \"message\": \"[message]\" //the text to send\n  \"type\"   : \"dm\"\n}      \n```\nAdditional notes:\n\n* The conversation object (and child objects like messages) from Brad's perspective will be at: /chat/v3/conversations/lobby01%40league.pvp.net%2FSue\n* The conversation from Sue's perspective will be at:  /chat/v3/conversations/lobby01%40league.pvp.net%2FBrad\n* All operations (GET participants, GET messages, POST messages, etc) are the same as regular conversations\n* for direct messaging, the conversation \"type\" and the message \"type\" will always be \"dm\" \n"
      operationId: PostChatV6Messages
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatMessagePost'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ChatMessagePost'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/ChatMessagePost'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatChatMessageList'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChatChatMessageList'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/ChatChatMessageList'
  '/chat/v6/messages/{domain}':
    get:
      tags:
        - chat
      summary: 'Get messages by domain (optional query args: cid &/or mid)'
      operationId: GetChatV6MessagesByDomain
      parameters:
        - name: domain
          in: path
          required: true
          schema:
            type: string
        - name: cid
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatChatMessageList'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChatChatMessageList'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/ChatChatMessageList'
  /chat/v7/conversations:
    delete:
      tags:
        - chat
      summary: Delete or leave a conversation
      operationId: DeleteChatV7Conversations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatConvoCid'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ChatConvoCid'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/ChatConvoCid'
      responses:
        '204':
          description: No content
    get:
      tags:
        - chat
      summary: Get a conversation by cid
      operationId: GetChatV7Conversations
      parameters:
        - name: cid
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatUIStateConversationList'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChatUIStateConversationList'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/ChatUIStateConversationList'
    post:
      tags:
        - chat
      summary: Create or join a conversation
      operationId: PostChatV7Conversations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatConvoJoinFederated'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ChatConvoJoinFederated'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/ChatConvoJoinFederated'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatUIStateConversationList'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChatUIStateConversationList'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/ChatUIStateConversationList'
    put:
      tags:
        - chat
      summary: Edit conversation
      operationId: PutChatV7Conversations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatConvoUpdate'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ChatConvoUpdate'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/ChatConvoUpdate'
      responses:
        '204':
          description: No content
  '/chat/v7/conversations/{domain}':
    get:
      tags:
        - chat
      summary: 'Get conversations by domain (optional query arg: cid)'
      operationId: GetChatV7ConversationsByDomain
      parameters:
        - name: domain
          in: path
          required: true
          schema:
            type: string
        - name: cid
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatUIStateConversationList'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChatUIStateConversationList'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/ChatUIStateConversationList'
  /chat/v7/conversations/active:
    delete:
      tags:
        - chat
      summary: Clear active conversation
      operationId: DeleteChatV7ConversationsActive
      responses:
        '204':
          description: No content
    get:
      tags:
        - chat
      summary: Get active conversation
      operationId: GetChatV7ConversationsActive
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatUIStateConversationList'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChatUIStateConversationList'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/ChatUIStateConversationList'
    put:
      tags:
        - chat
      summary: Set active conversation
      operationId: PutChatV7ConversationsActive
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatActiveConvo'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ChatActiveConvo'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/ChatActiveConvo'
      responses:
        '204':
          description: No content
  /chat/v7/conversations/read:
    post:
      tags:
        - chat
      summary: Mark conversation as read
      operationId: PostChatV7ConversationsRead
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatConvoCid'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ChatConvoCid'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/ChatConvoCid'
      responses:
        '204':
          description: No content
  /client-config/v1/authorization:
    delete:
      tags:
        - client-config
      summary: Removes the authorization. Triggers revocation of player configuration.
      operationId: DeleteClientConfigV1Authorization
      responses:
        '204':
          description: No content
    put:
      tags:
        - client-config
      summary: 'Updates the authorization information for this plugin. Pushed by the ClientConfigDepInjector. If this is the first authorization of session, triggers an initial fetch of player configuration.'
      operationId: PutClientConfigV1Authorization
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientConfigRiotClientAuthAuthorization'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ClientConfigRiotClientAuthAuthorization'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/ClientConfigRiotClientAuthAuthorization'
      responses:
        '204':
          description: No content
  /client-config/v1/config:
    get:
      tags:
        - client-config
      summary: 'Returns the configuration for the application. If config is not already cached locally, will make a blocking external request.'
      operationId: GetClientConfigV1Config
      parameters:
        - name: type
          in: query
          required: true
          schema:
            type: string
        - name: app
          in: query
          schema:
            type: string
        - name: version
          in: query
          schema:
            type: string
        - name: patchline
          in: query
          schema:
            type: string
        - name: region
          in: query
          schema:
            type: string
        - name: namespace
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/x-yaml:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/x-msgpack:
              schema:
                type: object
                additionalProperties:
                  type: object
  '/client-config/v1/config/{name}':
    get:
      tags:
        - client-config
      summary: 'Returns the single configuration value. If config is not already cached locally, will make a blocking external request.'
      operationId: GetClientConfigV1ConfigByName
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: type
          in: query
          required: true
          schema:
            type: string
        - name: app
          in: query
          schema:
            type: string
        - name: version
          in: query
          schema:
            type: string
        - name: patchline
          in: query
          schema:
            type: string
        - name: region
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/x-yaml:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/x-msgpack:
              schema:
                type: object
                additionalProperties:
                  type: object
  /client-config/v1/refresh-config-status:
    put:
      tags:
        - client-config
      summary: Refresh config status.
      operationId: PutClientConfigV1RefreshConfigStatus
      responses:
        '204':
          description: No content
  /client-config/v1/sessions:
    put:
      tags:
        - client-config
      summary: Updates the cached sessions.
      operationId: PutClientConfigV1Sessions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientConfigSessionsUpdate'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ClientConfigSessionsUpdate'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/ClientConfigSessionsUpdate'
      responses:
        '204':
          description: No content
  '/client-config/v1/status/{type}':
    get:
      tags:
        - client-config
      summary: Returns the status for the given config type which primarily indicates if the config type is ready for use.
      operationId: GetClientConfigV1StatusByType
      parameters:
        - name: type
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientConfigConfigStatus'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ClientConfigConfigStatus'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/ClientConfigConfigStatus'
  '/client-config/v2/config/{name}':
    get:
      tags:
        - client-config
      summary: Non-blocking request for a specific configuration field.
      description: "Returns an individual configuration field for the requesting application. Both Public and Player types are checked. Subscribing to a configuration field that does not exist results in event UPDATE notifications with an `BindingProperty::Empty` data field. If the receiving module intends to handle the does-not-exist case, the event handler should accept a BindingProperty, not a concrete resource type. \n\n* This call does not block. If config is not already cached locally, an async request will be dispatched.\n\n* If configuration has not yet been fetched, an HTTP 202 is returned. When the configuration is available, a resource notification will be sent to subscribers.\n\n* Configuration is automatically refreshed on state change (login, logout, or notification of change), and apps may be notified by subscribing to this endpoint.\n\n* Connecting game applications will have product information automatically applied to outgoing configuration requests (i.e. app name, version, patchline). This allows configuration overrides to be applied specifically for the app.\n\nResponse codes:\n- 200 If the field exists. The body will be the configuration value.\n- 202 If configuration has not yet been fetched, and updates can be received via subscription notifications.\n- 204 If the field does not exist, and all configuration has been successfully fetched."
      operationId: GetClientConfigV2ConfigByName
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/x-yaml:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/x-msgpack:
              schema:
                type: object
                additionalProperties:
                  type: object
  /client-config/v2/entitlements-token:
    delete:
      tags:
        - client-config
      summary: 'Deletes the entitlements token, if set. Triggers revocation of player configuration.'
      operationId: DeleteClientConfigV2EntitlementsToken
      responses:
        '204':
          description: No content
    put:
      tags:
        - client-config
      summary: Accepts updated entitlements token. Pushed by the ClientConfigDepInjector. Changes in entitlements trigger refresh of player configuration.
      operationId: PutClientConfigV2EntitlementsToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientConfigTokenV2'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ClientConfigTokenV2'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/ClientConfigTokenV2'
      responses:
        '204':
          description: No content
  /client-config/v2/namespace-changes:
    put:
      tags:
        - client-config
      summary: Refresh config status.
      operationId: PutClientConfigV2NamespaceChanges
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientConfigConfigNamespaceUpdate'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ClientConfigConfigNamespaceUpdate'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/ClientConfigConfigNamespaceUpdate'
      responses:
        '204':
          description: No content
  '/client-config/v2/namespace/{namespace}':
    get:
      tags:
        - client-config
      summary: Non-blocking request for public+player configurations in a namespace.
      description: "Returns the configuration for the requesting application in the given namespace for both Public and Player types.\n\n* This call does not block. If config is not already cached locally, an async request will be dispatched.\n\n* If configuration has not yet been fetched, an HTTP 202 is returned. When the configuration is available, a resource notification will be sent to subscribers.\n\n* Configuration is automatically refreshed on state change (login, logout, or notification of change), and apps may be notified by subscribing to this endpoint.\n\n* Connecting game applications will have product information automatically applied to outgoing configuration requests (i.e. app name, version, patchline). This allows configuration overrides to be applied specifically for the app.\n\n"
      operationId: GetClientConfigV2NamespaceByNamespace
      parameters:
        - name: namespace
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/x-yaml:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/x-msgpack:
              schema:
                type: object
                additionalProperties:
                  type: object
  '/client-config/v2/namespace/{namespace}/player':
    get:
      tags:
        - client-config
      summary: Non-blocking request for 'player' configurations in a namespace.
      description: "Returns the *player* configuration for the requesting application in the given namespace.\n\n* This call does not block. If config is not already cached locally, an async request will be dispatched.\n\n* If configuration has not yet been fetched, an HTTP 202 is returned. When the configuration is available, a resource notification will be sent to subscribers.\n\n* Configuration is automatically refreshed on state change (login, logout, or notification of change), and apps may be notified by subscribing to this endpoint.\n\n* Connecting game applications will have product information automatically applied to outgoing configuration requests (i.e. app name, version, patchline). This allows configuration overrides to be applied specifically for the app.\n\n* 'Player' configuration will have a delete notification sent to subscribers on logout.\n\n"
      operationId: GetClientConfigV2NamespaceByNamespacePlayer
      parameters:
        - name: namespace
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/x-yaml:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/x-msgpack:
              schema:
                type: object
                additionalProperties:
                  type: object
  '/client-config/v2/namespace/{namespace}/public':
    get:
      tags:
        - client-config
      summary: Non-blocking request for 'public' configurations in a namespace.
      description: "Returns the *public* configuration for the requesting application in the given namespace.\n\n* This call does not block. If config is not already cached locally, an async request will be dispatched.\n\n* If configuration has not yet been fetched, an HTTP 202 is returned. When the configuration is available, a resource notification will be sent to subscribers.\n\n* Configuration is automatically refreshed on state change (login, logout, or notification of change), and apps may be notified by subscribing to this endpoint.\n\n* Connecting game applications will have product information automatically applied to outgoing configuration requests (i.e. app name, version, patchline). This allows configuration overrides to be applied specifically for the app.\n\n"
      operationId: GetClientConfigV2NamespaceByNamespacePublic
      parameters:
        - name: namespace
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/x-yaml:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/x-msgpack:
              schema:
                type: object
                additionalProperties:
                  type: object
  /client-feature-flags/v1/debug/all-subscribed-flags:
    get:
      tags:
        - client-feature-flags
      summary: Returns all the feature flags that are currently subscribed.
      description: "*Internal Riot Client API. Only for use by plugins. Please don't use outside of Riot Client or the SDK.*\n\nReturns the keys and values of all feature flags that are currently subscribed -- that is, in active use by code."
      operationId: GetClientFeatureFlagsV1DebugAllSubscribedFlags
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/x-yaml:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/x-msgpack:
              schema:
                type: object
                additionalProperties:
                  type: object
  /client-feature-flags/v1/debug/mock-data:
    get:
      tags:
        - client-feature-flags
      summary: Retrieves the current set of mock data for the plugin.
      description: "*Internal Riot Client API. Only for use by plugins. Please don't use outside of Riot Client or the SDK.*\n\n"
      operationId: GetClientFeatureFlagsV1DebugMockData
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientFeatureFlagsConfigurationSource'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ClientFeatureFlagsConfigurationSource'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/ClientFeatureFlagsConfigurationSource'
    put:
      tags:
        - client-feature-flags
      summary: Sets the current set of mock data for the plugin.
      description: "*Internal Riot Client API. Only for use by plugins. Please don't use outside of Riot Client or the SDK.*\n\nThe entire data set is replaced in one call; partial updates are not supported. The best way to edit the current set of data is to use `GET /debug/mock-data`, modify the result, and `PUT` using this endpoint.\n\nSome minor fixups are performed with the provided data to ensure it is consistent. The plugin treats this as a 'oh hey, there is new data for client-config' event, and behaves appropriately."
      operationId: PutClientFeatureFlagsV1DebugMockData
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientFeatureFlagsConfigurationSource'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ClientFeatureFlagsConfigurationSource'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/ClientFeatureFlagsConfigurationSource'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/x-yaml:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/x-msgpack:
              schema:
                type: object
                additionalProperties:
                  type: object
  /client-feature-flags/v1/debug/mock-mode:
    delete:
      tags:
        - client-feature-flags
      summary: 'Leaves mock mode, and deletes mock data.'
      description: "*Internal Riot Client API. Only for use by plugins. Please don't use outside of Riot Client or the SDK.*\n\nWhen leaving mock mode, all data is refreshed from client-config and restored to normal."
      operationId: DeleteClientFeatureFlagsV1DebugMockMode
      responses:
        '204':
          description: No content
    get:
      tags:
        - client-feature-flags
      summary: Returns whether the plugin is in mock mode or not.
      description: "*Internal Riot Client API. Only for use by plugins. Please don't use outside of Riot Client or the SDK.*\n\nThe return type is a boolean -- `true` indicates that plugin data is currently being mocked."
      operationId: GetClientFeatureFlagsV1DebugMockMode
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: boolean
            application/x-yaml:
              schema:
                type: boolean
            application/x-msgpack:
              schema:
                type: boolean
    put:
      tags:
        - client-feature-flags
      summary: 'Enters mock mode, which allows using fake client-config data.'
      description: "*Internal Riot Client API. Only for use by plugins. Please don't use outside of Riot Client or the SDK.*\n\nWhen entering mock mode, the current data set from client-config is copied, and further updates from client-config are ignored. The plugin otherwise tries to behave as it would normally.\n\nUse the `/debug/mock-data` endpoint to get/set mocked data in this mode."
      operationId: PutClientFeatureFlagsV1DebugMockMode
      responses:
        '204':
          description: No content
  /client-feature-flags/v1/debug/overrides/flags:
    get:
      tags:
        - client-feature-flags
      summary: Retrieves the values of all overridden flags.
      description: "*Internal Riot Client API. Only for use by plugins. Please don't use outside of Riot Client or the SDK.*\n\nRetrieves the names and values of all currently set overrides."
      operationId: GetClientFeatureFlagsV1DebugOverridesFlags
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/x-yaml:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/x-msgpack:
              schema:
                type: object
                additionalProperties:
                  type: object
  '/client-feature-flags/v1/debug/overrides/flags/{namespace}/{flag}':
    delete:
      tags:
        - client-feature-flags
      summary: Removes an override for a feature flag.
      description: "*Internal Riot Client API. Only for use by plugins. Please don't use outside of Riot Client or the SDK.*\n\nRemoves the override for the specified feature flag. The value of the flag will immediately reflect that being reported by client-config."
      operationId: DeleteClientFeatureFlagsV1DebugOverridesFlagsByNamespaceByFlag
      parameters:
        - name: namespace
          in: path
          required: true
          schema:
            type: string
        - name: flag
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/x-yaml:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/x-msgpack:
              schema:
                type: object
                additionalProperties:
                  type: object
    put:
      tags:
        - client-feature-flags
      summary: Forcibly sets the value of a particular feature flag.
      description: "*Internal Riot Client API. Only for use by plugins. Please don't use outside of Riot Client or the SDK.*\n\nForcibly sets the value of a particular feature flag. The override will be in place until a subsequent `DELETE` on the override."
      operationId: PutClientFeatureFlagsV1DebugOverridesFlagsByNamespaceByFlag
      parameters:
        - name: namespace
          in: path
          required: true
          schema:
            type: string
        - name: flag
          in: path
          required: true
          schema:
            type: string
        - name: value
          in: query
          required: true
          schema:
            type: boolean
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/x-yaml:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/x-msgpack:
              schema:
                type: object
                additionalProperties:
                  type: object
  '/client-feature-flags/v1/flags/{namespace}/{flag}':
    get:
      tags:
        - client-feature-flags
      summary: Retrieves the value of a specific feature flag.
      description: "*Internal Riot Client API. Only for use by plugins. Please don't use outside of Riot Client or the SDK.*\n\nRetrieves the value of a specific feature flag. Implicitly subscribes, and updates to the feature flag will be broadcast.\n\nFlags which are not currently defined (or entitled) will always return `false` as the default value."
      operationId: GetClientFeatureFlagsV1FlagsByNamespaceByFlag
      parameters:
        - name: namespace
          in: path
          required: true
          schema:
            type: string
        - name: flag
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: boolean
            application/x-yaml:
              schema:
                type: boolean
            application/x-msgpack:
              schema:
                type: boolean
  /cookie-jar/v1/cookies:
    delete:
      tags:
        - cookie-jar
      summary: Delete existing cookies.
      operationId: DeleteCookieJarV1Cookies
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CookieJarCookie'
          application/x-yaml:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CookieJarCookie'
          application/x-msgpack:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CookieJarCookie'
      responses:
        '204':
          description: No content
    get:
      tags:
        - cookie-jar
      summary: Get all cookies.
      operationId: GetCookieJarV1Cookies
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CookieJarCookie'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CookieJarCookie'
            application/x-msgpack:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CookieJarCookie'
    post:
      tags:
        - cookie-jar
      summary: Set new cookies.
      operationId: PostCookieJarV1Cookies
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CookieJarCookie'
          application/x-yaml:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CookieJarCookie'
          application/x-msgpack:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CookieJarCookie'
      responses:
        '204':
          description: No content
  '/data-store/v1/install-settings/{+path}':
    get:
      tags:
        - data-store
      summary: Get the data for the specified key from the install settings.
      operationId: GetDataStoreV1InstallSettingsByPath
      parameters:
        - name: path
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/x-yaml:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/x-msgpack:
              schema:
                type: object
                additionalProperties:
                  type: object
    post:
      tags:
        - data-store
      summary: Set the data for the specified key from the install settings.
      operationId: PostDataStoreV1InstallSettingsByPath
      parameters:
        - name: path
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
          application/x-yaml:
            schema:
              type: object
              additionalProperties:
                type: object
          application/x-msgpack:
            schema:
              type: object
              additionalProperties:
                type: object
      responses:
        '204':
          description: No content
  /data-store/v1/paths:
    get:
      tags:
        - data-store
      summary: Get the data store paths.
      operationId: GetDataStoreV1Paths
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataPaths'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/DataPaths'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/DataPaths'
  '/data-store/v1/private-settings/{+path}':
    get:
      tags:
        - data-store
      summary: Get the data for the specified key from the private settings.
      operationId: GetDataStoreV1PrivateSettingsByPath
      parameters:
        - name: path
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/x-yaml:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/x-msgpack:
              schema:
                type: object
                additionalProperties:
                  type: object
    post:
      tags:
        - data-store
      summary: Set the data for the specified key from the private settings.
      operationId: PostDataStoreV1PrivateSettingsByPath
      parameters:
        - name: path
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
          application/x-yaml:
            schema:
              type: object
              additionalProperties:
                type: object
          application/x-msgpack:
            schema:
              type: object
              additionalProperties:
                type: object
      responses:
        '204':
          description: No content
  '/data-store/v1/product-settings/products/{productId}/patchlines/{patchlineId}':
    get:
      tags:
        - data-store
      summary: Get all settings for the specified product.
      operationId: GetDataStoreV1ProductSettingsProductsByProductIdPatchlinesByPatchlineId
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: string
        - name: patchlineId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/x-yaml:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/x-msgpack:
              schema:
                type: object
                additionalProperties:
                  type: object
    post:
      tags:
        - data-store
      summary: Set all settings for the specified product.
      operationId: PostDataStoreV1ProductSettingsProductsByProductIdPatchlinesByPatchlineId
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: string
        - name: patchlineId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
          application/x-yaml:
            schema:
              type: object
              additionalProperties:
                type: object
          application/x-msgpack:
            schema:
              type: object
              additionalProperties:
                type: object
      responses:
        '204':
          description: No content
  '/data-store/v1/product-settings/products/{productId}/patchlines/{patchlineId}/{+path}':
    get:
      tags:
        - data-store
      summary: Get the data for the specified key from the settings for the specified product.
      operationId: GetDataStoreV1ProductSettingsProductsByProductIdPatchlinesByPatchlineIdByPath
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: string
        - name: patchlineId
          in: path
          required: true
          schema:
            type: string
        - name: path
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/x-yaml:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/x-msgpack:
              schema:
                type: object
                additionalProperties:
                  type: object
    post:
      tags:
        - data-store
      summary: Set the data for the specified key from the settings for the specified product.
      operationId: PostDataStoreV1ProductSettingsProductsByProductIdPatchlinesByPatchlineIdByPath
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: string
        - name: patchlineId
          in: path
          required: true
          schema:
            type: string
        - name: path
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
          application/x-yaml:
            schema:
              type: object
              additionalProperties:
                type: object
          application/x-msgpack:
            schema:
              type: object
              additionalProperties:
                type: object
      responses:
        '204':
          description: No content
  '/data-store/v1/reload-product-settings/products/{productId}/patchlines/{patchlineId}':
    post:
      tags:
        - data-store
      summary: Reload all settings for the specified product.
      operationId: PostDataStoreV1ReloadProductSettingsProductsByProductIdPatchlinesByPatchlineId
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: string
        - name: patchlineId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No content
  '/data-store/v1/system-settings/{+path}':
    get:
      tags:
        - data-store
      summary: Get the setting for the specified key. This API is provided for host applications.
      operationId: GetDataStoreV1SystemSettingsByPath
      parameters:
        - name: path
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/x-yaml:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/x-msgpack:
              schema:
                type: object
                additionalProperties:
                  type: object
  /disambiguation/v1/magic-link:
    post:
      tags:
        - disambiguation
      summary: Retrieves the magic disambiguation link for the current auth'd account.
      operationId: PostDisambiguationV1MagicLink
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
            application/x-yaml:
              schema:
                type: string
            application/x-msgpack:
              schema:
                type: string
  /entitlements/v1/token:
    get:
      tags:
        - entitlements
      summary: 'Get V1 entitlements token, which contains the RSO access token.'
      description: "Callers should prefer /v2/token in order to acquire both access and ID token\n\nReturns HTTP 400 if the token is not ready."
      operationId: GetEntitlementsV1Token
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitlementsToken'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/EntitlementsToken'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/EntitlementsToken'
  /entitlements/v2/token:
    get:
      tags:
        - entitlements
      summary: 'Get V2 Entitlements token, which contains the default RSO authorization.'
      description: "'Authorization' pertains to the Riot Client application on desktop platforms and the host application for the embedded SDK.\n\nError codes:\n- Returns HTTP 404 if the token is not ready. Likely due to no authentication available.\n- 503 if Entitlements are disabled for this environment."
      operationId: GetEntitlementsV2Token
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitlementsTokenV2'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/EntitlementsTokenV2'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/EntitlementsTokenV2'
  /eula/v1/agreement:
    get:
      tags:
        - eula
      summary: "Returns an object containing metadata about the most recent published EULA, and a field, 'acceptance', indicating whether the user has accepted this agreement or not. (The 'acceptance' field is accessible separately via the /acceptance endpoint.\n\nWhen the 'acceptance' field is 'WaitingForAllServiceData', we don't have the data for the latest EULA, nor its acceptance state, and all other fields are invalid."
      operationId: GetEulaV1Agreement
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EulaAgreement'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/EulaAgreement'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/EulaAgreement'
  /eula/v1/agreement/acceptance:
    get:
      tags:
        - eula
      summary: "Returns the acceptance state of the most recent EULA for the current user. Possible values are:\n\n- WaitingForAllServiceData: The user is signed out, we have yet to retrieve client-config, or we are otherwise waiting for data to determine if the user has accepted the latest agreement.\n- AcceptanceRequired: The user has never accepted a EULA, or has not accepted the most recent version.\n- Accepted: The user has accepted the most recent EULA."
      operationId: GetEulaV1AgreementAcceptance
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EulaAcceptance'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/EulaAcceptance'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/EulaAcceptance'
    put:
      tags:
        - eula
      summary: Accepts the most recent EULA for the current user.
      operationId: PutEulaV1AgreementAcceptance
      responses:
        '204':
          description: No content
  /eula/v1/agreement/content:
    get:
      tags:
        - eula
      summary: Returns the content of the current version EULA.
      operationId: GetEulaV1AgreementContent
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
            application/x-yaml:
              schema:
                type: string
            application/x-msgpack:
              schema:
                type: string
  /eula/v1/debug/agreement/force-requirement:
    post:
      tags:
        - eula
      summary: Forces client into requiring acceptance
      operationId: PostEulaV1DebugAgreementForceRequirement
      responses:
        '204':
          description: No content
  /eula/v1/debug/agreement/short-agreement-content:
    put:
      tags:
        - eula
      summary: Simulate short agreement content. This is disabled in public builds.
      operationId: PutEulaV1DebugAgreementShortAgreementContent
      responses:
        '204':
          description: No content
  /eula/v1/external-legal-links:
    get:
      tags:
        - eula
      summary: Returns the web URLs for Terms of Service and Privacy Noticeaccording to the most appropriate locale for the agreement you are bound to
      operationId: GetEulaV1ExternalLegalLinks
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EulaExternalLegalLinks'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/EulaExternalLegalLinks'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/EulaExternalLegalLinks'
  /eula/v1/privacy-policy:
    get:
      tags:
        - eula
      summary: Returns the current privacy policy data.
      operationId: GetEulaV1PrivacyPolicy
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EulaPrivacyPolicy'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/EulaPrivacyPolicy'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/EulaPrivacyPolicy'
  /eula/v1/privacy-policy/content:
    get:
      tags:
        - eula
      summary: Returns the content of the current privacy policy.
      operationId: GetEulaV1PrivacyPolicyContent
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
            application/x-yaml:
              schema:
                type: string
            application/x-msgpack:
              schema:
                type: string
  /eula/v1/product-context:
    delete:
      tags:
        - eula
      summary: Resets the current product context.
      operationId: DeleteEulaV1ProductContext
      responses:
        '204':
          description: No content
    get:
      tags:
        - eula
      summary: Gets the current product context.
      operationId: GetEulaV1ProductContext
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EulaProductContext'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/EulaProductContext'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/EulaProductContext'
    put:
      tags:
        - eula
      summary: Set the current product context.
      operationId: PutEulaV1ProductContext
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EulaProductContext'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/EulaProductContext'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/EulaProductContext'
      responses:
        '204':
          description: No content
  /first-party-fulfillment/v1/fulfill:
    post:
      tags:
        - first-party-fulfillment
      summary: Initiate a fulfillment attempt
      description: "\n**Description**\n\nInitiates the fulfillment process with a first party if there are any items to fulfill.\n\n**Arguments**\n\n* `firstPartyAuthToken`: Authentication token for the first party platform required to perform fulfillment.\n    * On Nintendo Switch, provide the NSA ID token if available. Otherwise, RiotGamesApi will fetch the NSA ID token itself.\n    * On Playstation 4 and Playstation 5, provide an NP auth code.\n    * On Xbox, no token is required and an empty string can be provided.\n* `fulfillmentId`: UUID that identifies a unique fulfillment attempt.\n* `fulfillmentReason`: The reason why the fulfillment attempt was made. Possible options are listed below:\n    * `GameLaunched`: Fulfillment was initiated because a purchase may have occurred while the game was not running.\n    * `GameReturnedToForeground`: Fulfillment was initiated because a purchase may have occurred while the game was in the background.\n    * `PurchaseCompleted`: Fulfillment was initiated because a purchase was completed (likely from the in-game store).\n    * `Other`: DO NOT USE without consulting the SDK Features team first. This is a fallback reason for why a fulfillment was initiated if it\n      is not covered by any of the existing reasons. However, you should only use this if SDK Features is not able to add a reason that covers\n      your use case before you need to use it and once SDK Features does add the reason, you are expected to update to using it as soon as it\n      has been made available in the next SDK release.\n\n"
      operationId: PostFirstPartyFulfillmentV1Fulfill
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FirstPartyFulfillmentFirstPartyFulfillmentFulfillmentRequest'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/FirstPartyFulfillmentFirstPartyFulfillmentFulfillmentRequest'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/FirstPartyFulfillmentFirstPartyFulfillmentFulfillmentRequest'
      responses:
        '204':
          description: No content
  /friends/v1/add-friend-ui:
    post:
      tags:
        - friends
      summary: Shows platform specific UI for adding a friend
      description: "\n**Description**\n\nShows platform specific UI for adding platform friends. Must specify either a riotId or a platformId. PlatformId will be prioritized if provided otherwise RiotId will be converted to a platform specific ID.\n\n**Nintendo Switch**\n* Shows the native Nintendo Switch UI to send a Nintendo Switch friend request to the specified friend\n* **Will block until user input on native ui completes**\n* Must be exactly 1 opened user prior to calling add-friend-ui\n* platformId must be a Network Services Account ID\n* RiotId not yet supported. When supported will convert to Nintendo Network Services ID to add the user as a nintendo switch friend.\n"
      operationId: PostFriendsV1AddFriendUi
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FriendsFriendsV1AddFriendData'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/FriendsFriendsV1AddFriendData'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/FriendsFriendsV1AddFriendData'
      responses:
        '204':
          description: No content
  /friends/v1/block-list:
    get:
      tags:
        - friends
      summary: Returns platform specific information about a user's blocked users
      description: "\n**Description**\n\nReturns the list of user IDs blocked by the current user on the local platform.\n\n**Nintendo Switch**\n* Must be exactly 1 opened user prior to calling block-list\n"
      operationId: GetFriendsV1BlockList
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FriendsFriendsV1BlockListOptions'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/FriendsFriendsV1BlockListOptions'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/FriendsFriendsV1BlockListOptions'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FriendsFriendsV1BlockInfoList'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/FriendsFriendsV1BlockInfoList'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/FriendsFriendsV1BlockInfoList'
  /friends/v1/friends-list:
    get:
      tags:
        - friends
      summary: Retrieves platform information for local platform friends
      description: "\n**Description**\n\nReturns the profile information for platform friends.\n\n**Nintendo Switch**\n* Must be exactly 1 opened user prior to calling friends-list\n"
      operationId: GetFriendsV1FriendsList
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FriendsFriendsV1FriendsListOptions'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/FriendsFriendsV1FriendsListOptions'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/FriendsFriendsV1FriendsListOptions'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FriendsFriendsV1ProfileInfoList'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/FriendsFriendsV1ProfileInfoList'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/FriendsFriendsV1ProfileInfoList'
  /friends/v1/platform-only-block-list:
    get:
      tags:
        - friends
      summary: Returns Riot puuids for blocked users that have been blocked locally but have not been blocked at the Riot level.
      description: "\n**Description**\n\nReturns the list of Riot puuids blocked by the current user on the local platform that have not already been blocked at the Riot level.\n\n**Nintendo Switch**\n* Must be exactly 1 opened user prior to calling /friends/v1/platform-only-block-list\n"
      operationId: GetFriendsV1PlatformOnlyBlockList
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FriendsFrindsV1BlockInfoList'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/FriendsFrindsV1BlockInfoList'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/FriendsFrindsV1BlockInfoList'
  /friends/v1/profile-info:
    get:
      tags:
        - friends
      summary: Returns platform specific profile info for one or more users
      description: "\n**Description**\n\nGets basic profile information for each id in {request.ids} including nickname and profile picture urls.\n\n**Nintendo Switch**\n* Must be exactly 1 opened user prior to calling profile-info\n* Can request 1 to 100 ids at a time\n* Calls nn::friends::GetProfileList, which has usage and rate guidelines. See [Nintendo Guidelines](https://developer.nintendo.com/html/online-docs/g1kr9vj6-en/Packages/Docs/Guidelines/NX-Guidelines/contents/Pages/Page_242589701.html#GuidelineDescLabel_275307940)\n"
      operationId: GetFriendsV1ProfileInfo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FriendsFriendsV1ProfilesRequest'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/FriendsFriendsV1ProfilesRequest'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/FriendsFriendsV1ProfilesRequest'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FriendsFriendsV1ProfileInfoList'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/FriendsFriendsV1ProfileInfoList'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/FriendsFriendsV1ProfileInfoList'
  /friends/v1/promote-blocks:
    post:
      tags:
        - friends
      summary: Promotes a local console platform blocked user into a Riot level block.
      description: "\n**Description**\n\nBlocks the linked Riot accounts of the user IDs at the Riot chat level. Promotion of blocks at this level is one-way, and at one time.\n\nRequired arguments:\n```\n`blockIds`: NSA IDs of users\n```\n\n**Nintendo Switch**\n* Requires NSA IDs of other users\n"
      operationId: PostFriendsV1PromoteBlocks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FriendsFriendsV1PromoteBlockData'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/FriendsFriendsV1PromoteBlockData'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/FriendsFriendsV1PromoteBlockData'
      responses:
        '204':
          description: No content
  /friends/v1/show-profile-ui:
    post:
      tags:
        - friends
      summary: Shows the platform specific profile UI for a target user
      description: "\n**Description**\n\nShows the platform specific profile UI for a target user.\n\nRequired arguments:\n```\n`platformId`: Platform specific ID of the user to show the platform profile information for.\n`myDisplayName`: The display name of the user viewing the profile.\n`targetDisplayName`: The display name of the user whose profile is being viewed.\n```\n\n**Nintendo Switch**\n* Shows the native Nintendo Switch UI to view the online profile of the specified user\n* **Will block until user input on native ui completes**\n* Must be exactly 1 opened user prior to calling show-profile-ui\n* platformId must be a Network Services Account ID\n"
      operationId: PostFriendsV1ShowProfileUi
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FriendsFriendsV1ShowProfileData'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/FriendsFriendsV1ShowProfileData'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/FriendsFriendsV1ShowProfileData'
      responses:
        '204':
          description: No content
  /ga-warning/v1/debug/caller-id/mock-id:
    delete:
      tags:
        - ga-warning
      summary: Stops mocking the caller ID for Swagger calls
      description: Deletes the currently set `productId` and `patchlineId`. Plugin APIs will receive `swagger` as the `productId`.
      operationId: DeleteGaWarningV1DebugCallerIdMockId
      responses:
        '204':
          description: No content
    get:
      tags:
        - ga-warning
      summary: Checks the caller ID in use when APIs are called from Swagger
      description: "Returns the `productId` and `patchlineId` being passed to APIs in this plugin when called via Swagger.\n\nReturns 404 if a mock caller ID is not in use."
      operationId: GetGaWarningV1DebugCallerIdMockId
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GaWarningPluginCallerId_MockCallerId'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/GaWarningPluginCallerId_MockCallerId'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/GaWarningPluginCallerId_MockCallerId'
    put:
      tags:
        - ga-warning
      summary: Sets the caller ID to use when calling this plugin from Swagger
      description: "Sets the `productId` and `patchlineId` to pass to APIs in this plugin during future calls from Swagger.\n\nUse this functionality to test APIs in this plugin with Swagger, as if they were being called from another product."
      operationId: PutGaWarningV1DebugCallerIdMockId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GaWarningPluginCallerId_MockCallerId'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/GaWarningPluginCallerId_MockCallerId'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/GaWarningPluginCallerId_MockCallerId'
      responses:
        '204':
          description: No content
  '/ga-warning/v1/debug/simulate-warning/{category}':
    post:
      tags:
        - ga-warning
      summary: Simulate sending a game-agnostic warning message to this player with a specific category. Endpoint not available in public builds.
      description: "\n**Data**\n\n* `category`: The category is a key used to create the localized message for the player. As an example, `INAPPROPRIATE_TEXT` is the category\nsent when a player was flagged for inappropriate chat. If the category is unrecognized, a fallback message will be used.\n"
      operationId: PostGaWarningV1DebugSimulateWarningByCategory
      parameters:
        - name: category
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No content
  /ga-warning/v1/warnings:
    get:
      tags:
        - ga-warning
      summary: Provides a list of unacknowledged localized game-agnostic warnings to show the player.
      description: "\n**Description**\n\nYou will only get warnings for the current game. To make testing easier, there are debug endpoints on this plugin that allow you to mock your current game.\n\n**Response Body**\n\n* `gaWarningMessage`: Top-level response field. If there are no unacknowledged warnings, this will be empty object `{}`.\nOtherwise it will contain unacknowledged warnings keyed by their ID.\n* `gaWarningMessage.{id}`: Represents a single unacknowledged warning.\n  * `gaWarningMessage.{id}.category`: Category of the warning message--internal string.\n  * `gaWarningMessage.{id}.locale`: Detected locale of player and what locale the message was localized to.\n  * `gaWarningMessage.{id}.message`: Localized message to display to player.\n  * `gaWarningMessage.{id}.title`: Localized message title to display to player.\n  * `gaWarningMessage.{id}.acknowledgeText`: Localized text player must type to acknowledge the warning.\n  * (OPTIONAL) `gaWarningMessage.{id}.seeMoreUrl`: Hyperlink to give players more context about community guidelines. This field and `seeMoreLabel` won't always be present and you should build your UI to account for that.\n  * (OPTIONAL) `gaWarningMessage.{id}.seeMoreLabel`: Label for `seeMoreUrl`. Do not display the raw link, use this label instead. This field and `seeMoreUrl` won't always be present and you should build your UI to account for that.\n\n**Response Codes**\n* `200`: Success.\n* `401`: Player must be logged in.\n"
      operationId: GetGaWarningV1Warnings
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GaWarningWarningResponse'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/GaWarningWarningResponse'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/GaWarningWarningResponse'
  /ga-warning/v1/warnings/ack:
    delete:
      tags:
        - ga-warning
      summary: Acknowledges all warnings for the current game.
      operationId: DeleteGaWarningV1WarningsAck
      responses:
        '204':
          description: No content
  '/ga-warning/v1/warnings/ack/{id}':
    delete:
      tags:
        - ga-warning
      summary: Acknowledges a specific GA player warning.
      description: "\n**Description**\n\nAcknowledges warning that has ID with {id}. See GET warnings endpoint for more info on how to find `{id}`.\n\n**Response Codes**\n* `404`: No warning with that ID found.\n* `204`: Warning found and acknowledged (deleted).\n"
      operationId: DeleteGaWarningV1WarningsAckById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No content
  /game-session/v1/clusters:
    get:
      tags:
        - game-session
      summary: Gets a list of all available clusters. Cluster IDs arrive asynchronously and may not be immediately avaiable. The logic of selecting the optimal cluster for a player is up to the game team.
      operationId: GetGameSessionV1Clusters
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GameSessionGameSessionV1ClusterList'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/GameSessionGameSessionV1ClusterList'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/GameSessionGameSessionV1ClusterList'
  /game-session/v1/debug/caller-id/mock-id:
    delete:
      tags:
        - game-session
      summary: Stops mocking the caller ID for Swagger calls
      description: Deletes the currently set `productId` and `patchlineId`. Plugin APIs will receive `swagger` as the `productId`.
      operationId: DeleteGameSessionV1DebugCallerIdMockId
      responses:
        '204':
          description: No content
    get:
      tags:
        - game-session
      summary: Checks the caller ID in use when APIs are called from Swagger
      description: "Returns the `productId` and `patchlineId` being passed to APIs in this plugin when called via Swagger.\n\nReturns 404 if a mock caller ID is not in use."
      operationId: GetGameSessionV1DebugCallerIdMockId
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GameSessionPluginCallerId_MockCallerId'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/GameSessionPluginCallerId_MockCallerId'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/GameSessionPluginCallerId_MockCallerId'
    put:
      tags:
        - game-session
      summary: Sets the caller ID to use when calling this plugin from Swagger
      description: "Sets the `productId` and `patchlineId` to pass to APIs in this plugin during future calls from Swagger.\n\nUse this functionality to test APIs in this plugin with Swagger, as if they were being called from another product."
      operationId: PutGameSessionV1DebugCallerIdMockId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GameSessionPluginCallerId_MockCallerId'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/GameSessionPluginCallerId_MockCallerId'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/GameSessionPluginCallerId_MockCallerId'
      responses:
        '204':
          description: No content
  /game-session/v1/sessions:
    post:
      tags:
        - game-session
      summary: 'Creates a request for GAPS login queue, bypass queue, and session services.'
      description: "Creates a GAPS Session Funnel request that interacts with 1-3 services based on the supplied options. Requests are handle asynchronously and reported by through changes to the `state` property of this resource. Use the generated `id` field as a path parameter to subscribe to this specific funnel instance.\n\nPlayers exiting the funnel will exit with one of several known states indicated by the `message` field of theis resource. Session heartbeats and queue polling are handled transparently, as are server-side kicks."
      operationId: PostGameSessionV1Sessions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GameSessionGameSessionV1GameSessionRequest'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/GameSessionGameSessionV1GameSessionRequest'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/GameSessionGameSessionV1GameSessionRequest'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GameSessionGameSessionV1GameSessionId'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/GameSessionGameSessionV1GameSessionId'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/GameSessionGameSessionV1GameSessionId'
  '/game-session/v1/sessions/{sessionId}':
    delete:
      tags:
        - game-session
      summary: Requests to disconnect the player from the session.
      operationId: DeleteGameSessionV1SessionsBySessionId
      parameters:
        - name: sessionId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No content
    get:
      tags:
        - game-session
      summary: Gets the status of the specified session.
      operationId: GetGameSessionV1SessionsBySessionId
      parameters:
        - name: sessionId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GameSessionGameSessionV1GameSessionResponse'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/GameSessionGameSessionV1GameSessionResponse'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/GameSessionGameSessionV1GameSessionResponse'
  '/info-radiator/v1/custom-heartbeat-metric/{name}':
    delete:
      tags:
        - info-radiator
      summary: 'Delete a custom heartbeat metric, if it exists'
      operationId: DeleteInfoRadiatorV1CustomHeartbeatMetricByName
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No content
    put:
      tags:
        - info-radiator
      summary: Create or update the value of a custom heartbeat metric
      operationId: PutInfoRadiatorV1CustomHeartbeatMetricByName
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
          application/x-yaml:
            schema:
              type: object
              additionalProperties:
                type: object
          application/x-msgpack:
            schema:
              type: object
              additionalProperties:
                type: object
      responses:
        '204':
          description: No content
  '/info-radiator/v1/time-sample/{phaseName}/end':
    post:
      tags:
        - info-radiator
      summary: Mark the end of the time phase sample and send an event to Analytics Platform conforming to the `riotclient__TimeSample__v4` schema.
      operationId: PostInfoRadiatorV1TimeSampleByPhaseNameEnd
      parameters:
        - name: phaseName
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No content
  '/info-radiator/v1/time-sample/{phaseName}/start':
    post:
      tags:
        - info-radiator
      summary: 'Track the start time for a time phase sample of interest. Call `/info-radiator/v1/time-sample/{phase}/end` to mark the end of the sample.'
      operationId: PostInfoRadiatorV1TimeSampleByPhaseNameStart
      parameters:
        - name: phaseName
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No content
  /jwt-authenticator/v1/verify:
    post:
      tags:
        - jwt-authenticator
      summary: Verify a JWT
      operationId: PostJwtAuthenticatorV1Verify
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JwtAuthenticatorJWTVerifyResource'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/JwtAuthenticatorJWTVerifyResource'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/JwtAuthenticatorJWTVerifyResource'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/x-yaml:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/x-msgpack:
              schema:
                type: object
                additionalProperties:
                  type: object
  /kr-account/config/v1/config:
    get:
      tags:
        - kr-account
      summary: The current plugin configuration.
      description: Debug information allowing the ability to introspect the current plugin config.
      operationId: GetKrAccountConfigV1Config
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KrAccountKrAccountPluginConfig'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/KrAccountKrAccountPluginConfig'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/KrAccountKrAccountPluginConfig'
  /kr-account/promotion/v1/session:
    get:
      tags:
        - kr-account
      summary: Get KR account session token for KR Account Promotion flow
      operationId: GetKrAccountPromotionV1Session
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KrAccountAccountPromotionSession'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/KrAccountAccountPromotionSession'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/KrAccountAccountPromotionSession'
  '/loyalty/v1/debug/set-loyalty-resource/{pcbId}':
    post:
      tags:
        - loyalty
      summary: Sets a loyalty resource for testing purposes - DEBUG ONLY
      operationId: PostLoyaltyV1DebugSetLoyaltyResourceByPcbId
      parameters:
        - name: pcbId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoyaltyV2PCBangInfo'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/LoyaltyV2PCBangInfo'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/LoyaltyV2PCBangInfo'
  /loyalty/v1/loyalty-resource:
    get:
      tags:
        - loyalty
      summary: Returns loyalty resource including pcbId if player's playing from pcbang or not found exception
      operationId: GetLoyaltyV1LoyaltyResource
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoyaltyV2PCBangInfo'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/LoyaltyV2PCBangInfo'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/LoyaltyV2PCBangInfo'
  /mailbox/v1/check-new-mail:
    get:
      tags:
        - mailbox
      summary: Returns if the mailbox has new mail
      description: "\n**Description**\n\nThis API is subscribable and for notifications that new mail is available.\n"
      operationId: GetMailboxV1CheckNewMail
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MailboxMailboxStatusUpdated'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/MailboxMailboxStatusUpdated'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/MailboxMailboxStatusUpdated'
  '/mailbox/v1/check-new-product-mail/{productId}':
    get:
      tags:
        - mailbox
      summary: Returns if the mailbox has new mail
      description: "\n**Description**\n\nThis API is subscribable and for notifications that new mail is available. This is the internal implementation meant to be used by other plugins.\n\nRequired arguments:\n```\nproductId: A standard [product identifier](https://gh.riotgames.com/shared-static-data/rpg/tree/master/products)\n```\n"
      operationId: GetMailboxV1CheckNewProductMailByProductId
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MailboxMailboxStatusUpdated'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/MailboxMailboxStatusUpdated'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/MailboxMailboxStatusUpdated'
  /mailbox/v1/debug/caller-id/mock-id:
    delete:
      tags:
        - mailbox
      summary: Stops mocking the caller ID for Swagger calls
      description: Deletes the currently set `productId` and `patchlineId`. Plugin APIs will receive `swagger` as the `productId`.
      operationId: DeleteMailboxV1DebugCallerIdMockId
      responses:
        '204':
          description: No content
    get:
      tags:
        - mailbox
      summary: Checks the caller ID in use when APIs are called from Swagger
      description: "Returns the `productId` and `patchlineId` being passed to APIs in this plugin when called via Swagger.\n\nReturns 404 if a mock caller ID is not in use."
      operationId: GetMailboxV1DebugCallerIdMockId
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MailboxPluginCallerId_MockCallerId'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/MailboxPluginCallerId_MockCallerId'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/MailboxPluginCallerId_MockCallerId'
    put:
      tags:
        - mailbox
      summary: Sets the caller ID to use when calling this plugin from Swagger
      description: "Sets the `productId` and `patchlineId` to pass to APIs in this plugin during future calls from Swagger.\n\nUse this functionality to test APIs in this plugin with Swagger, as if they were being called from another product."
      operationId: PutMailboxV1DebugCallerIdMockId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MailboxPluginCallerId_MockCallerId'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/MailboxPluginCallerId_MockCallerId'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/MailboxPluginCallerId_MockCallerId'
      responses:
        '204':
          description: No content
  /mailbox/v1/enabled:
    get:
      tags:
        - mailbox
      summary: Returns whether or not the mailbox feature is enabled for this environment
      description: "\n**Description**\n\nThis API is subscribable and use to verify the feature is enabled in the current loaded cluster config.\n\n"
      operationId: GetMailboxV1Enabled
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: boolean
            application/x-yaml:
              schema:
                type: boolean
            application/x-msgpack:
              schema:
                type: boolean
  /mailbox/v1/mail:
    post:
      tags:
        - mailbox
      summary: Returns a list of player's mail.
      description: "\n**Description**\n\nThis API allows for retrieving mail and the product ID is inferred.\n\nRequired request parameters:\n```\nincludedStates : A list of message states, like READ or ACKNOWLEDGED, that should be included.\n```\n"
      operationId: PostMailboxV1Mail
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MailboxRequestMailParameters'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/MailboxRequestMailParameters'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/MailboxRequestMailParameters'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MailboxMail'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MailboxMail'
            application/x-msgpack:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MailboxMail'
  /mailbox/v1/mail-state:
    put:
      tags:
        - mailbox
      summary: Update the state of a message as read or acknowledged
      description: "\n**Description**\n\nAllows marking mail as read or acknowledged -- 'new' is not a valid argument\n\nArgument Options:\n```\nACKNOWLEDGED,\nREAD\n```\n"
      operationId: PutMailboxV1MailState
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MailboxUpdateMailStateRequest'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/MailboxUpdateMailStateRequest'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/MailboxUpdateMailStateRequest'
      responses:
        '204':
          description: No content
  '/mailbox/v1/mail/{productId}':
    post:
      tags:
        - mailbox
      summary: Fetch mail for a player on behalf of a product.
      description: "\n**Description**\n\nThis API allows for retrieving mail. Here, the productId is required. This is an internal API to be used by other plugins.\n\nRequired arguments:\n```\nproductId: A standard [product identifier](https://gh.riotgames.com/shared-static-data/rpg/tree/master/products)\n```\n"
      operationId: PostMailboxV1MailByProductId
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MailboxRequestMailParameters'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/MailboxRequestMailParameters'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/MailboxRequestMailParameters'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MailboxMail'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MailboxMail'
            application/x-msgpack:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MailboxMail'
  /mailbox/v1/ready:
    get:
      tags:
        - mailbox
      summary: Returns whether or not the mailbox feature is enabled and ready to use for this environment
      description: "\n**Description**\n\nSubscribe to this endpoint to know when it is safe to call other mailbox APIs.\n\nThe result is `true` when all of the following are true: mailbox has been enabled by configuration, the cluster configuration is loaded, player affinity is available, and the player is logged in.\n\nIf the result is `false`, do not attempt to call mailbox APIs.\n\n"
      operationId: GetMailboxV1Ready
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: boolean
            application/x-yaml:
              schema:
                type: boolean
            application/x-msgpack:
              schema:
                type: boolean
  /mobile-product-registry/v1/build-number:
    get:
      tags:
        - mobile-product-registry
      summary: '[Deprecated] Get the current game build number.'
      description: This is deprecated. Please use /riot-client/build-number.
      operationId: GetMobileProductRegistryV1BuildNumber
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: integer
                format: int64
            application/x-yaml:
              schema:
                type: integer
                format: int64
            application/x-msgpack:
              schema:
                type: integer
                format: int64
  '/mobile-product-registry/v1/build-number/{build}':
    post:
      tags:
        - mobile-product-registry
      summary: '[Deprecated] Set the current game build number.'
      description: This is deprecated. Please specify build_number via system-settings on app initialization.
      operationId: PostMobileProductRegistryV1BuildNumberByBuild
      parameters:
        - name: build
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: No content
  /mobile-product-registry/v1/is-game-obsolete:
    get:
      tags:
        - mobile-product-registry
      summary: '[Deprecated] Get if the current game build is obsolete.'
      description: This API is deprecated. Please use `/product-integration/v1/app-update/status`.
      operationId: GetMobileProductRegistryV1IsGameObsolete
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MobileProductRegistryGameVersion'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/MobileProductRegistryGameVersion'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/MobileProductRegistryGameVersion'
  /mobile-product-registry/v1/valid-game-versions:
    get:
      tags:
        - mobile-product-registry
      summary: Get the valid game versions
      operationId: GetMobileProductRegistryV1ValidGameVersions
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
            application/x-yaml:
              schema:
                type: string
            application/x-msgpack:
              schema:
                type: string
  /mobile-push/v1/register:
    post:
      tags:
        - mobile-push
      summary: Indicate that a product wants to register with push functionality
      operationId: PostMobilePushV1Register
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MobilePushMobilePushRegisterPush'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/MobilePushMobilePushRegisterPush'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/MobilePushMobilePushRegisterPush'
      responses:
        '204':
          description: No content
  /mobile-push/v1/subscribe-topic:
    post:
      tags:
        - mobile-push
      summary: Subscribe to a specific topic
      operationId: PostMobilePushV1SubscribeTopic
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MobilePushMobilePushSubscribeToTopic'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/MobilePushMobilePushSubscribeToTopic'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/MobilePushMobilePushSubscribeToTopic'
      responses:
        '204':
          description: No content
  /name-check/v1/validate:
    get:
      tags:
        - name-check
      summary: Verify user input name.
      operationId: GetNameCheckV1Validate
      parameters:
        - name: name
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NameCheckNameValidationResult'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/NameCheckNameValidationResult'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/NameCheckNameValidationResult'
  /native-ux/v1/close-game-running-dialog:
    put:
      tags:
        - native-ux
      summary: Closes the game running modal dialog if it exists
      operationId: PutNativeUxV1CloseGameRunningDialog
      responses:
        '204':
          description: No content
  /native-ux/v1/display-game-running-dialog:
    put:
      tags:
        - native-ux
      summary: Display a modal dialog when the user attempts to close the foundation with a game running.
      operationId: PutNativeUxV1DisplayGameRunningDialog
      parameters:
        - name: singleGameName
          in: query
          description: 'This value should be set to the full game name, when there is a single game name. Otherwise empty.'
          schema:
            type: string
      responses:
        '204':
          description: No content
  /native-ux/v1/display-keep-game-up-to-date-dialog:
    put:
      tags:
        - native-ux
      summary: 'Display a modal dialog after the user closes a game for the first time, asking them if they''d like it automatically updated.'
      operationId: PutNativeUxV1DisplayKeepGameUpToDateDialog
      parameters:
        - name: productId
          in: query
          description: The productId of the game that we're asking if needs to be kept up-to-date.
          required: true
          schema:
            type: string
        - name: patchlineId
          in: query
          description: The patchlineId of the game that we're asking if needs to be kept up-to-date.
          required: true
          schema:
            type: string
        - name: productName
          in: query
          description: 'The name of the game that we''re asking if needs to be kept up-to-date, excluding the patchline name.'
          required: true
          schema:
            type: string
        - name: patchlineName
          in: query
          description: 'The full name of the game that we''re asking if needs to be kept up-to-date, including the patchline name.'
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No content
  /native-ux/v1/should-keep-game-up-to-date:
    get:
      tags:
        - native-ux
      summary: 'Setting that, if true, means that Foundation should exit if no games are running.'
      operationId: GetNativeUxV1ShouldKeepGameUpToDate
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeepGameUpToDateResult'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/KeepGameUpToDateResult'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/KeepGameUpToDateResult'
  /native-ux/v1/show-alert:
    post:
      tags:
        - native-ux
      summary: Display a native message to the player.
      operationId: PostNativeUxV1ShowAlert
      parameters:
        - name: title
          in: query
          description: Title ID to show in the modal. Unused on Mac
          required: true
          schema:
            type: string
        - name: body
          in: query
          description: Message ID to show in the modal.
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No content
  /nintendo-account/v1/authorization:
    post:
      tags:
        - nintendo-account
      summary: Gets authorization from the Nintendo Account of the player logged in the Nintendo Switch
      operationId: PostNintendoAccountV1Authorization
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NintendoAccountAuthorizationParameters'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/NintendoAccountAuthorizationParameters'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/NintendoAccountAuthorizationParameters'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NintendoAccountAuthorization'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/NintendoAccountAuthorization'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/NintendoAccountAuthorization'
  /nintendo-account/v1/network-service-accountid-token:
    post:
      tags:
        - nintendo-account
      summary: Get the Network Service Account ID (NSA) for the player logged in the Nintendo Switch
      operationId: PostNintendoAccountV1NetworkServiceAccountidToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NintendoAccountGetNetworkServiceAccountParameters'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/NintendoAccountGetNetworkServiceAccountParameters'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/NintendoAccountGetNetworkServiceAccountParameters'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NintendoAccountNetworkServiceAccount'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/NintendoAccountNetworkServiceAccount'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/NintendoAccountNetworkServiceAccount'
  /nintendo-account/v1/player-nickname:
    get:
      tags:
        - nintendo-account
      summary: Gets the player nickname of the Nintendo Account for the player logged in the Nintendo Switch
      operationId: GetNintendoAccountV1PlayerNickname
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
            application/x-yaml:
              schema:
                type: string
            application/x-msgpack:
              schema:
                type: string
  /patch-proxy/v1/patch-jobs:
    get:
      tags:
        - Plugins
        - Plugin patch-proxy
      summary: 'Get all patch job information (sequence, productId, patchlineId) from the scheduler.'
      operationId: GetPatchProxyV1PatchJobs
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PatchProxyJobInfo'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PatchProxyJobInfo'
            application/x-msgpack:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PatchProxyJobInfo'
  /patch-proxy/v1/patch-jobs/all:
    delete:
      tags:
        - Plugins
        - Plugin patch-proxy
      summary: Delete all patch jobs from the scheduler. This will stop patch in progress.
      operationId: DeletePatchProxyV1PatchJobsAll
      responses:
        '204':
          description: No content
  /patch-proxy/v1/patch-jobs/cancel-active:
    put:
      tags:
        - Plugins
        - Plugin patch-proxy
      summary: Cancel the active job from the scheduler and deprioritize it to the end of the queue.
      operationId: PutPatchProxyV1PatchJobsCancelActive
      responses:
        '204':
          description: No content
  '/patch-proxy/v1/patch-jobs/products/{productId}/patchlines/{patchlineId}':
    delete:
      tags:
        - Plugins
        - Plugin patch-proxy
      summary: Delete patch job from the scheduler. This will stop patch in progress.
      operationId: DeletePatchProxyV1PatchJobsProductsByProductIdPatchlinesByPatchlineId
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: string
        - name: patchlineId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatchProxyPatchProxyRequest'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/PatchProxyPatchProxyRequest'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/PatchProxyPatchProxyRequest'
    put:
      tags:
        - Plugins
        - Plugin patch-proxy
      summary: Add a patch job to the scheduler.
      operationId: PutPatchProxyV1PatchJobsProductsByProductIdPatchlinesByPatchlineId
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: string
        - name: patchlineId
          in: path
          required: true
          schema:
            type: string
        - name: repair
          in: query
          schema:
            type: boolean
        - name: tempPath
          in: query
          schema:
            type: string
        - name: internalRequestSource
          in: query
          required: true
          schema:
            type: ''
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchProxyPatchRequestOptions'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/PatchProxyPatchRequestOptions'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/PatchProxyPatchRequestOptions'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatchProxyPatchProxyRequest'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/PatchProxyPatchProxyRequest'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/PatchProxyPatchProxyRequest'
  /patch-proxy/v1/patch-jobs/stop:
    put:
      tags:
        - Plugins
        - Plugin patch-proxy
      summary: Stop the patching process.
      operationId: PutPatchProxyV1PatchJobsStop
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
            application/x-yaml:
              schema:
                type: object
            application/x-msgpack:
              schema:
                type: object
  '/patch-proxy/v1/patch-states/products/{productId}/patchlines/{patchlineId}':
    get:
      tags:
        - Plugins
        - Plugin patch-proxy
      summary: Get patch status for patchline
      operationId: GetPatchProxyV1PatchStatesProductsByProductIdPatchlinesByPatchlineId
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: string
        - name: patchlineId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatchProxyPatchingResource'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/PatchProxyPatchingResource'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/PatchProxyPatchingResource'
  '/patch-proxy/v1/priority-patch-jobs/products/{productId}/patchlines/{patchlineId}':
    put:
      tags:
        - Plugins
        - Plugin patch-proxy
      summary: 'Starts a priority patch request for a product, which will complete patching before any automatic patching operation.'
      operationId: PutPatchProxyV1PriorityPatchJobsProductsByProductIdPatchlinesByPatchlineId
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: string
        - name: patchlineId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchProxyPatchRequestOptions'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/PatchProxyPatchRequestOptions'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/PatchProxyPatchRequestOptions'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
            application/x-yaml:
              schema:
                type: object
            application/x-msgpack:
              schema:
                type: object
  /patch/v1/configuration:
    get:
      tags:
        - patch
      summary: Retrieve the configuration
      operationId: GetPatchV1Configuration
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatchConfiguration'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/PatchConfiguration'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/PatchConfiguration'
    put:
      tags:
        - patch
      summary: Configure plugin settings such as cache size and location
      description: "\n**Data**\n* `cache_path`:  Path to the global cache used to store downloaded chunks.\n* `cache_size`: Cache size in bytes.\n"
      operationId: PutPatchV1Configuration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchConfiguration'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/PatchConfiguration'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/PatchConfiguration'
      responses:
        '204':
          description: No content
  /patch/v1/installs:
    get:
      tags:
        - patch
      summary: Get list of installs on disk
      operationId: GetPatchV1Installs
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
            application/x-yaml:
              schema:
                type: array
                items:
                  type: string
            application/x-msgpack:
              schema:
                type: array
                items:
                  type: string
  '/patch/v1/installs/{install-id}':
    delete:
      tags:
        - patch
      summary: Delete the install resource
      description: "\nDelete an install resource. All outstanding requests will be cancelled but the files on disk will be left intact.\n"
      operationId: DeletePatchV1InstallsByInstallId
      parameters:
        - name: install-id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No content
    get:
      tags:
        - patch
      summary: 'Get detailed information about an install, including current requests and status.'
      operationId: GetPatchV1InstallsByInstallId
      parameters:
        - name: install-id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatchInstall'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/PatchInstall'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/PatchInstall'
    put:
      tags:
        - patch
      summary: Register a new install
      description: "\n**Data**\n* `excluded_paths`: List of paths (relative to the install root) that are excluded from the update. Files under these paths won't be checked during the verification and repair processes.\n* `metadata_path`:  The location for the install .db and .manifest files. The extension will be directly appended to this path.\n* `seed_path`: The location where updated chunks will be stored for this install when performing a seed operation, and the location where chunks will be sourced from when performing a patch operation.\n"
      operationId: PutPatchV1InstallsByInstallId
      parameters:
        - name: install-id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchInstallParams'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/PatchInstallParams'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/PatchInstallParams'
      responses:
        '204':
          description: No content
  '/patch/v1/installs/{install-id}/requests/patch':
    delete:
      tags:
        - patch
      summary: Delete patch request for install
      description: "\nDelete the patch request, interrupting any ongoing patching operations.\n"
      operationId: DeletePatchV1InstallsByInstallIdRequestsPatch
      parameters:
        - name: install-id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No content
    put:
      tags:
        - patch
      summary: Submit patch request for install
      description: "\n**Note**\n* If a request already exists it will be replaced by the new resource.\n\n**Data**\n* `headers`: Headers to send with every request. If the manifest url is behind SCD then a Cookie header is required.\n* `url`: Url for the release manifest.\n* `max_download_speed`: Maximum download speed, in bytes/sec. If zero then no limits will be applied.\n* `repair`: Whether a full repair should be performed prior to the update.\n* `tags`: Tags to filter which content gets patched. https://riotsdk.rpg.riotgames.com/docs/for-users/patching/onboarding/localization/\n* `stage`: Only patch up to the specified stage.\n* `temp_path`: (Optional) Custom directory to use for working storage during patching.\n* `delete_foreign_paths`:  (optional) If true, paths that are not considered part of the install will be checked during the verification and repair processes and removed.\n"
      operationId: PutPatchV1InstallsByInstallIdRequestsPatch
      parameters:
        - name: install-id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchPatchRequest'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/PatchPatchRequest'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/PatchPatchRequest'
      responses:
        '204':
          description: No content
  '/patch/v1/installs/{install-id}/requests/preview':
    delete:
      tags:
        - patch
      summary: Delete preview request for install
      description: "\nDelete the preview request, interrupting any ongoing preview operations.\n"
      operationId: DeletePatchV1InstallsByInstallIdRequestsPreview
      parameters:
        - name: install-id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No content
    put:
      tags:
        - patch
      summary: Submit preview request for install
      description: "\n**Notes**\n* The request contains all the info needed, including the full url to the release manifest, http headers and tags.\n* If a request already exists it will be replaced by the new resource.\n\n**Data**\n* `headers`: Headers to send with every request. If the manifest url is behind SCD then a Cookie header is required.\n* `url`: Url for the release manifest.\n* `stage`: Only patch up to the specified stage.\n* `fast`: Whether to perform a fast (but less accurate) estimation.\n* `tags`: Tags to filter which content gets patched. https://riotsdk.rpg.riotgames.com/docs/for-users/patching/onboarding/localization/\n"
      operationId: PutPatchV1InstallsByInstallIdRequestsPreview
      parameters:
        - name: install-id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchPreviewRequest'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/PatchPreviewRequest'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/PatchPreviewRequest'
      responses:
        '204':
          description: No content
  '/patch/v1/installs/{install-id}/requests/repair':
    delete:
      tags:
        - patch
      summary: 'Delete the repair request, interrupting any ongoing repair operations.'
      operationId: DeletePatchV1InstallsByInstallIdRequestsRepair
      parameters:
        - name: install-id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No content
    put:
      tags:
        - patch
      summary: Triggers a repair operation
      description: "\n**Notes**\n* Allows you to perform a repair on a set of files or a full repair without having to wait or game client to exit. Only use this if you're\nabsolutely certain that the files are not currently in use.\n* Game is responsible for displaying repair progress and can get progress using the GET /patch/v1/installs/{install-id}/status/repair endpoint.\n\n**Data**\n* `files`: a list of file paths for files that need to be repaired. If none specified then the patcher will perform a full repair. File paths must\nbe relative to the install root.\n* `manifest_url`: Url for the release manifest.\n* `headers`: Headers to send with every request. If the manifest url is behind SCD then a Cookie header is required.\n* `max_download_speed`: Maximum download speed, in bytes/sec. If zero then no limits will be applied.\n* `allowed_http_fallback_hostnames`: List of hostnames for which we'll fall back to HTTP instead of HTTPS if they resolve to an RFC1918 private IP address.\n* `delete_foreign_paths`:  (optional) If true, paths that are not considered part of the install will be checked during the verification and repair processes and removed.\n"
      operationId: PutPatchV1InstallsByInstallIdRequestsRepair
      parameters:
        - name: install-id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchRepairRequest'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/PatchRepairRequest'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/PatchRepairRequest'
      responses:
        '204':
          description: No content
  '/patch/v1/installs/{install-id}/requests/seed':
    delete:
      tags:
        - patch
      summary: Delete seed request for install
      description: "\nDelete the seed request, interrupting any ongoing seed operations.\n"
      operationId: DeletePatchV1InstallsByInstallIdRequestsSeed
      parameters:
        - name: install-id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No content
    put:
      tags:
        - patch
      summary: Submit seed request for install
      description: "\n**Notes**\n* Seeding will download any chunks needed to the seed path, but will not modify any files in the install directory. The seed path is specified in the install.\n* If a request already exists it will be replaced by the new resource. https://riotsdk.rpg.riotgames.com/docs/for-users/patching/concepts/seeding/\n\n**Data**\n* `headers`: Headers to send with every request. If the manifest url is behind SCD then a Cookie header is required.\n* `url`: Url for the release manifest.\n* `max_download_speed`: Maximum download speed, in bytes/sec. If zero then no limits will be applied.\n* `stage`: Only patch up to the specified stage.\n* `tags`: Tags to filter which content gets patched. https://riotsdk.rpg.riotgames.com/docs/for-users/patching/onboarding/localization/\n* `delete_foreign_paths`:  (optional) If true, paths that are not considered part of the install will be checked during the verification and repair processes and removed.\n"
      operationId: PutPatchV1InstallsByInstallIdRequestsSeed
      parameters:
        - name: install-id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchSeedRequest'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/PatchSeedRequest'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/PatchSeedRequest'
      responses:
        '204':
          description: No content
  '/patch/v1/installs/{install-id}/status':
    get:
      tags:
        - patch
      summary: 'Retrieve the current patch, preview and seed statuses of an install resource'
      description: "\n**Note**\n* The status is always relative to a manifest and set of tags, specified by the `url` and `tags` fields respectively.\n* If there is any work in progress, `url` and `tags` will match those from the request.\n* If there are no pending requests, `url` and `tags` will match the files in the install folder.\n\n**Responses**\n\n**Patch**\n* `updating`: Currently performing a patching / seeding request.\n* `out_of_date`: The last request was partially completed and more work needs to be done before all files are in sync with the release manifest.\n* `up_to_date`: The last request completed successfully and files are in sync with the release manifest.\n* `not_installed`: The last request completed successfully and detected that the install-id is not installed.\n* `pending_verify`: The last request has not completed verification step.\n\n**Seed**\n* `seeding`: Currently performing a seeding request.\n* `out_of_date`: The last request was partially completed and more work needs to be done before all data needed to update the install has been downloaded.\n* `up_to_date`: The last request completed successfully and all data needed to update the install has been downloaded.\n* `pending_verify`: The last request has not completed verification step.\n\n**Preview**\n* `pending`: The preview request has not finished.\n* `done`: The last preview request completed successfully.\n\n**Repair**\n* `manifest_url`: the url of the release manifest.\n* `repair_progress`: The progress of the repair operation. Contains:\n    * `bytes_to_repair`: Total number of bytes to read.\n    * `files_to_repair`: Total number of files to read.\n    * `repaired_bytes`: Number of bytes read from disk so far.\n    * `repaired_files`: Number of files read from disk so far.\n* `state`: The overall state of the repair operation. Possible states include:\n    * `pending`: No repair requests have been made.\n    * `in_progress`: Repair is in progress.\n    * `canceled`: The repair operation was canceled.\n    * `done`: Repair operation is complete.\n"
      operationId: GetPatchV1InstallsByInstallIdStatus
      parameters:
        - name: install-id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatchStatus'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/PatchStatus'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/PatchStatus'
  '/patch/v1/installs/{install-id}/status/patch':
    get:
      tags:
        - patch
      summary: Retrieve the current patch status of an install.
      description: "\n**Notes**\n* The status is always relative to a manifest and set of tags, specified by the `url` and `tags` fields respectively.\n* If there is any work in progress, `url` and `tags` will match those from the request.\n* If there are no pending requests, `url` and `tags` will match the files in the install folder.\n\n**Response**\n\nThe `state` field will is populated based on the current work with the following values:\n* `updating`: Currently performing a patching / seeding request.\n* `out_of_date`: The last request was partially completed and more work needs to be done before all files are in sync with the release manifest.\n* `up_to_date`: The last request completed successfully and files are in sync with the release manifest.\n* `not_installed`: The last request completed successfully and detected that the install-id is not installed.\n* `pending_verify`: The last request has not completed verification step.\n"
      operationId: GetPatchV1InstallsByInstallIdStatusPatch
      parameters:
        - name: install-id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatchPatchStatus'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/PatchPatchStatus'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/PatchPatchStatus'
  '/patch/v1/installs/{install-id}/status/preview':
    get:
      tags:
        - patch
      summary: Retrieve the current preview status of an install.
      description: "\n**Response**\n\nThe `state` field will is populated based on the current work with the following values:\n* `pending`: The preview request has not finished.\n* `done`: The last preview request completed successfully.\n"
      operationId: GetPatchV1InstallsByInstallIdStatusPreview
      parameters:
        - name: install-id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatchPreviewStatus'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/PatchPreviewStatus'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/PatchPreviewStatus'
  '/patch/v1/installs/{install-id}/status/repair':
    get:
      tags:
        - patch
      summary: Retrieve the current repair status of an install.
      description: "\n**Response**\n* `manifest_url`: the url of the release manifest.\n* `repair_progress`: The progress of the repair operation. Contains:\n    * `bytes_to_repair`: Total number of bytes to read.\n    * `files_to_repair`: Total number of files to read.\n    * `repaired_bytes`: Number of bytes read from disk so far.\n    * `repaired_files`: Number of files read from disk so far.\n* `state`: The overall state of the repair operation.\n    * `pending`: No repair requests have been made.\n    * `in_progress`: Repair is in progress.\n    * `canceled`: The repair operation was canceled.\n    * `done`: Repair operation is complete.\n"
      operationId: GetPatchV1InstallsByInstallIdStatusRepair
      parameters:
        - name: install-id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatchRepairStatus'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/PatchRepairStatus'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/PatchRepairStatus'
  '/patch/v1/installs/{install-id}/status/seed':
    get:
      tags:
        - patch
      summary: Retrieve the current seed status of an install.
      description: "\n**Notes**\n* If there is any work in progress, `url` and `tags` will match those from the request.\n* If there are no pending requests, `url` and `tags` will match the files in the install folder.\n\n**Response**\n\nThe `state` field will is populated based on the current work with the following values:\n* `seeding`: Currently performing a seeding request.\n* `out_of_date`: The last request was partially completed and more work needs to be done before all files are in sync with the release manifest.\n* `up_to_date`: The last request completed successfully and files are in sync with the release manifest.\n* `pending_verify`: The last request has not completed verification step.\n"
      operationId: GetPatchV1InstallsByInstallIdStatusSeed
      parameters:
        - name: install-id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatchSeedStatus'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/PatchSeedStatus'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/PatchSeedStatus'
  /patch/v2/configuration:
    get:
      tags:
        - patch
      summary: Retrieve the configuration
      operationId: GetPatchV2Configuration
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatchV2Configuration'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/PatchV2Configuration'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/PatchV2Configuration'
    put:
      tags:
        - patch
      summary: Configure patcher settings such as thread count and timeout.
      description: "\n**Data**\n* `chunkBatchSize`:     Maximum size in bytes of each batched chunk request. Downloads are split into requests of this size in order to better parallelize the download of chunks across connections. Default: 2097152 (2MB)\n* `chunkingThreads`:    Number of threads to use for rechunking, in case a repair is needed. Note: By default, the patcher will select the number of chunking threads automatically. If the drive is detected as an SSD, it will use as many threads as there are processors, otherwise it will use a single thread. This option can be used to override this detection and use the specified number of threads.\n* `connections`:        Number of concurrent connections to use for downloading. Default: 8\n* `dnsTTL`:             Time in seconds to keep resolved IP addresses before performing another name resolution operation. This allows the download process to operate with the latest available CDN edge server addresses in case they change rapidly. Default:60\n* `downloadBuffer`:     Specifies the size of the libcurl receive buffer. Larger receive buffers can help with throughput for high-latency links when using HTTP/3. Default: 64KB\n* `downloadLimit`:      Maximum amount of downloaded chunk data that will be kept in memory at any one time. The patcher won't issue additional chunk downloads until downloaded data goes under this limit. The limit is important to ensure that even in the event of very fast downloads and very slow disk operations memory usage doesn't grow uncontrollably. Default: 128MB\n* `ipv4Only`:           Whether to ignore any non-IPv4 addresses that download servers resolve to. Use this if your DNS server returns IPv6 addresses but you don't have IPv6 connectivity.\n* `maxByteRanges`:      Maximum number of discontiguous byte ranges to request from the server. The chunk downloader will split a request if it would result in more than this many ranges in the range request. This helps prevent issues when communicating with edge servers that can't support large amounts of independent ranges. Default: 64\n* `maxDownloadSpeed`:   Maximum download speed. Default: 0 (no limit)\n* `maxManifestSize`:    Maximum release manifest size that we're willing to load. If zero, the size is unlimited. Default: 64MB\n* `receiveBuffer`:      Specifies the size of the TCP receive buffer. Larger receive buffers can help with TCP throughput for high-latency links.\n* `sliceSize`:          Size in bytes of each slice, that is, the size of the write buffer used when updating files. Default: 65536 (64 MB)\n* `timeout`:            Time in seconds to wait before canceling an update that is not making any progress. If zero, this timeout is disabled. Default: 60\n"
      operationId: PutPatchV2Configuration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchV2Configuration'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/PatchV2Configuration'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/PatchV2Configuration'
      responses:
        '204':
          description: No content
  /patch/v2/debug/set-up:
    post:
      tags:
        - patch
      summary: 'Takes care of setup and returns a patch url and bundles url that can be used to issue patch, seed, partial-repair, full-repair and preview requests.'
      operationId: PostPatchV2DebugSetUp
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchDebugSetup'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/PatchDebugSetup'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/PatchDebugSetup'
      responses:
        '204':
          description: No content
  /patch/v2/installs:
    get:
      tags:
        - patch
      summary: Get list of installs on disk
      operationId: GetPatchV2Installs
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
            application/x-yaml:
              schema:
                type: array
                items:
                  type: string
            application/x-msgpack:
              schema:
                type: array
                items:
                  type: string
  '/patch/v2/installs/{install-id}':
    get:
      tags:
        - patch
      summary: Returns the state of the entire install along with the state of its components.
      operationId: GetPatchV2InstallsByInstallId
      parameters:
        - name: install-id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatchInstallState'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/PatchInstallState'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/PatchInstallState'
    put:
      tags:
        - patch
      summary: Register a new install
      description: "\n**Data**\n* `components`: List of components. A component is a patchable artifact that is part of the install of a specific product. For example, League of Legends has a Client component and a Game component.\n    * `id`:                     The id of the component.\n    * `installPath`:            The install location of the component. Absolute file path required.\n    * `metadataPath`:           The location for the install .db and .manifest files. The extension will be directly appended to this path. Absolute file path required.\n    * `seedPath`:               The location where updated chunks will be stored for this install when performing a seed operation, and the location where chunks will be sourced from when performing a patch operation. Absolute file path required.\n    * `deleteForeignPaths`:     If set, extra paths that don't belong to the release will be deleted during the repair processes.\n    * `excludedPaths`:          List of paths (relative to the install root) that are excluded from the update. Files under these paths won't be checked during the verification and repair processes.\n    * `tags`:                   Tags to filter which content gets patched. These are different from the params used to fetch the release from Patchsieve https://riotsdk.rpg.riotgames.com/docs/for-users/patching/onboarding/localization/.\n    * `sieveProductId`:         The id used to fetch a product in the Patchsieve service. It can differ from the product-id.\n    * `versionSet`:             The id used to fetch a version set of a specific product in the Patchsieve Service.\n    * `params`:                 Params/Labels used to filter which release is fetched from Patchsieve Service.\n"
      operationId: PutPatchV2InstallsByInstallId
      parameters:
        - name: install-id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchInstallRequest'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/PatchInstallRequest'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/PatchInstallRequest'
      responses:
        '204':
          description: No content
  '/patch/v2/installs/{install-id}/components/{component-id}':
    get:
      tags:
        - patch
      summary: Returns the state of a component.
      operationId: GetPatchV2InstallsByInstallIdComponentsByComponentId
      parameters:
        - name: install-id
          in: path
          required: true
          schema:
            type: string
        - name: component-id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatchComponent'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/PatchComponent'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/PatchComponent'
    put:
      tags:
        - patch
      summary: Register a new component.
      description: "\n**Data**\n* `installPath`:            The install location of the component. Absolute file path required.\n* `metadataPath`:           The location for the install .db and .manifest files. The extension will be directly appended to this path. Absolute file path required.\n* `seedPath`:               The location where updated chunks will be stored for this install when performing a seed operation, and the location where chunks will be sourced from when performing a patch operation. Absolute file path required.\n* `deleteForeignPaths`:     If set, extra paths that don't belong to the release will be deleted during the repair processes.\n* `excludedPaths`:          List of paths (relative to the install root) that are excluded from the update. Files under these paths won't be checked during the verification and repair processes.\n* `dependsOn`:              The id of the component it is depedent on. If set, will keep artifact version id's in lockstep while the primary component is running.\n* `tags`:                   Tags to filter which content gets patched. These are different from the params used to fetch the release from Patchsieve https://riotsdk.rpg.riotgames.com/docs/for-users/patching/onboarding/localization/.\n* `sieveProductId`:         The id used to fetch a product in the Patchsieve service. It can differ from the product-id.\n* `versionSet`:             The id used to fetch a version set of a specific product in the Patchsieve Service.\n* `params`:                 Params/Labels used to filter which release is fetched from Patchsieve Service.\n"
      operationId: PutPatchV2InstallsByInstallIdComponentsByComponentId
      parameters:
        - name: install-id
          in: path
          required: true
          schema:
            type: string
        - name: component-id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchComponentRequest'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/PatchComponentRequest'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/PatchComponentRequest'
      responses:
        '204':
          description: No content
  '/patch/v2/installs/{install-id}/components/{component-id}/start-full-repair':
    post:
      tags:
        - patch
      summary: Schedules a full repair operation.
      description: "\n**Data**\n* `headers`:                (Required on Mobile) Headers to send with every request. If the manifest url is behind SCD then a Cookie header is required.\n"
      operationId: PostPatchV2InstallsByInstallIdComponentsByComponentIdStartFullRepair
      parameters:
        - name: install-id
          in: path
          required: true
          schema:
            type: string
        - name: component-id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchStartFullRepairRequest'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/PatchStartFullRepairRequest'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/PatchStartFullRepairRequest'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatchRequestStatus'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/PatchRequestStatus'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/PatchRequestStatus'
  '/patch/v2/installs/{install-id}/components/{component-id}/start-partial-repair':
    post:
      tags:
        - patch
      summary: Schedules a partial repair operation.
      description: "\n**Notes**\n* Allows caller to perform a repair on a set of files without having to wait or game client to exit. Only use this if absolutely certain that the files are not currently in use.\n\n**Data**\n* `files`:                  A list of file paths for files that need to be repaired. File paths must be relative to the install root.\n* `headers`:                (Required on Mobile) Headers to send with every request. If the manifest url is behind SCD then a Cookie header is required.\n"
      operationId: PostPatchV2InstallsByInstallIdComponentsByComponentIdStartPartialRepair
      parameters:
        - name: install-id
          in: path
          required: true
          schema:
            type: string
        - name: component-id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchStartPartialRepairRequest'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/PatchStartPartialRepairRequest'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/PatchStartPartialRepairRequest'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatchRequestStatus'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/PatchRequestStatus'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/PatchRequestStatus'
  '/patch/v2/installs/{install-id}/components/{component-id}/start-patching':
    post:
      tags:
        - patch
      summary: Schedules a patching operation.
      description: "\n**Data**\n* `headers`:                (Required on Mobile) Headers to send with every request. If the manifest url is behind SCD then a Cookie header is required.\n* `stage`:                  (Optional) Only patch up to the specified stage.\n* `tempPath`:               (Optional) Custom directory to use for working storage during patching.\n"
      operationId: PostPatchV2InstallsByInstallIdComponentsByComponentIdStartPatching
      parameters:
        - name: install-id
          in: path
          required: true
          schema:
            type: string
        - name: component-id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchStartPatchingOrSeedingRequest'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/PatchStartPatchingOrSeedingRequest'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/PatchStartPatchingOrSeedingRequest'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatchRequestStatus'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/PatchRequestStatus'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/PatchRequestStatus'
  '/patch/v2/installs/{install-id}/components/{component-id}/start-preview':
    post:
      tags:
        - patch
      summary: Schedules a preview operation.
      description: "\n**Data**\n* `headers`:                (Required on Mobile) Headers to send with every request. If the manifest url is behind SCD then a Cookie header is required.\n* `stage`:                  (Optional) Only preview the specified stage.\n"
      operationId: PostPatchV2InstallsByInstallIdComponentsByComponentIdStartPreview
      parameters:
        - name: install-id
          in: path
          required: true
          schema:
            type: string
        - name: component-id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchStartPreviewRequest'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/PatchStartPreviewRequest'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/PatchStartPreviewRequest'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatchRequestStatus'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/PatchRequestStatus'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/PatchRequestStatus'
  '/patch/v2/installs/{install-id}/components/{component-id}/start-seeding':
    post:
      tags:
        - patch
      summary: Schedules a seed operation.
      description: "\n**Data**\n* `headers`:                (Required on Mobile) Headers to send with every request. If the manifest url is behind SCD then a Cookie header is required.\n* `stage`:                  (Optional) Only patch up to the specified stage.\n* `tempPath`:               (Optional) Custom directory to use for working storage during patching.\n"
      operationId: PostPatchV2InstallsByInstallIdComponentsByComponentIdStartSeeding
      parameters:
        - name: install-id
          in: path
          required: true
          schema:
            type: string
        - name: component-id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchStartPatchingOrSeedingRequest'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/PatchStartPatchingOrSeedingRequest'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/PatchStartPatchingOrSeedingRequest'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatchRequestStatus'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/PatchRequestStatus'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/PatchRequestStatus'
  '/patch/v2/installs/{install-id}/components/{component-id}/start-verify':
    post:
      tags:
        - patch
      summary: Schedules a verify operation.
      operationId: PostPatchV2InstallsByInstallIdComponentsByComponentIdStartVerify
      parameters:
        - name: install-id
          in: path
          required: true
          schema:
            type: string
        - name: component-id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatchRequestStatus'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/PatchRequestStatus'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/PatchRequestStatus'
  '/patch/v2/installs/{install-id}/components/{component-id}/stop-full-repair':
    post:
      tags:
        - patch
      summary: Stop a full repair operation.
      operationId: PostPatchV2InstallsByInstallIdComponentsByComponentIdStopFullRepair
      parameters:
        - name: install-id
          in: path
          required: true
          schema:
            type: string
        - name: component-id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No content
  '/patch/v2/installs/{install-id}/components/{component-id}/stop-partial-repair':
    post:
      tags:
        - patch
      summary: Stop a partial operation.
      operationId: PostPatchV2InstallsByInstallIdComponentsByComponentIdStopPartialRepair
      parameters:
        - name: install-id
          in: path
          required: true
          schema:
            type: string
        - name: component-id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No content
  '/patch/v2/installs/{install-id}/components/{component-id}/stop-patching':
    post:
      tags:
        - patch
      summary: Stop a patching operation.
      operationId: PostPatchV2InstallsByInstallIdComponentsByComponentIdStopPatching
      parameters:
        - name: install-id
          in: path
          required: true
          schema:
            type: string
        - name: component-id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No content
  '/patch/v2/installs/{install-id}/components/{component-id}/stop-preview':
    post:
      tags:
        - patch
      summary: Stop a preview operation.
      operationId: PostPatchV2InstallsByInstallIdComponentsByComponentIdStopPreview
      parameters:
        - name: install-id
          in: path
          required: true
          schema:
            type: string
        - name: component-id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No content
  '/patch/v2/installs/{install-id}/components/{component-id}/stop-seeding':
    post:
      tags:
        - patch
      summary: Stop a seed operation.
      operationId: PostPatchV2InstallsByInstallIdComponentsByComponentIdStopSeeding
      parameters:
        - name: install-id
          in: path
          required: true
          schema:
            type: string
        - name: component-id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No content
  '/patch/v2/installs/{install-id}/components/{component-id}/stop-verify':
    post:
      tags:
        - patch
      summary: Stop a verify operation.
      operationId: PostPatchV2InstallsByInstallIdComponentsByComponentIdStopVerify
      parameters:
        - name: install-id
          in: path
          required: true
          schema:
            type: string
        - name: component-id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No content
  /patch/v2/patchsieve:
    post:
      tags:
        - patch
      summary: Fetch component state from info
      operationId: PostPatchV2Patchsieve
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchPatchsieveRequest'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/PatchPatchsieveRequest'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/PatchPatchsieveRequest'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatchPatchsieveReleases'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/PatchPatchsieveReleases'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/PatchPatchsieveReleases'
  '/patch/v2/requests/{request-id}':
    get:
      tags:
        - patch
      summary: Returns the state of a component for a specific request.
      operationId: GetPatchV2RequestsByRequestId
      parameters:
        - name: request-id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatchRequestStatus'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/PatchRequestStatus'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/PatchRequestStatus'
  /pay-mobile/v1/productListResult:
    get:
      tags:
        - pay-mobile
      summary: Available products notification
      operationId: GetPayMobileV1ProductListResult
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayMobileProductListResult'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/PayMobileProductListResult'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/PayMobileProductListResult'
  '/pay-mobile/v1/purchase/{productId}':
    post:
      tags:
        - pay-mobile
      summary: Purchase the given product
      operationId: PostPayMobileV1PurchaseByProductId
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: string
        - name: orderId
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: integer
                format: int32
            application/x-yaml:
              schema:
                type: integer
                format: int32
            application/x-msgpack:
              schema:
                type: integer
                format: int32
  /pay-mobile/v1/purchaseResult:
    get:
      tags:
        - pay-mobile
      summary: Purchase notification
      operationId: GetPayMobileV1PurchaseResult
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayMobilePurchaseResult'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/PayMobilePurchaseResult'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/PayMobilePurchaseResult'
  /pay-mobile/v1/request-external-products:
    post:
      tags:
        - pay-mobile
      summary: Retrieve available products for purchase from set of product ids
      operationId: PostPayMobileV1RequestExternalProducts
      parameters:
        - name: externalProductIds
          in: query
          required: true
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: integer
                format: int32
            application/x-yaml:
              schema:
                type: integer
                format: int32
            application/x-msgpack:
              schema:
                type: integer
                format: int32
  /pay-mobile/v1/request-price-point-products:
    post:
      tags:
        - pay-mobile
      summary: Retrieve available price point products for purchase
      operationId: PostPayMobileV1RequestPricePointProducts
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: integer
                format: int32
            application/x-yaml:
              schema:
                type: integer
                format: int32
            application/x-msgpack:
              schema:
                type: integer
                format: int32
  /pay-mobile/v1/request-products:
    post:
      tags:
        - pay-mobile
      summary: Retrieve available products for purchase
      operationId: PostPayMobileV1RequestProducts
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: integer
                format: int32
            application/x-yaml:
              schema:
                type: integer
                format: int32
            application/x-msgpack:
              schema:
                type: integer
                format: int32
  /pay-mobile/v1/session/resume:
    post:
      tags:
        - pay-mobile
      summary: Resume the purchase session
      operationId: PostPayMobileV1SessionResume
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: integer
                format: int32
            application/x-yaml:
              schema:
                type: integer
                format: int32
            application/x-msgpack:
              schema:
                type: integer
                format: int32
  /payments/v1/initialize-purchase:
    post:
      tags:
        - payments
      summary: 'Begin the purchase flow, receiving the URL to a web client.'
      operationId: PostPaymentsV1InitializePurchase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentsInitializedPurchase'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/PaymentsInitializedPurchase'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/PaymentsInitializedPurchase'
  /platform-ui/v1/enabled:
    get:
      tags:
        - platform-ui
      summary: Returns true if UI is enabled
      operationId: GetPlatformUiV1Enabled
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: boolean
            application/x-yaml:
              schema:
                type: boolean
            application/x-msgpack:
              schema:
                type: boolean
  /platform-ui/v1/status:
    get:
      tags:
        - platform-ui
      summary: Returns current status of UI
      operationId: GetPlatformUiV1Status
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlatformUiPlatformUIState'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/PlatformUiPlatformUIState'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/PlatformUiPlatformUIState'
  /play-restrictions/v1/debug/caller-id/mock-id:
    delete:
      tags:
        - play-restrictions
      summary: Stops mocking the caller ID for Swagger calls
      description: Deletes the currently set `productId` and `patchlineId`. Plugin APIs will receive `swagger` as the `productId`.
      operationId: DeletePlayRestrictionsV1DebugCallerIdMockId
      responses:
        '204':
          description: No content
    get:
      tags:
        - play-restrictions
      summary: Checks the caller ID in use when APIs are called from Swagger
      description: "Returns the `productId` and `patchlineId` being passed to APIs in this plugin when called via Swagger.\n\nReturns 404 if a mock caller ID is not in use."
      operationId: GetPlayRestrictionsV1DebugCallerIdMockId
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlayRestrictionsPluginCallerId_MockCallerId'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/PlayRestrictionsPluginCallerId_MockCallerId'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/PlayRestrictionsPluginCallerId_MockCallerId'
    put:
      tags:
        - play-restrictions
      summary: Sets the caller ID to use when calling this plugin from Swagger
      description: "Sets the `productId` and `patchlineId` to pass to APIs in this plugin during future calls from Swagger.\n\nUse this functionality to test APIs in this plugin with Swagger, as if they were being called from another product."
      operationId: PutPlayRestrictionsV1DebugCallerIdMockId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlayRestrictionsPluginCallerId_MockCallerId'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/PlayRestrictionsPluginCallerId_MockCallerId'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/PlayRestrictionsPluginCallerId_MockCallerId'
      responses:
        '204':
          description: No content
  /play-restrictions/v1/restrictions:
    get:
      tags:
        - play-restrictions
      summary: Get the current play restrictions
      operationId: GetPlayRestrictionsV1Restrictions
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlayRestrictionsPlayRestrictionV1Data'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/PlayRestrictionsPlayRestrictionV1Data'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/PlayRestrictionsPlayRestrictionV1Data'
    put:
      tags:
        - play-restrictions
      summary: Set the play restrictions for the SDK
      description: "\n**Description**\nAllows game teams to configure how various services pertaining to play restrictions (being able to communicate with other players in-game) are configured.\n\n**Argument**\n* `data`: A struct containing booleans for each service that comes under play-restrictions.\n"
      operationId: PutPlayRestrictionsV1Restrictions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlayRestrictionsPlayRestrictionV1Data'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/PlayRestrictionsPlayRestrictionV1Data'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/PlayRestrictionsPlayRestrictionV1Data'
      responses:
        '204':
          description: No content
  /player-account/aliases/v1/active:
    get:
      tags:
        - player-account
      summary: Returns the current active game name for the player.
      operationId: GetPlayerAccountAliasesV1Active
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlayerAccountAliasesV1Alias'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/PlayerAccountAliasesV1Alias'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/PlayerAccountAliasesV1Alias'
  /player-account/aliases/v1/aliases:
    get:
      tags:
        - player-account
      summary: Gets a list of all aliaes for the player.
      operationId: GetPlayerAccountAliasesV1Aliases
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlayerAccountAliasesV1AliasList'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/PlayerAccountAliasesV1AliasList'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/PlayerAccountAliasesV1AliasList'
    post:
      tags:
        - player-account
      summary: Sets a new set of aliaes for the player.
      operationId: PostPlayerAccountAliasesV1Aliases
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlayerAccountAliasesV1AliasInput'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/PlayerAccountAliasesV1AliasInput'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/PlayerAccountAliasesV1AliasInput'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlayerAccountAliasesV1StatusResponse'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/PlayerAccountAliasesV1StatusResponse'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/PlayerAccountAliasesV1StatusResponse'
  /player-account/aliases/v1/eligibility:
    post:
      tags:
        - player-account
      summary: Check if a player is eligible for a name change.
      operationId: PostPlayerAccountAliasesV1Eligibility
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlayerAccountEligibilityResponse'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/PlayerAccountEligibilityResponse'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/PlayerAccountEligibilityResponse'
  /player-account/aliases/v1/generate-tagline:
    post:
      tags:
        - player-account
      summary: Returns a random tagline that is valid for the player.
      operationId: PostPlayerAccountAliasesV1GenerateTagline
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlayerAccountGenerateTaglineInput'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/PlayerAccountGenerateTaglineInput'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/PlayerAccountGenerateTaglineInput'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlayerAccountGenerateTaglineResponse'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/PlayerAccountGenerateTaglineResponse'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/PlayerAccountGenerateTaglineResponse'
  /player-account/aliases/v1/required:
    get:
      tags:
        - player-account
      summary: Check if a player is required to set their name.
      operationId: GetPlayerAccountAliasesV1Required
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlayerAccountAliasesV1RequiredResponse'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/PlayerAccountAliasesV1RequiredResponse'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/PlayerAccountAliasesV1RequiredResponse'
  /player-account/aliases/v1/validity:
    post:
      tags:
        - player-account
      summary: Checks a name for validity without saving it.
      operationId: PostPlayerAccountAliasesV1Validity
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlayerAccountAliasesV1AliasInput'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/PlayerAccountAliasesV1AliasInput'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/PlayerAccountAliasesV1AliasInput'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlayerAccountAliasesV1StatusResponse'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/PlayerAccountAliasesV1StatusResponse'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/PlayerAccountAliasesV1StatusResponse'
  /player-account/config/v1/config:
    get:
      tags:
        - player-account
      summary: The current plugin configuration.
      description: Debug information allowing the ability to introspect the current plugin config.
      operationId: GetPlayerAccountConfigV1Config
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlayerAccountPlayerAccountPluginConfig'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/PlayerAccountPlayerAccountPluginConfig'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/PlayerAccountPlayerAccountPluginConfig'
  /player-account/promotion/v1/eligibility:
    get:
      tags:
        - player-account
      summary: Return the latest cached eligibility check.
      operationId: GetPlayerAccountPromotionV1Eligibility
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlayerAccountPromotionV1EligibilityCheckResponse'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/PlayerAccountPromotionV1EligibilityCheckResponse'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/PlayerAccountPromotionV1EligibilityCheckResponse'
    post:
      tags:
        - player-account
      summary: Check if a player is eligible for promotion.
      operationId: PostPlayerAccountPromotionV1Eligibility
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlayerAccountPromotionV1EligibilityCheckResponse'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/PlayerAccountPromotionV1EligibilityCheckResponse'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/PlayerAccountPromotionV1EligibilityCheckResponse'
  /player-account/promotion/v1/fields:
    get:
      tags:
        - player-account
      summary: Get a list of fields the player can update.
      description: Returns an empty list until an eligibility check has been performed.
      operationId: GetPlayerAccountPromotionV1Fields
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlayerAccountPromotionV1UpdateableFieldsResponse'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/PlayerAccountPromotionV1UpdateableFieldsResponse'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/PlayerAccountPromotionV1UpdateableFieldsResponse'
  /player-account/promotion/v1/promotion:
    post:
      tags:
        - player-account
      summary: Promote an account by providing missing details.
      operationId: PostPlayerAccountPromotionV1Promotion
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlayerAccountPromotionV1AccountDetails'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/PlayerAccountPromotionV1AccountDetails'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/PlayerAccountPromotionV1AccountDetails'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlayerAccountPromotionV1AccountPromotionResponse'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/PlayerAccountPromotionV1AccountPromotionResponse'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/PlayerAccountPromotionV1AccountPromotionResponse'
  /player-account/regions/v1/eligibility:
    get:
      tags:
        - player-account
      summary: Check if a player is eligible for regions selection.
      operationId: GetPlayerAccountRegionsV1Eligibility
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlayerAccountRegionsV1EligibilityCheckResponse'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/PlayerAccountRegionsV1EligibilityCheckResponse'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/PlayerAccountRegionsV1EligibilityCheckResponse'
  '/player-account/regions/v1/region/{regionCode}':
    post:
      tags:
        - player-account
      summary: assign the given region to player account
      operationId: PostPlayerAccountRegionsV1RegionByRegionCode
      parameters:
        - name: regionCode
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlayerAccountRegionsV1RegionAssignmentResponse'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/PlayerAccountRegionsV1RegionAssignmentResponse'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/PlayerAccountRegionsV1RegionAssignmentResponse'
  '/player-account/vng/v1/status/{productId}':
    get:
      tags:
        - player-account
      summary: 'Check cache to see if a player must register with the Vietnamese government; otherwise, check with VNG (via the Player Account Service).'
      operationId: GetPlayerAccountVngV1StatusByProductId
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlayerAccountVngV1StatusResponse'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/PlayerAccountVngV1StatusResponse'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/PlayerAccountVngV1StatusResponse'
    post:
      tags:
        - player-account
      summary: Check with VNG (via the Player Account Service) to see if a player must register with the Vietnamese government.
      operationId: PostPlayerAccountVngV1StatusByProductId
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlayerAccountVngV1StatusResponse'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/PlayerAccountVngV1StatusResponse'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/PlayerAccountVngV1StatusResponse'
  /player-account/vng/v1/status/ready:
    get:
      tags:
        - player-account
      summary: Whether VNG status endpoints are ready to handle requests (RSO access token exists)
      operationId: GetPlayerAccountVngV1StatusReady
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: boolean
            application/x-yaml:
              schema:
                type: boolean
            application/x-msgpack:
              schema:
                type: boolean
  '/player-account/vng/v1/web-url/{productId}':
    post:
      tags:
        - player-account
      summary: Create the external web url with the given redirect-uri
      operationId: PostPlayerAccountVngV1WebUrlByProductId
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlayerAccountVngV1WebUrlRequest'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/PlayerAccountVngV1WebUrlRequest'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/PlayerAccountVngV1WebUrlRequest'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlayerAccountVngV1WebUrlResponse'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/PlayerAccountVngV1WebUrlResponse'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/PlayerAccountVngV1WebUrlResponse'
  /player-affinity/affinity/v1/token:
    post:
      tags:
        - player-affinity
      summary: Get a player affinity token.
      description: Endpoint deleted November 2021; Please use 'player-affinity/service/v2/token'.
      operationId: PostPlayerAffinityAffinityV1Token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlayerAffinityAffinityV1AffinityInput'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/PlayerAffinityAffinityV1AffinityInput'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/PlayerAffinityAffinityV1AffinityInput'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlayerAffinityPlayerAffinityToken'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/PlayerAffinityPlayerAffinityToken'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/PlayerAffinityPlayerAffinityToken'
  /player-affinity/config/v1/config:
    get:
      tags:
        - player-affinity
      summary: The current plugin configuration.
      description: Debug information allowing the ability to introspect the current plugin config.
      operationId: GetPlayerAffinityConfigV1Config
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlayerAffinityPlayerAffinityPluginConfig'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/PlayerAffinityPlayerAffinityPluginConfig'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/PlayerAffinityPlayerAffinityPluginConfig'
  /player-affinity/config/v1/status:
    get:
      tags:
        - player-affinity
      summary: The current plugin readiness.
      description: Returns the current readiness of the plugin.
      operationId: GetPlayerAffinityConfigV1Status
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlayerAffinityPlayerAffinityPluginStatus'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/PlayerAffinityPlayerAffinityPluginStatus'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/PlayerAffinityPlayerAffinityPluginStatus'
  /player-affinity/product/v1/token:
    post:
      tags:
        - player-affinity
      summary: 'Get a player product affinity token, save it to the local cache, and notify subscribers. Retrieve from local cache on error.'
      description: Endpoint deleted November 2021; Please use 'player-affinity/product/v2/token'.
      operationId: PostPlayerAffinityProductV1Token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlayerAffinityAffinityV2AffinityProductInput'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/PlayerAffinityAffinityV2AffinityProductInput'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/PlayerAffinityAffinityV2AffinityProductInput'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlayerAffinityPlayerAffinityTokenProduct'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/PlayerAffinityPlayerAffinityTokenProduct'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/PlayerAffinityPlayerAffinityTokenProduct'
  '/player-affinity/product/v1/token/{product}':
    get:
      tags:
        - player-affinity
      summary: Get the cached product affinity token.
      description: 'Endpoint deleted November 2021; Please use ''player-affinity/product/v2/token/{product}''.'
      operationId: GetPlayerAffinityProductV1TokenByProduct
      parameters:
        - name: product
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlayerAffinityPlayerAffinityTokenProduct'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/PlayerAffinityPlayerAffinityTokenProduct'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/PlayerAffinityPlayerAffinityTokenProduct'
  /player-affinity/product/v1/token/debug:
    post:
      tags:
        - player-affinity
      summary: 'DEBUG: For debugging subscribers. Save a new product affinity token to the local cache then notify subscribers.'
      description: Endpoint deleted November 2021; Please use 'player-affinity/product/v2/token/debug.
      operationId: PostPlayerAffinityProductV1TokenDebug
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlayerAffinityPlayerAffinityTokenProduct'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/PlayerAffinityPlayerAffinityTokenProduct'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/PlayerAffinityPlayerAffinityTokenProduct'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlayerAffinityPlayerAffinityTokenProduct'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/PlayerAffinityPlayerAffinityTokenProduct'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/PlayerAffinityPlayerAffinityTokenProduct'
  '/player-affinity/product/v2/cached-affinity/{product}':
    get:
      tags:
        - player-affinity
      summary: Get the cached product affinity.
      operationId: GetPlayerAffinityProductV2CachedAffinityByProduct
      parameters:
        - name: product
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlayerAffinityPlayerAffinityCachedProductAffinity'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/PlayerAffinityPlayerAffinityCachedProductAffinity'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/PlayerAffinityPlayerAffinityCachedProductAffinity'
  /player-affinity/product/v2/token:
    post:
      tags:
        - player-affinity
      summary: 'Get a player product affinity token, save the affinity to the local cache, and notify subscribers.'
      operationId: PostPlayerAffinityProductV2Token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlayerAffinityProductAffinityInput'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/PlayerAffinityProductAffinityInput'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/PlayerAffinityProductAffinityInput'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlayerAffinityPlayerAffinityProductToken'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/PlayerAffinityPlayerAffinityProductToken'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/PlayerAffinityPlayerAffinityProductToken'
  '/player-affinity/product/v2/token/{product}':
    get:
      tags:
        - player-affinity
      summary: Get the player product affinity token.
      operationId: GetPlayerAffinityProductV2TokenByProduct
      parameters:
        - name: product
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlayerAffinityPlayerAffinityProductToken'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/PlayerAffinityPlayerAffinityProductToken'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/PlayerAffinityPlayerAffinityProductToken'
  /player-affinity/product/v2/token/debug:
    post:
      tags:
        - player-affinity
      summary: 'DEBUG: For debugging subscribers. Save a new product affinity token to the local cache and notify subscribers.'
      operationId: PostPlayerAffinityProductV2TokenDebug
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlayerAffinityPlayerAffinityProductToken'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/PlayerAffinityPlayerAffinityProductToken'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/PlayerAffinityPlayerAffinityProductToken'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlayerAffinityPlayerAffinityProductToken'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/PlayerAffinityPlayerAffinityProductToken'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/PlayerAffinityPlayerAffinityProductToken'
  /player-affinity/service/v1/token:
    post:
      tags:
        - player-affinity
      summary: Get a player service affinity token.
      description: Endpoint deleted November 2021; Please use 'player-affinity/service/v2/token'.
      operationId: PostPlayerAffinityServiceV1Token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlayerAffinityAffinityV1AffinityInput'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/PlayerAffinityAffinityV1AffinityInput'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/PlayerAffinityAffinityV1AffinityInput'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlayerAffinityPlayerAffinityToken'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/PlayerAffinityPlayerAffinityToken'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/PlayerAffinityPlayerAffinityToken'
  '/player-affinity/service/v2/cached-affinity/{service}':
    get:
      tags:
        - player-affinity
      summary: Get the cached service affinity.
      operationId: GetPlayerAffinityServiceV2CachedAffinityByService
      parameters:
        - name: service
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlayerAffinityPlayerAffinityCachedServiceAffinity'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/PlayerAffinityPlayerAffinityCachedServiceAffinity'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/PlayerAffinityPlayerAffinityCachedServiceAffinity'
  /player-affinity/service/v2/token:
    post:
      tags:
        - player-affinity
      summary: Get a player service affinity token and save the affinity to the local cache.
      operationId: PostPlayerAffinityServiceV2Token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlayerAffinityServiceAffinityInput'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/PlayerAffinityServiceAffinityInput'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/PlayerAffinityServiceAffinityInput'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlayerAffinityPlayerAffinityServiceToken'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/PlayerAffinityPlayerAffinityServiceToken'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/PlayerAffinityPlayerAffinityServiceToken'
  /player-affinity/shard:
    put:
      tags:
        - player-affinity
      summary: Sets the current
      operationId: PutPlayerAffinityShard
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlayerAffinityPlayerAffinityShardInfo'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/PlayerAffinityPlayerAffinityShardInfo'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/PlayerAffinityPlayerAffinityShardInfo'
      responses:
        '204':
          description: No content
  '/player-preferences/v1/data-json/{type}':
    get:
      tags:
        - player-preferences
      summary: Get decompressed and decoded JSON player preferences information from a specified type from the Player Preferences service
      operationId: GetPlayerPreferencesV1DataJsonByType
      parameters:
        - name: type
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/x-yaml:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/x-msgpack:
              schema:
                type: object
                additionalProperties:
                  type: object
    put:
      tags:
        - player-preferences
      summary: Puts any valid JSON object for the specified type into the Player Preferences service
      operationId: PutPlayerPreferencesV1DataJsonByType
      parameters:
        - name: type
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
          application/x-yaml:
            schema:
              type: object
              additionalProperties:
                type: object
          application/x-msgpack:
            schema:
              type: object
              additionalProperties:
                type: object
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/x-yaml:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/x-msgpack:
              schema:
                type: object
                additionalProperties:
                  type: object
  '/player-preferences/v1/data/{type}':
    get:
      tags:
        - player-preferences
      summary: Get decompressed and decoded player preferences information from a specified type from the Player Preferences service as string
      operationId: GetPlayerPreferencesV1DataByType
      parameters:
        - name: type
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/x-yaml:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/x-msgpack:
              schema:
                type: object
                additionalProperties:
                  type: object
    put:
      tags:
        - player-preferences
      summary: Puts any string for the specified type into the Player Preferences service
      operationId: PutPlayerPreferencesV1DataByType
      parameters:
        - name: type
          in: path
          required: true
          schema:
            type: string
        - name: data
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/x-yaml:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/x-msgpack:
              schema:
                type: object
                additionalProperties:
                  type: object
  /player-preferences/v1/ready:
    get:
      tags:
        - player-preferences
      summary: True if the plugin is ready to be used
      operationId: GetPlayerPreferencesV1Ready
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: boolean
            application/x-yaml:
              schema:
                type: boolean
            application/x-msgpack:
              schema:
                type: boolean
  '/player-reporting/v1/debug/simulate-reporter-feedback/{category}':
    post:
      tags:
        - player-reporting
      summary: Simulate sending a reporting feedback message to this player with a specific report category.
      description: "\n**Data**\n* `category`: The category is a key used to create the localized message for the player. As an example, `CHEATING` is the category\nsent when a player's report for cheating was utilized for penalizing a cheater. If the category is unrecognized, a fallback message will be used.\n"
      operationId: PostPlayerReportingV1DebugSimulateReporterFeedbackByCategory
      parameters:
        - name: category
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No content
  /player-reporting/v1/report:
    post:
      tags:
        - player-reporting
      description: "\n**Data**\n* `categories`: List of category strings that player is reporting another player for. Different products use different categories.\n* `comment`: Comment associated with this report.\n* `location`: The location where the offending behavior occurred. Example: `in-game`.\n* `match_token`: The reporting player's match token, which is a signed JWT. See Platform docs for more info on match tokens.\n* `offender_puuid`: Whom the player is reporting.\n\n**Response**\n\nThis endpoint can return the following response codes:\n* `204`: Report successfully submitted. Note that in some cases it's intended UX that the submission is a \"success\" even if the report cannot be submitted.\n* `401`: Client is unable to retrieve current player's access token, which is required. Most common when trying to submit a report without having first logged in.\n\n\nEndpoint deleted June 2022; Please use '/player-reporting/v2/report'."
      operationId: PostPlayerReportingV1Report
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlayerReportingPlayerReport'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/PlayerReportingPlayerReport'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/PlayerReportingPlayerReport'
      responses:
        '204':
          description: No content
  /player-reporting/v1/reporter-feedback:
    get:
      tags:
        - player-reporting
      summary: Provides a list of unacknowledged localized reporter feedback messages to show the player.
      description: "\n**Data**\n* Response is a JSON map of `id` --> individual reporter feedback messages. Example:\n```json\n{\n\"1\": {\n    \"locale\": \"en_US\",\n    \"category\": \"CHEATING\",\n    \"message\": \"Your report of cheating has been verified.\",\n    \"title\": \"Report Feedback\"\n}\n}\n```\n\n* `locale`: Detected locale of player and what locale the message was localized to.\n* `category`: Category of the report--an internal string. Category keys to different localized messages.\n* `message`: Localized message to display to player.\n* `title`: Localized message title to display to player.\n\nResponse will be an empty map `{}` if there are no reporter-feedback messages to display.\n"
      operationId: GetPlayerReportingV1ReporterFeedback
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  $ref: '#/components/schemas/PlayerReportingLocalizedReporterFeedbackMessage'
            application/x-yaml:
              schema:
                type: object
                additionalProperties:
                  $ref: '#/components/schemas/PlayerReportingLocalizedReporterFeedbackMessage'
            application/x-msgpack:
              schema:
                type: object
                additionalProperties:
                  $ref: '#/components/schemas/PlayerReportingLocalizedReporterFeedbackMessage'
  /player-reporting/v1/reporter-feedback/ack:
    post:
      tags:
        - player-reporting
      summary: Acknowledges all reporter feedbacks.
      operationId: PostPlayerReportingV1ReporterFeedbackAck
      responses:
        '204':
          description: No content
  '/player-reporting/v1/reporter-feedback/ack/{id}':
    post:
      tags:
        - player-reporting
      summary: Acknowledges a specific reporter feedback. Returns true if we can find a reporter feedback that matches that ID. Returns false if we can't.
      description: "\n**Description**\n\nSee GET reporter feedback endpoint for more info on how to find `{id}`.\n\n**Response**\nThis endpoint will always return a 2xx response code and a boolean response:\n* `true`: Reporter Feedback message with given ID was found and acknowledged.\n* `false`: No Reporter Feedback message with given ID was found.\n"
      operationId: PostPlayerReportingV1ReporterFeedbackAckById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: boolean
            application/x-yaml:
              schema:
                type: boolean
            application/x-msgpack:
              schema:
                type: boolean
  /player-reporting/v1/status:
    get:
      tags:
        - player-reporting
      summary: For Integration test & debugging use only.
      description: "\n**Description**\n\nReturns `true` if the plugin is ready to receive reports. Note that from the perspective of plugin customers submitting reports,\nreports can be \"successfully submitted\" even if the plugin is not ready to receive reports. This is an intended experience.\n"
      operationId: GetPlayerReportingV1Status
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: boolean
            application/x-yaml:
              schema:
                type: boolean
            application/x-msgpack:
              schema:
                type: boolean
  /player-reporting/v2/report:
    post:
      tags:
        - player-reporting
      description: "\nReporting V2 is similar to v1, but the token can accept more types than just a MATCH_TOKEN to allow support for reporting guilds and potentially other entities in the future.\n**Data**\n* `categories`: List of category strings that player is reporting another player for. Different products use different categories.\n* `comment`: Player written comment associated with this report.\n* `location`: The location where the offending behavior occurred. Example: `in-game`.\n* `tokenType`: The type of information the token contains. Example: `MATCH_TOKEN`, `GUILD_TOKEN`.\n* `token`: A signed JWT with a format matching the tokenType. See Platform docs for more info on token formats and types.\n* `offenderId`: The id of the offender. For players this is their puuid.\n\n**Response**\n\nThis endpoint can return the following response codes:\n* `204`: Report successfully submitted. Note that in some cases it's intended UX that the submission is a \"success\" even if the report cannot be submitted.\n* `401`: Client is unable to retrieve current player's access token, which is required. Most common when trying to submit a report without having first logged in.\n"
      operationId: PostPlayerReportingV2Report
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlayerReportingPlayerReportV2'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/PlayerReportingPlayerReportV2'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/PlayerReportingPlayerReportV2'
      responses:
        '204':
          description: No content
  /player-session-lifecycle/v1/session:
    delete:
      tags:
        - player-session-lifecycle
      summary: Delete the current lifecycle session
      operationId: DeletePlayerSessionLifecycleV1Session
      responses:
        '204':
          description: No content
    get:
      tags:
        - player-session-lifecycle
      summary: Get the login info of the player. Subscribe to this endpoint then make a POST to be notified when player has been logged in
      operationId: GetPlayerSessionLifecycleV1Session
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlayerSessionLifecyclePlayerSessionState'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/PlayerSessionLifecyclePlayerSessionState'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/PlayerSessionLifecyclePlayerSessionState'
    post:
      tags:
        - player-session-lifecycle
      summary: Create a session used to retrieve common player authentication information.
      description: Automatically attempt to handle RSO processing up to the point the player is logged in.
      operationId: PostPlayerSessionLifecycleV1Session
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlayerSessionLifecycleInitiateLoginSessionRequest'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/PlayerSessionLifecycleInitiateLoginSessionRequest'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/PlayerSessionLifecycleInitiateLoginSessionRequest'
      responses:
        '204':
          description: No content
    put:
      tags:
        - player-session-lifecycle
      summary: Update a session used to retrieve common player authentication information.
      operationId: PutPlayerSessionLifecycleV1Session
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlayerSessionLifecycleInitiateLoginSessionRequest'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/PlayerSessionLifecycleInitiateLoginSessionRequest'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/PlayerSessionLifecycleInitiateLoginSessionRequest'
      responses:
        '204':
          description: No content
  /playstation-account/v1/authorization:
    post:
      tags:
        - playstation-account
      summary: Gets authorization from the Playstation Network Account of the player logged in the Playstation Network
      operationId: PostPlaystationAccountV1Authorization
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlaystationAccountAuthorizationParameters'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/PlaystationAccountAuthorizationParameters'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/PlaystationAccountAuthorizationParameters'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlaystationAccountAuthorization'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/PlaystationAccountAuthorization'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/PlaystationAccountAuthorization'
  /playstation-account/v1/authorization-consent:
    get:
      tags:
        - playstation-account
      summary: Authorization consent status for PlayStation
      operationId: GetPlaystationAccountV1AuthorizationConsent
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: boolean
            application/x-yaml:
              schema:
                type: boolean
            application/x-msgpack:
              schema:
                type: boolean
    put:
      tags:
        - playstation-account
      summary: Update authorization consent status for PlayStation
      operationId: PutPlaystationAccountV1AuthorizationConsent
      parameters:
        - name: AuthorizationConsent
          in: query
          required: true
          schema:
            type: boolean
      responses:
        '204':
          description: No content
  /playstation-account/v1/player-nickname:
    get:
      tags:
        - playstation-account
      summary: Gets the player nickname of the Playstation Account for the player logged in the Playstation device
      operationId: GetPlaystationAccountV1PlayerNickname
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
            application/x-yaml:
              schema:
                type: string
            application/x-msgpack:
              schema:
                type: string
  /plugin-manager/v1/status:
    get:
      tags:
        - Plugins
        - Plugin Manager
        - Plugin Manager Diagnostics
      summary: Get the status of the plugin manager.
      operationId: GetPluginManagerV1Status
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginManagerResource'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/PluginManagerResource'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/PluginManagerResource'
  /plugin-manager/v2/descriptions:
    get:
      tags:
        - Plugins
        - Plugin Manager
        - Plugin Manager Info
      summary: Get all plugin descriptions.
      operationId: GetPluginManagerV2Descriptions
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PluginDescriptionResource'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PluginDescriptionResource'
            application/x-msgpack:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PluginDescriptionResource'
  '/plugin-manager/v2/descriptions/{plugin}':
    get:
      tags:
        - Plugins
        - Plugin Manager
        - Plugin Manager Info
      summary: Get a plugin description.
      operationId: GetPluginManagerV2DescriptionsByPlugin
      parameters:
        - name: plugin
          in: path
          description: Plugin name
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginDescriptionResource'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/PluginDescriptionResource'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/PluginDescriptionResource'
  /plugin-manager/v2/plugins:
    get:
      tags:
        - Plugins
        - Plugin Manager
        - Plugin Manager Diagnostics
      summary: Get diagnostic information for all plugins.
      operationId: GetPluginManagerV2Plugins
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PluginResource'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PluginResource'
            application/x-msgpack:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PluginResource'
  '/plugin-manager/v2/plugins/{plugin}':
    get:
      tags:
        - Plugins
        - Plugin Manager
        - Plugin Manager Diagnostics
      summary: Get diagnostic information for a single plugin.
      operationId: GetPluginManagerV2PluginsByPlugin
      parameters:
        - name: plugin
          in: path
          description: Plugin name
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginResource'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/PluginResource'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/PluginResource'
  /prime-gaming/v1/login:
    delete:
      tags:
        - prime-gaming
      summary: Logout from Amazon
      description: "\n**PrimeGamingPrimeGamingLoginResponse**\nLoginStatus consisting of:\n* `status`: The current state of the login with Amazon. One of: `logged_out`, `logging_in`, `logged_in`, `logging_out`, `error` (PrimeGamingPrimeGamingLoginStatus enum)\n* `amazonAccessToken`: The access token of the Amazon login, or empty `\"\"` if none is present.\n"
      operationId: DeletePrimeGamingV1Login
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrimeGamingPrimeGamingLoginResponse'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/PrimeGamingPrimeGamingLoginResponse'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/PrimeGamingPrimeGamingLoginResponse'
    get:
      tags:
        - prime-gaming
      summary: Get the Amazon login status
      description: "\n**PrimeGamingPrimeGamingLoginResponse**\n* `status`: The current state of the login with Amazon. One of: `logged_out`, `logging_in`, `logged_in`, `logging_out`, `error` (PrimeGamingPrimeGamingLoginStatus enum)\n* `amazonAccessToken`: The access token of the Amazon login, or empty `\"\"` if none is present.\n"
      operationId: GetPrimeGamingV1Login
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrimeGamingPrimeGamingLoginResponse'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/PrimeGamingPrimeGamingLoginResponse'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/PrimeGamingPrimeGamingLoginResponse'
    post:
      tags:
        - prime-gaming
      summary: Initiate Login with Amazon to enable Prime Gaming
      description: "\n**PrimeGamingPrimeGamingLoginResponse**\n* `status`: The current state of the login with Amazon. One of: `logged_out`, `logging_in`, `logged_in`, `logging_out`, `error` (PrimeGamingPrimeGamingLoginStatus enum)\n* `amazonAccessToken`: The access token of the Amazon login, or empty `\"\"` if none is present."
      operationId: PostPrimeGamingV1Login
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrimeGamingPrimeGamingLoginResponse'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/PrimeGamingPrimeGamingLoginResponse'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/PrimeGamingPrimeGamingLoginResponse'
  /prime-gaming/v1/supported:
    get:
      tags:
        - prime-gaming
      summary: Check whether Prime Gaming is supported on the current platform
      description: "\n**PrimeGamingPrimeGamingSupportStatus**\n* `supported`: true if Prime Gaming is supported in this game, false otherwise\n* `details`: Description about why Prime Gaming may not be supported in this game. This is for debugging purposes only.\n"
      operationId: GetPrimeGamingV1Supported
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrimeGamingPrimeGamingSupportStatus'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/PrimeGamingPrimeGamingSupportStatus'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/PrimeGamingPrimeGamingSupportStatus'
  /privacy/v1/tracking:
    get:
      tags:
        - privacy
      summary: Retrieves privacy tracking settings and state.
      description: "\n**iOS specific considerations**\n\nWhen the setting is changed while the game is in the background, the RiotGamesApi currently does not\nimmediately get notified of a change in tracking permissions, but checks again as those permissions\nare required, and notifies on change. If games need real-time access to tracking settings after a\nbackground, calling this endpoint after a return from background will force the SDK to look for\nsetting changes immediately and will also trigger a notification if the value has changed.\n\n**Response Codes**\n- `200`: Privacy settings and state are available.\n\n**Data**\n- `canUseTracking`: If `true`, the player's tracking information can be used.\n- `canRequestTrackingPermission`: If `true`, POST /privacy/v1/tracking/request-permission to request\n  permission to track the player.\n- `state`: Indicates if we have not yet requested tracking permissions (`Unrequested`), if we are\n  in the process of requesting permission to track (`Requesting`), and if we have completed that\n  request at any time in the past (`Completed`).\n"
      operationId: GetPrivacyV1Tracking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivacyPrivacySettings'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/PrivacyPrivacySettings'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/PrivacyPrivacySettings'
  /privacy/v1/tracking/request-permission:
    post:
      tags:
        - privacy
      summary: Ask the player for permission to track them via telemetry
      description: "\n**Response Codes**\n- `200`: Request is in flight, subscribe to `/privacy/v1/tracking` for updates.\n- `405`: Unable to request permission for this platform.\n- `409`: A request for permission is already in flight, or is unnecessary (for instance, if the\n  player has declined tracking.)\n- `500`: The Info.plist file for the app is missing a NSUserTrackingUsageDescription entry. The\n  Apple APIs cannot function without it.\n"
      operationId: PostPrivacyV1TrackingRequestPermission
      responses:
        '204':
          description: No content
  /private-settings/v1/settings:
    delete:
      tags:
        - private-settings
      summary: Clear all private settings
      operationId: DeletePrivateSettingsV1Settings
      responses:
        '204':
          description: No content
  '/private-settings/v1/settings/{userid}/{key}':
    get:
      tags:
        - private-settings
      summary: For facilitating testing. Plugins should access private-settings via config key `private.user.<userid>.<key>`.
      operationId: GetPrivateSettingsV1SettingsByUseridByKey
      parameters:
        - name: userid
          in: path
          required: true
          schema:
            type: string
        - name: key
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/x-yaml:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/x-msgpack:
              schema:
                type: object
                additionalProperties:
                  type: object
    put:
      tags:
        - private-settings
      summary: 'Update an individual private setting configuration. Upon success, configuration data within `private.user.<userid>.<key>` is updated and platform-specific settings ''save'' systems are notified.'
      operationId: PutPrivateSettingsV1SettingsByUseridByKey
      parameters:
        - name: userid
          in: path
          required: true
          schema:
            type: string
        - name: key
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
          application/x-yaml:
            schema:
              type: object
              additionalProperties:
                type: object
          application/x-msgpack:
            schema:
              type: object
              additionalProperties:
                type: object
      responses:
        '204':
          description: No content
  '/private-settings/v1/token/{userid}':
    get:
      tags:
        - private-settings
      summary: Only valid after a token has been restored or reset via PUT. Subscribe (or call) to this endpoint to receive updates on modifications to the private-settings for the given `userId`. Host applications should include this token with platform-specific data saves for the `userId`.
      description: "API only enabled when `private-settings.multi-user-mode` is set to `true` (Consoles default `true`, else `false`).\n\n`token` refers to a compressed and url-safe base64 encoded token of private settings for the user.\n\n`userId` in this API refers to the platform-specific identifier for an active profile or user account.\n\n * xbox: XUID\n * playstation: Account ID\n * switch: NSA ID\n\nPlatforms not listed do not need to use this API, as private settings persistence is managed by this SDK."
      operationId: GetPrivateSettingsV1TokenByUserid
      parameters:
        - name: userid
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
            application/x-yaml:
              schema:
                type: string
            application/x-msgpack:
              schema:
                type: string
    put:
      tags:
        - private-settings
      summary: "Submit settings token after loading last-known saved data for the current device user.\nIf no save data or token exists for user, submit an no token or an empty string to reset private-settings for user."
      description: "Only call once per user, per session.\n\nAPI only enabled when `private-settings.multi-user-mode` is set to `true` (Consoles default `true`, else `false`).\n\n`token` refers to a compressed and url-safe base64 encoded token of private settings for the user.\n\n`userId` in this API refers to the platform-specific identifier for an active profile or user account.\n\n * xbox: XUID\n * playstation: Account ID\n * switch: NSA ID\n\nPlatforms not listed do not need to use this API, as private settings persistence is managed by this SDK."
      operationId: PutPrivateSettingsV1TokenByUserid
      parameters:
        - name: userid
          in: path
          required: true
          schema:
            type: string
        - name: token
          in: query
          schema:
            type: string
      responses:
        '204':
          description: No content
  /process-control/v1/process:
    get:
      tags:
        - process-control
      summary: Returns information about the process-control.
      operationId: GetProcessControlV1Process
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProcessControlProcess'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ProcessControlProcess'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/ProcessControlProcess'
  /process-control/v1/process/client-did-restart:
    get:
      tags:
        - process-control
      summary: return true if client has restarted
      operationId: GetProcessControlV1ProcessClientDidRestart
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: boolean
            application/x-yaml:
              schema:
                type: boolean
            application/x-msgpack:
              schema:
                type: boolean
  /process-control/v1/process/client-restarting:
    delete:
      tags:
        - process-control
      summary: Removes state that client is restarting - can quit now
      operationId: DeleteProcessControlV1ProcessClientRestarting
      responses:
        '204':
          description: No content
    get:
      tags:
        - process-control
      summary: 'Returns true if client is currently restarting, false otherwise'
      operationId: GetProcessControlV1ProcessClientRestarting
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: boolean
            application/x-yaml:
              schema:
                type: boolean
            application/x-msgpack:
              schema:
                type: boolean
    post:
      tags:
        - process-control
      summary: Sets state that client is restarting - do not quit
      operationId: PostProcessControlV1ProcessClientRestarting
      responses:
        '204':
          description: No content
  /process-control/v1/process/quit:
    post:
      tags:
        - process-control
      summary: Quits the application.
      operationId: PostProcessControlV1ProcessQuit
      responses:
        '204':
          description: No content
  /process-control/v1/process/restart:
    post:
      tags:
        - process-control
      summary: Restarts the application.  Does nothing if there is already a waiting delayed restart.  Optionally accepts specific version to restart.
      operationId: PostProcessControlV1ProcessRestart
      parameters:
        - name: delaySeconds
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - name: restartVersion
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '204':
          description: No content
  '/product-integration-deps/v1/app-repair/apply-requests/products/{productId}/patchlines/{patchlineId}':
    delete:
      tags:
        - product-integration-deps
      summary: Removes a apply request.
      description: This removes a apply request. This should be called once the repair has been completed.
      operationId: DeleteProductIntegrationDepsV1AppRepairApplyRequestsProductsByProductIdPatchlinesByPatchlineId
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: string
        - name: patchlineId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No content
    get:
      tags:
        - product-integration-deps
      summary: Returns the game repair request for the matching product/patchline
      description: 'It will return the apply request that matches the provided product/patchline for a running, or previously running game. Apply requests should be created via the product-integration plugin when games would like Riot Client to repair their game after it closes.'
      operationId: GetProductIntegrationDepsV1AppRepairApplyRequestsProductsByProductIdPatchlinesByPatchlineId
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: string
        - name: patchlineId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductIntegrationDepsAppRepairApplyRequest'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ProductIntegrationDepsAppRepairApplyRequest'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/ProductIntegrationDepsAppRepairApplyRequest'
    put:
      tags:
        - product-integration-deps
      summary: Applies a game repair by opening Riot Client and repairing the game (on Desktop).
      description: This adds a new apply request and notify out of the new resource. Apply requests should be created via the product-integration plugin when games would like Riot Client to repair their game after it closes.
      operationId: PutProductIntegrationDepsV1AppRepairApplyRequestsProductsByProductIdPatchlinesByPatchlineId
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: string
        - name: patchlineId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductIntegrationDepsAppRepairApplyRequest'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ProductIntegrationDepsAppRepairApplyRequest'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/ProductIntegrationDepsAppRepairApplyRequest'
      responses:
        '204':
          description: No content
  '/product-integration-deps/v1/app-update/apply-requests/products/{productId}/patchlines/{patchlineId}':
    delete:
      tags:
        - product-integration-deps
      summary: Removes a apply request.
      description: This removes a apply request. This should be called once the update has been completed.
      operationId: DeleteProductIntegrationDepsV1AppUpdateApplyRequestsProductsByProductIdPatchlinesByPatchlineId
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: string
        - name: patchlineId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No content
    get:
      tags:
        - product-integration-deps
      summary: Returns the game update request for the matching product/patchline
      description: 'It will return the apply request that matches the provided product/patchline for a running, or previously running game. Apply requests should be created via the product-integration plugin when games would like Riot Client to update their game after it closes.'
      operationId: GetProductIntegrationDepsV1AppUpdateApplyRequestsProductsByProductIdPatchlinesByPatchlineId
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: string
        - name: patchlineId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductIntegrationDepsAppUpdateApplyRequest'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ProductIntegrationDepsAppUpdateApplyRequest'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/ProductIntegrationDepsAppUpdateApplyRequest'
    put:
      tags:
        - product-integration-deps
      summary: Applies a game update by opening Riot Client and patching the game (on Desktop) or exiting to the App Store (on Mobile).
      description: This adds a new apply request and notify out of the new resource. Apply requests should be created via the product-integration plugin when games would like Riot Client to update their game after it closes.
      operationId: PutProductIntegrationDepsV1AppUpdateApplyRequestsProductsByProductIdPatchlinesByPatchlineId
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: string
        - name: patchlineId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductIntegrationDepsAppUpdateApplyRequest'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ProductIntegrationDepsAppUpdateApplyRequest'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/ProductIntegrationDepsAppUpdateApplyRequest'
      responses:
        '204':
          description: No content
  '/product-integration-deps/v1/app-update/statuses/products/{productId}/patchlines/{patchlineId}':
    get:
      tags:
        - product-integration-deps
      summary: Get the current app update status for a given product and patchline
      description: This returns the app update status for a given product and patchline.
      operationId: GetProductIntegrationDepsV1AppUpdateStatusesProductsByProductIdPatchlinesByPatchlineId
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: string
        - name: patchlineId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductIntegrationDepsAppUpdateStatus'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ProductIntegrationDepsAppUpdateStatus'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/ProductIntegrationDepsAppUpdateStatus'
    put:
      tags:
        - product-integration-deps
      summary: Push the current app update status for a given product and patchline
      description: 'This sets the app update status for a given product and patchline, allowing a game to respond to whether or not it requires an update.'
      operationId: PutProductIntegrationDepsV1AppUpdateStatusesProductsByProductIdPatchlinesByPatchlineId
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: string
        - name: patchlineId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductIntegrationDepsAppUpdateStatus'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ProductIntegrationDepsAppUpdateStatus'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/ProductIntegrationDepsAppUpdateStatus'
      responses:
        '204':
          description: No content
  /product-integration/v1/app-repair/apply:
    delete:
      tags:
        - product-integration
      summary: Use this to cancel a game repair that was previously requested.
      operationId: DeleteProductIntegrationV1AppRepairApply
      responses:
        '204':
          description: No content
    put:
      tags:
        - product-integration
      summary: Applies a game repair by opening Riot Client and repairing the game once the game is closed (on Desktop).
      description: Applies a game repair by opening Riot Client and repairing the game once the game is closed (on Desktop).
      operationId: PutProductIntegrationV1AppRepairApply
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductIntegrationProductIntegrationAppRepairBody'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ProductIntegrationProductIntegrationAppRepairBody'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/ProductIntegrationProductIntegrationAppRepairBody'
      responses:
        '204':
          description: No content
  /product-integration/v1/app-repair/immediate-repair:
    put:
      tags:
        - product-integration
      summary: Starts a game repair and returns a repair status callback path.
      description: "\n**Notes**\n* Allows you to perform a partial repair on a set of files without having to wait or game client to exit. Only use this if you're\nabsolutely certain that the files are not currently in use by the client.\n* Immediate repair does not open Riot Client so the game is responsible for displaying repair progress.\n\n**Data**\n* `files`: a list of file paths for files that need to be repaired. If none specified then the patcher will perform a full repair. File paths must\nbe relative to the install root. Does not accept wildcard * symbols or ~ for home directory.\n"
      operationId: PutProductIntegrationV1AppRepairImmediateRepair
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductIntegrationProductIntegrationAppImmediateRepairRequestBody'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ProductIntegrationProductIntegrationAppImmediateRepairRequestBody'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/ProductIntegrationProductIntegrationAppImmediateRepairRequestBody'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductIntegrationProductIntegrationAppImmediateRepairResponseBody'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ProductIntegrationProductIntegrationAppImmediateRepairResponseBody'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/ProductIntegrationProductIntegrationAppImmediateRepairResponseBody'
  /product-integration/v1/app-update/apply:
    put:
      tags:
        - product-integration
      summary: Applies a game update by opening Riot Client and patching the game (on Desktop) or exiting to the App Store (on Mobile).
      description: Applies a game update by opening Riot Client and patching the game (on Desktop) or exiting to the App Store (on Mobile).
      operationId: PutProductIntegrationV1AppUpdateApply
      responses:
        '204':
          description: No content
  /product-integration/v1/app-update/status:
    get:
      tags:
        - product-integration
      summary: Indicates the state of the primary patchline (or App Store app) for the running game.
      description: Indicates the state of the primary patchline (or App Store app) for the running game.
      operationId: GetProductIntegrationV1AppUpdateStatus
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductIntegrationProductIntegrationAppUpdateStatus'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ProductIntegrationProductIntegrationAppUpdateStatus'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/ProductIntegrationProductIntegrationAppUpdateStatus'
  /product-integration/v1/debug/app-repair/apply:
    delete:
      tags:
        - product-integration
      summary: Debug endpoint to cancel a repair by session id
      description: The session id should match one from a running game
      operationId: DeleteProductIntegrationV1DebugAppRepairApply
      parameters:
        - name: sessionId
          in: query
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No content
    put:
      tags:
        - product-integration
      summary: Debug endpoint to apply a repair by session id
      description: The session id should match one from a running game
      operationId: PutProductIntegrationV1DebugAppRepairApply
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductIntegrationAppRepairApplyRequest'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ProductIntegrationAppRepairApplyRequest'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/ProductIntegrationAppRepairApplyRequest'
      responses:
        '204':
          description: No content
  /product-integration/v1/debug/app-repair/immediate-repair:
    put:
      tags:
        - product-integration
      summary: Starts a game repair and returns a repair status callback path.
      description: "\n**Notes**\n* Allows you to perform a partial repair on a set of files without having to wait or game client to exit. Only use this if you're\nabsolutely certain that the files are not currently in use by the client.\n* Immediate repair does not open Riot Client so the game is responsible for displaying repair progress.\n\n**Data**\n* `files`: a list of file paths for files that need to be repaired. If none specified then the patcher will perform a full repair. File paths must\nbe relative to the install root. Does not accept wildcard * symbols or ~ for home directory.\n"
      operationId: PutProductIntegrationV1DebugAppRepairImmediateRepair
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductIntegrationAppImmediateRepairRequest'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ProductIntegrationAppImmediateRepairRequest'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/ProductIntegrationAppImmediateRepairRequest'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductIntegrationProductIntegrationAppImmediateRepairResponseBody'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ProductIntegrationProductIntegrationAppImmediateRepairResponseBody'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/ProductIntegrationProductIntegrationAppImmediateRepairResponseBody'
  /product-integration/v1/debug/app-update/apply:
    put:
      tags:
        - product-integration
      summary: Debug endpoint to apply an update by session id
      description: The session id should match one from a running game
      operationId: PutProductIntegrationV1DebugAppUpdateApply
      parameters:
        - name: sessionId
          in: query
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No content
  /product-integration/v1/debug/app-update/statuses:
    get:
      tags:
        - product-integration
      summary: Debug endpoint to get a list of all the app update statuses
      description: This will return a map of session ids for open games to update statuses
      operationId: GetProductIntegrationV1DebugAppUpdateStatuses
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  $ref: '#/components/schemas/ProductIntegrationDebugAppUpdateStatus'
            application/x-yaml:
              schema:
                type: object
                additionalProperties:
                  $ref: '#/components/schemas/ProductIntegrationDebugAppUpdateStatus'
            application/x-msgpack:
              schema:
                type: object
                additionalProperties:
                  $ref: '#/components/schemas/ProductIntegrationDebugAppUpdateStatus'
  '/product-integration/v1/debug/app-update/statuses/{sessionId}':
    get:
      tags:
        - product-integration
      summary: Debug endpoint to get an update status by session id
      description: The session id should match one from a running game
      operationId: GetProductIntegrationV1DebugAppUpdateStatusesBySessionId
      parameters:
        - name: sessionId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductIntegrationProductIntegrationAppUpdateStatus'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ProductIntegrationProductIntegrationAppUpdateStatus'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/ProductIntegrationProductIntegrationAppUpdateStatus'
    put:
      tags:
        - product-integration
      summary: Debug endpoint to update the app's update status by session id
      description: Debug endpoint to update the app's update status by session id
      operationId: PutProductIntegrationV1DebugAppUpdateStatusesBySessionId
      parameters:
        - name: sessionId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductIntegrationProductIntegrationAppUpdateStatus'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ProductIntegrationProductIntegrationAppUpdateStatus'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/ProductIntegrationProductIntegrationAppUpdateStatus'
      responses:
        '204':
          description: No content
  /product-launcher/v1/default-product:
    delete:
      tags:
        - Plugins
        - Plugin product-launcher
      summary: Closes the launched default product.
      operationId: DeleteProductLauncherV1DefaultProduct
      responses:
        '204':
          description: No content
    post:
      tags:
        - Plugins
        - Plugin product-launcher
      summary: Launches the default product. Returns the session ID.
      operationId: PostProductLauncherV1DefaultProduct
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
            application/x-yaml:
              schema:
                type: string
            application/x-msgpack:
              schema:
                type: string
  /product-launcher/v1/default-product/focus:
    post:
      tags:
        - Plugins
        - Plugin product-launcher
      summary: Brings the window of the default product into focus
      operationId: PostProductLauncherV1DefaultProductFocus
      responses:
        '204':
          description: No content
  /product-launcher/v1/partner-product:
    delete:
      tags:
        - Plugins
        - Plugin product-launcher
      summary: Closes the launched partner product.
      operationId: DeleteProductLauncherV1PartnerProduct
      responses:
        '204':
          description: No content
    post:
      tags:
        - Plugins
        - Plugin product-launcher
      summary: Launches the partner product. Returns the session ID.
      operationId: PostProductLauncherV1PartnerProduct
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
            application/x-yaml:
              schema:
                type: string
            application/x-msgpack:
              schema:
                type: string
  '/product-launcher/v1/products/{product-id}/patchlines/{patchline-id}':
    delete:
      tags:
        - Plugins
        - Plugin product-launcher
      summary: Closes the launched product-patchline.
      operationId: DeleteProductLauncherV1ProductsByProductIdPatchlinesByPatchlineId
      parameters:
        - name: product-id
          in: path
          required: true
          schema:
            type: string
        - name: patchline-id
          in: path
          required: true
          schema:
            type: string
        - name: shouldTerminateProcess
          in: query
          schema:
            type: boolean
      responses:
        '204':
          description: No content
    post:
      tags:
        - Plugins
        - Plugin product-launcher
      summary: Launch a non-internal product-patchline (e.g. a game). Returns the session ID.
      operationId: PostProductLauncherV1ProductsByProductIdPatchlinesByPatchlineId
      parameters:
        - name: product-id
          in: path
          required: true
          schema:
            type: string
        - name: patchline-id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
            application/x-yaml:
              schema:
                type: string
            application/x-msgpack:
              schema:
                type: string
    put:
      tags:
        - Plugins
        - Plugin product-launcher
      summary: 'Recover a session for a product that is already running, but Riot Client Services doesn''t know about since it just started up.'
      operationId: PutProductLauncherV1ProductsByProductIdPatchlinesByPatchlineId
      parameters:
        - name: product-id
          in: path
          required: true
          schema:
            type: string
        - name: patchline-id
          in: path
          required: true
          schema:
            type: string
        - name: pid
          in: query
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
            application/x-yaml:
              schema:
                type: string
            application/x-msgpack:
              schema:
                type: string
  '/product-launcher/v1/products/{product-id}/patchlines/{patchline-id}/rogue-process/{process-name}/{process-id}':
    delete:
      tags:
        - Plugins
        - Plugin product-launcher
      summary: Closes an allowed rogue process associated with a product.
      operationId: DeleteProductLauncherV1ProductsByProductIdPatchlinesByPatchlineIdRogueProcessByProcessNameByProcessId
      parameters:
        - name: product-id
          in: path
          required: true
          schema:
            type: string
        - name: patchline-id
          in: path
          required: true
          schema:
            type: string
        - name: process-name
          in: path
          required: true
          schema:
            type: string
        - name: process-id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '204':
          description: No content
  /product-localization/v1/data:
    get:
      tags:
        - product-localization
      summary: Returns loc plugin data - for triaging issues with bad or missing loc data
      operationId: GetProductLocalizationV1Data
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  $ref: '#/components/schemas/ProductLocalizationProductLocalizationData'
            application/x-yaml:
              schema:
                type: object
                additionalProperties:
                  $ref: '#/components/schemas/ProductLocalizationProductLocalizationData'
            application/x-msgpack:
              schema:
                type: object
                additionalProperties:
                  $ref: '#/components/schemas/ProductLocalizationProductLocalizationData'
  '/product-localization/v1/products/{productId}/patchlines/{patchlineId}/translations/{locale}':
    get:
      tags:
        - product-localization
      summary: Returns translations for a specified patchline and locale or fetches them if they are not yet fetched
      operationId: GetProductLocalizationV1ProductsByProductIdPatchlinesByPatchlineIdTranslationsByLocale
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: string
        - name: patchlineId
          in: path
          required: true
          schema:
            type: string
        - name: locale
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: string
            application/x-yaml:
              schema:
                type: object
                additionalProperties:
                  type: string
            application/x-msgpack:
              schema:
                type: object
                additionalProperties:
                  type: string
  '/product-localization/v1/products/{productId}/translations/{locale}':
    get:
      tags:
        - product-localization
      summary: Returns translations for a specified product and locale or fetches them if they are not yet fetched
      operationId: GetProductLocalizationV1ProductsByProductIdTranslationsByLocale
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: string
        - name: locale
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: string
            application/x-yaml:
              schema:
                type: object
                additionalProperties:
                  type: string
            application/x-msgpack:
              schema:
                type: object
                additionalProperties:
                  type: string
  /product-localization/v1/translate:
    post:
      tags:
        - product-localization
      summary: 'DEPRECATED - Returns a translation string(s) for given keys, if found, in Riot Client''s locale'
      operationId: PostProductLocalizationV1Translate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductLocalizationTranslateRequest'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ProductLocalizationTranslateRequest'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/ProductLocalizationTranslateRequest'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductLocalizationTranslateResponse'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ProductLocalizationTranslateResponse'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/ProductLocalizationTranslateResponse'
  /product-localization/v2/translate:
    post:
      tags:
        - product-localization
      summary: 'Returns a translation string(s) for given keys, if found'
      operationId: PostProductLocalizationV2Translate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductLocalizationTranslateRequest'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ProductLocalizationTranslateRequest'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/ProductLocalizationTranslateRequest'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductLocalizationTranslateResponse'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ProductLocalizationTranslateResponse'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/ProductLocalizationTranslateResponse'
  /product-metadata/v1/cookies:
    get:
      tags:
        - product-metadata
      summary: Retrieves all cookies necessary to access any URI associated with any patchline.
      description: "Returns a list of cookies associated with URIs that point to patchline resources.\n\nIt's not necessary to use the results of this endpoint manually; when the list is updated, `/cookie-jar/v1/cookies` is automatically updated with the new set of cookies."
      operationId: GetProductMetadataV1Cookies
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductMetadataCookieVector'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ProductMetadataCookieVector'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/ProductMetadataCookieVector'
  '/product-metadata/v1/debug/mock-data/{source}':
    get:
      tags:
        - product-metadata
      summary: Retrieves the current set of mock data for the plugin.
      description: '`source` may be one of `public` or `player`, indiciating which data set from client-config the mock data represents.'
      operationId: GetProductMetadataV1DebugMockDataBySource
      parameters:
        - name: source
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductMetadataDebugClientConfigSource'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ProductMetadataDebugClientConfigSource'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/ProductMetadataDebugClientConfigSource'
    put:
      tags:
        - product-metadata
      summary: Sets the current set of mock data for the plugin.
      description: "`source` may be one of `public` or `player`, indiciating which data set from client-config the mock data represents.\n\nThe entire data set is replaced in one call; partial updates are not supported. The best way to edit the current set of data is to use `GET /debug/mock-data`, modify the result, and `PUT` using this endpoint.\n\nSome minor fixups are performed with the provided data to ensure it is consistent. The plugin treats this as a 'oh hey, there is new data for client-config' event, and behaves appropriately."
      operationId: PutProductMetadataV1DebugMockDataBySource
      parameters:
        - name: source
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductMetadataDebugClientConfigSource'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ProductMetadataDebugClientConfigSource'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/ProductMetadataDebugClientConfigSource'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/x-yaml:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/x-msgpack:
              schema:
                type: object
                additionalProperties:
                  type: object
  /product-metadata/v1/debug/mock-mode:
    delete:
      tags:
        - product-metadata
      summary: 'Leaves mock mode, and deletes mock data.'
      description: 'When leaving mock mode, all data is refreshed from client-config and restored to normal.'
      operationId: DeleteProductMetadataV1DebugMockMode
      responses:
        '204':
          description: No content
    get:
      tags:
        - product-metadata
      summary: Returns whether the plugin is in mock mode or not.
      description: The return type is a boolean -- `true` indicates that plugin data is currently being mocked.
      operationId: GetProductMetadataV1DebugMockMode
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: boolean
            application/x-yaml:
              schema:
                type: boolean
            application/x-msgpack:
              schema:
                type: boolean
    put:
      tags:
        - product-metadata
      summary: 'Enters mock mode, which allows using mock product and patchline data.'
      description: "When entering mock mode, the current data set from client-config is copied, and further updates from client-config are ignored. The plugin otherwise tries to behave as it would normally, for instance, private products will only be listed when signed in.\n\nUse the `/debug/mock-data` endpoint to get/set mocked data in this mode."
      operationId: PutProductMetadataV1DebugMockMode
      responses:
        '204':
          description: No content
  /product-metadata/v1/definitions/products:
    get:
      tags:
        - product-metadata
      summary: Retrieve brief definitions of all entitled products.
      description: 'Returns the same data available via the `/products` resource, except patchlines are returned as a list of patchline IDs, rather than full patchline definitions.'
      operationId: GetProductMetadataV1DefinitionsProducts
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductMetadataProductDefinitionMap'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ProductMetadataProductDefinitionMap'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/ProductMetadataProductDefinitionMap'
  '/product-metadata/v1/definitions/products/{productId}':
    get:
      tags:
        - product-metadata
      summary: Retrieve a brief definition of a specific product.
      description: 'Returns the same data available via the `/products/{productId}` resource, except patchlines are returned as a list of patchline IDs, rather than full patchline definitions.'
      operationId: GetProductMetadataV1DefinitionsProductsByProductId
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductMetadataProductDefinition'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ProductMetadataProductDefinition'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/ProductMetadataProductDefinition'
  '/product-metadata/v1/products/{productId}/patchlines/{patchlineId}/secondary-patchlines':
    get:
      tags:
        - product-metadata
      summary: Retrieves a list of secondary patchlines.
      description: 'Returns a list of secondary patchlines from the specified patchline inside the specified product, including associated metadata.'
      operationId: GetProductMetadataV1ProductsByProductIdPatchlinesByPatchlineIdSecondaryPatchlines
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: string
        - name: patchlineId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductMetadataSecondaryPatchlineMap'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ProductMetadataSecondaryPatchlineMap'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/ProductMetadataSecondaryPatchlineMap'
  '/product-metadata/v1/products/{productId}/patchlines/{patchlineId}/secondary-patchlines/{secondaryPatchlineId}':
    get:
      tags:
        - product-metadata
      summary: Retrieves a secondary patchline within a patchline.
      description: Returns secondary patchline metadata from the specified patchline inside the specified product.
      operationId: GetProductMetadataV1ProductsByProductIdPatchlinesByPatchlineIdSecondaryPatchlinesBySecondaryPatchlineId
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: string
        - name: patchlineId
          in: path
          required: true
          schema:
            type: string
        - name: secondaryPatchlineId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductMetadataSecondaryPatchlineMetadata'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ProductMetadataSecondaryPatchlineMetadata'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/ProductMetadataSecondaryPatchlineMetadata'
  '/product-metadata/v1/publish-states/{configType}':
    get:
      tags:
        - product-metadata
      summary: Retrieves the publish state of products of config type (public or player).
      description: Returns Published or NotPublished
      operationId: GetProductMetadataV1PublishStatesByConfigType
      parameters:
        - name: configType
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductMetadataPublishState'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ProductMetadataPublishState'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/ProductMetadataPublishState'
  /product-metadata/v2/products:
    get:
      tags:
        - product-metadata
      summary: Retrieves a full list of all entitled products and patchlines.
      description: 'Returns all entitled products, with all metadata for patchlines and secondary patchlines associated with the product.'
      operationId: GetProductMetadataV2Products
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductMetadataProductMetadataMap'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ProductMetadataProductMetadataMap'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/ProductMetadataProductMetadataMap'
  '/product-metadata/v2/products/{productId}':
    get:
      tags:
        - product-metadata
      summary: Retrieves a single product and all its entitled patchlines.
      description: 'Returns a single entitled product, with all metadata for patchlines and secondary patchlines associated with the product.'
      operationId: GetProductMetadataV2ProductsByProductId
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductMetadataProductMetadata'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ProductMetadataProductMetadata'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/ProductMetadataProductMetadata'
  '/product-metadata/v2/products/{productId}/patchlines/{patchlineId}':
    get:
      tags:
        - product-metadata
      summary: Retrieves a single patchline.
      description: 'Returns a single patchline within a product, with all associated metadata, including any secondary patchlines.'
      operationId: GetProductMetadataV2ProductsByProductIdPatchlinesByPatchlineId
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: string
        - name: patchlineId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductMetadataPatchlineMetadata'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ProductMetadataPatchlineMetadata'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/ProductMetadataPatchlineMetadata'
  '/product-metadata/v2/products/{productId}/player-affinity-token':
    get:
      tags:
        - product-metadata
      summary: Retrieves player affinity token for a single product.
      description: Returns an id of single product with a map of its player affinities.
      operationId: GetProductMetadataV2ProductsByProductIdPlayerAffinityToken
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductMetadataPlayerAffinityProductToken'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ProductMetadataPlayerAffinityProductToken'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/ProductMetadataPlayerAffinityProductToken'
  /product-metadata/v2/region-locale:
    get:
      tags:
        - product-metadata
      summary: Get the current region and locale.
      operationId: GetProductMetadataV2RegionLocale
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductMetadataRegionLocale'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ProductMetadataRegionLocale'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/ProductMetadataRegionLocale'
  /product-session/v1/external-sessions:
    get:
      tags:
        - product-session
      summary: Get all sessions across products external to Riot Client. e.g. just games and not the UX product.
      operationId: GetProductSessionV1ExternalSessions
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  $ref: '#/components/schemas/ProductSessionSession'
            application/x-yaml:
              schema:
                type: object
                additionalProperties:
                  $ref: '#/components/schemas/ProductSessionSession'
            application/x-msgpack:
              schema:
                type: object
                additionalProperties:
                  $ref: '#/components/schemas/ProductSessionSession'
  '/product-session/v1/external-sessions/{session-id}':
    get:
      tags:
        - product-session
      summary: Get the session for a specific session ID for a product external to Riot Client. e.g. just games and not the UX product.
      operationId: GetProductSessionV1ExternalSessionsBySessionId
      parameters:
        - name: session-id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductSessionSession'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ProductSessionSession'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/ProductSessionSession'
  '/product-session/v1/heartbeat/{session-id}':
    get:
      tags:
        - product-session
      summary: Deprecated. Please use POST /product-session/v2/heartbeat.
      operationId: GetProductSessionV1HeartbeatBySessionId
      parameters:
        - name: session-id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: boolean
            application/x-yaml:
              schema:
                type: boolean
            application/x-msgpack:
              schema:
                type: boolean
  /product-session/v1/host-session:
    get:
      tags:
        - product-session
      summary: 'Fetches the session of the ''host app'', if it exists for this platform.'
      description: 'A ''host session'' may be created for the application that Foundation is running within, used on mobile or console platforms.'
      operationId: GetProductSessionV1HostSession
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductSessionSession'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ProductSessionSession'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/ProductSessionSession'
    post:
      tags:
        - product-session
      summary: Handles creation of a new session for the 'host app'
      description: 'A ''host session'' may be created for the application that Foundation is running within, used on mobile or console platforms.'
      operationId: PostProductSessionV1HostSession
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductSessionSession'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ProductSessionSession'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/ProductSessionSession'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
            application/x-yaml:
              schema:
                type: string
            application/x-msgpack:
              schema:
                type: string
  /product-session/v1/host-session/id:
    get:
      tags:
        - product-session
      summary: 'Fetches the session ID of the ''host app'', if it exists for this platform.'
      description: 'A ''host session'' may be created for the application that Foundation is running within, used on mobile or console platforms.'
      operationId: GetProductSessionV1HostSessionId
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
            application/x-yaml:
              schema:
                type: string
            application/x-msgpack:
              schema:
                type: string
  /product-session/v1/logs/path:
    get:
      tags:
        - product-session
      summary: Returns the standard logs folder for your application
      operationId: GetProductSessionV1LogsPath
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
            application/x-yaml:
              schema:
                type: string
            application/x-msgpack:
              schema:
                type: string
  '/product-session/v1/logs/path/{patchline-name}':
    get:
      tags:
        - product-session
      summary: Returns the standard logs folder for a given patchline name.
      operationId: GetProductSessionV1LogsPathByPatchlineName
      parameters:
        - name: patchline-name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
            application/x-yaml:
              schema:
                type: string
            application/x-msgpack:
              schema:
                type: string
  '/product-session/v1/session-heartbeats/{session-id}':
    get:
      tags:
        - product-session
      summary: '[Only intended to be called by product launchers, like Riot Client.] Get the heartbeat for a specific session ID.'
      description: 'The heartbeat is split out from the normal session endpoint because it changes frequently, and it would be slow to notify all the subscribers that care about game starting and stopping but not heartbeats.'
      operationId: GetProductSessionV1SessionHeartbeatsBySessionId
      parameters:
        - name: session-id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductSessionSessionHeartbeat'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ProductSessionSessionHeartbeat'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/ProductSessionSessionHeartbeat'
  /product-session/v1/sessions:
    get:
      tags:
        - product-session
      summary: Get all sessions across products.
      operationId: GetProductSessionV1Sessions
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  $ref: '#/components/schemas/ProductSessionSession'
            application/x-yaml:
              schema:
                type: object
                additionalProperties:
                  $ref: '#/components/schemas/ProductSessionSession'
            application/x-msgpack:
              schema:
                type: object
                additionalProperties:
                  $ref: '#/components/schemas/ProductSessionSession'
  '/product-session/v1/sessions/{session-id}':
    delete:
      tags:
        - product-session
      summary: '[Only intended to be called by product launchers, like Riot Client.] Handles deleting a session.'
      operationId: DeleteProductSessionV1SessionsBySessionId
      parameters:
        - name: session-id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductSessionSession'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ProductSessionSession'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/ProductSessionSession'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/x-yaml:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/x-msgpack:
              schema:
                type: object
                additionalProperties:
                  type: object
    get:
      tags:
        - product-session
      summary: '[Only intended to be called by product launchers, like Riot Client.] Get the session for a specific session ID.'
      operationId: GetProductSessionV1SessionsBySessionId
      parameters:
        - name: session-id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductSessionSession'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ProductSessionSession'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/ProductSessionSession'
    post:
      tags:
        - product-session
      summary: Handles creation of a new session.
      operationId: PostProductSessionV1SessionsBySessionId
      parameters:
        - name: session-id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductSessionSession'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ProductSessionSession'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/ProductSessionSession'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/x-yaml:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/x-msgpack:
              schema:
                type: object
                additionalProperties:
                  type: object
  /product-session/v2/heartbeat:
    post:
      tags:
        - product-session
      summary: "Periodic heartbeat made by products to update Riot Client with state of gameplay, and to verify connectivity to Riot Client. \n\nSessionId is derived from 'session' HTTP header, or websocket authentication."
      description: "* Call this endpoint periodically to verify that Riot Client is still responding.\n\n* Upon your product entering the 'Gameplay' phase, Riot Client will lock patching and prevent updates to products or Riot Client in the case of a crash and restart, prioritizing launching the game promptly.\n\n* Products should include a 'User-Agent' header per RFC-0031d. \n\n* If this call fails and your sessionID is valid, then you can begin the recovery process specified in RFC-1064.\n\n* Riot Client expects this heartbeat from your application on a regular interval (once every 10-60 seconds) in order to make sure your application is not hung or otherwise unresponsive."
      operationId: PostProductSessionV2Heartbeat
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductSessionHeartbeatInfo'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ProductSessionHeartbeatInfo'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/ProductSessionHeartbeatInfo'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: boolean
            application/x-yaml:
              schema:
                type: boolean
            application/x-msgpack:
              schema:
                type: boolean
  '/product-session/v2/heartbeat/{session-id}':
    post:
      tags:
        - product-session
      summary: 'Periodic heartbeat made by products to update Riot Client with state of gameplay, and to verify connectivity to Riot Client. '
      description: "* Call this endpoint periodically to verify that Riot Client is still responding.\n\n* Upon your product entering the 'Gameplay' phase, Riot Client will lock patching and prevent updates to products or Riot Client in the case of a crash and restart, prioritizing launching the game promptly.\n\n* Products should include a 'User-Agent' header per RFC-0031d. \n\n* If this call fails and your sessionID is valid, then you can begin the recovery process specified in RFC-1064.\n\n* Riot Client expects this heartbeat from your application on a regular interval (once every 10-60 seconds) in order to make sure your application is not hung or otherwise unresponsive."
      operationId: PostProductSessionV2HeartbeatBySessionId
      parameters:
        - name: session-id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductSessionHeartbeatInfo'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ProductSessionHeartbeatInfo'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/ProductSessionHeartbeatInfo'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: boolean
            application/x-yaml:
              schema:
                type: boolean
            application/x-msgpack:
              schema:
                type: boolean
  /publishing-content/v1/news-feed:
    get:
      tags:
        - Plugins
        - Plugin publishing-content
      summary: Returns the news feed content for the product details page for the productId
      operationId: GetPublishingContentV1NewsFeed
      parameters:
        - name: locale
          in: query
          required: true
          schema:
            type: string
        - name: multigamePromoChannelId
          in: query
          required: true
          schema:
            type: string
        - name: productId
          in: query
          schema:
            type: string
        - name: from
          in: query
          schema:
            type: integer
            format: int32
        - name: to
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublishingContentNewsFeed'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/PublishingContentNewsFeed'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/PublishingContentNewsFeed'
  '/publishing-content/v1/promo/{productId}':
    get:
      tags:
        - Plugins
        - Plugin publishing-content
      summary: Returns the promotional publishing content for the product details page for the productId
      operationId: GetPublishingContentV1PromoByProductId
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: string
        - name: from
          in: query
          schema:
            type: integer
            format: int32
        - name: to
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublishingContentNewsFeed'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/PublishingContentNewsFeed'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/PublishingContentNewsFeed'
  /restriction/v1/launchRestrictedProducts:
    get:
      tags:
        - Plugins
        - Plugin restriction
      summary: Returns all product ids the player is launch restricted for
      operationId: GetRestrictionV1LaunchRestrictedProducts
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
            application/x-yaml:
              schema:
                type: array
                items:
                  type: string
            application/x-msgpack:
              schema:
                type: array
                items:
                  type: string
  /restriction/v1/launchRestrictions:
    get:
      tags:
        - Plugins
        - Plugin restriction
      summary: Returns all launch restrictions for the logged in player
      operationId: GetRestrictionV1LaunchRestrictions
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RestrictionLaunchRestrictions'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RestrictionLaunchRestrictions'
            application/x-msgpack:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RestrictionLaunchRestrictions'
  /restriction/v1/ready:
    get:
      tags:
        - Plugins
        - Plugin restriction
      summary: Returns true when the plugin is ready. Consumers are expected to wait until the plugin is ready to request restrictions
      operationId: GetRestrictionV1Ready
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: boolean
            application/x-yaml:
              schema:
                type: boolean
            application/x-msgpack:
              schema:
                type: boolean
  /riot-client-app-command/v1/debug/use-local-uri-handler:
    post:
      tags:
        - Plugins
        - Plugin riot-client-app-command
      summary: Sets uri handler to use riotclient-local for testing
      operationId: PostRiotClientAppCommandV1DebugUseLocalUriHandler
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
            application/x-yaml:
              schema:
                type: string
            application/x-msgpack:
              schema:
                type: string
  /riot-client-app-command/v1/uri-handler:
    get:
      tags:
        - Plugins
        - Plugin riot-client-app-command
      summary: 'Returns 204 if a URI handler is registered for this client, and 404 otherwise'
      operationId: GetRiotClientAppCommandV1UriHandler
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
            application/x-yaml:
              schema:
                type: string
            application/x-msgpack:
              schema:
                type: string
    post:
      tags:
        - Plugins
        - Plugin riot-client-app-command
      summary: 'Attempts to configure a URI handler for this client, elevating if necessary'
      operationId: PostRiotClientAppCommandV1UriHandler
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
            application/x-yaml:
              schema:
                type: string
            application/x-msgpack:
              schema:
                type: string
  /riot-client-auth/v1/authorization:
    get:
      tags:
        - riot-client-auth
      summary: The player's RSO tokens
      description: "*Internal Riot Client API. Please don't use outside of Riot Client.*\n\nProvides the RSO Access Token for the SDK, intended for internal use by plugins that don't provide game-specific data."
      operationId: GetRiotClientAuthV1Authorization
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RiotClientAuthApiAuthorization'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/RiotClientAuthApiAuthorization'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/RiotClientAuthApiAuthorization'
  /riot-client-auth/v1/home-base-country:
    get:
      tags:
        - riot-client-auth
      summary: The player's home base country
      description: "*Internal Riot Client API. Please don't use outside of Riot Client.*\n\nProvides the home base country provided by RSO, intended for internal use by plugins that don't provide game-specific data."
      operationId: GetRiotClientAuthV1HomeBaseCountry
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RiotClientAuthApiHomeBaseCountry'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/RiotClientAuthApiHomeBaseCountry'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/RiotClientAuthApiHomeBaseCountry'
  /riot-client-auth/v1/login-country:
    get:
      tags:
        - riot-client-auth
      summary: The player's login country
      description: "*Internal Riot Client API. Please don't use outside of Riot Client.*\n\nProvides the login country provided by RSO, intended for internal use by plugins that don't provide game-specific data."
      operationId: GetRiotClientAuthV1LoginCountry
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RiotClientAuthApiLoginCountry'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/RiotClientAuthApiLoginCountry'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/RiotClientAuthApiLoginCountry'
  /riot-client-auth/v1/rso-client:
    get:
      tags:
        - riot-client-auth
      summary: Fetch the SDK's RSO client details.
      description: "*Internal Riot Client API. Please don't use outside of Riot Client.*\n\nProvides the RSO client ID and any other required client details for game-agnostic authorization business logic.\n\nSee [RSO's Client documentation](http://accounts.docs.rpg.riotgames.io/docs/clients/index/)For more context."
      operationId: GetRiotClientAuthV1RsoClient
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RiotClientAuthApiClientDetails'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/RiotClientAuthApiClientDetails'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/RiotClientAuthApiClientDetails'
  /riot-client-auth/v1/userinfo:
    get:
      tags:
        - riot-client-auth
      summary: Public claims about the player
      description: "*Internal Riot Client API. Please don't use outside of Riot Client.*\n\nProvides game-agnostic, unencrypted claims about the player intended for use by Riot Client's UI and internal plugins. Note that these claims are neither signed nor encrypted, and should not be sent to remote services as authoritative."
      operationId: GetRiotClientAuthV1Userinfo
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RiotClientAuthApiUserInfo'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/RiotClientAuthApiUserInfo'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/RiotClientAuthApiUserInfo'
  '/riot-client-lifecycle-state/v1/state/{state}':
    get:
      tags:
        - Plugins
        - Plugin riot-client-lifecycle-state
      summary: 'Retrieve the contents a named state, along with last-acked serial numbers.'
      operationId: GetRiotClientLifecycleStateV1StateByState
      parameters:
        - name: state
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RiotClientLifecycleStateBoundState'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/RiotClientLifecycleStateBoundState'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/RiotClientLifecycleStateBoundState'
  '/riot-client-lifecycle-state/v1/state/{state}/{param}/subscriber/{subscriber}':
    get:
      tags:
        - Plugins
        - Plugin riot-client-lifecycle-state
      summary: 'Retrieve the contents a named state, along with the last-acked serial number for a particular subscriber.'
      operationId: GetRiotClientLifecycleStateV1StateByStateByParamSubscriberBySubscriber
      parameters:
        - name: state
          in: path
          required: true
          schema:
            type: string
        - name: param
          in: path
          required: true
          schema:
            type: string
        - name: subscriber
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RiotClientLifecycleStateBoundState'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/RiotClientLifecycleStateBoundState'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/RiotClientLifecycleStateBoundState'
  '/riot-client-lifecycle-state/v1/state/{state}/{param}/subscriber/{subscriber}/serial-number':
    put:
      tags:
        - Plugins
        - Plugin riot-client-lifecycle-state
      summary: Sets a serial number for a parameterized state.
      operationId: PutRiotClientLifecycleStateV1StateByStateByParamSubscriberBySubscriberSerialNumber
      parameters:
        - name: state
          in: path
          required: true
          schema:
            type: string
        - name: param
          in: path
          required: true
          schema:
            type: string
        - name: subscriber
          in: path
          required: true
          schema:
            type: string
        - name: value
          in: query
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '204':
          description: No content
  '/riot-client-lifecycle-state/v1/state/{state}/subscriber/{subscriber}':
    get:
      tags:
        - Plugins
        - Plugin riot-client-lifecycle-state
      summary: 'Retrieve the contents a named state, along with the last-acked serial number for a particular subscriber.'
      operationId: GetRiotClientLifecycleStateV1StateByStateSubscriberBySubscriber
      parameters:
        - name: state
          in: path
          required: true
          schema:
            type: string
        - name: subscriber
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RiotClientLifecycleStateBoundState'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/RiotClientLifecycleStateBoundState'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/RiotClientLifecycleStateBoundState'
  '/riot-client-lifecycle-state/v1/state/{state}/subscriber/{subscriber}/serial-number':
    put:
      tags:
        - Plugins
        - Plugin riot-client-lifecycle-state
      summary: Sets a single named serial number.
      operationId: PutRiotClientLifecycleStateV1StateByStateSubscriberBySubscriberSerialNumber
      parameters:
        - name: state
          in: path
          required: true
          schema:
            type: string
        - name: subscriber
          in: path
          required: true
          schema:
            type: string
        - name: value
          in: query
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '204':
          description: No content
  /riot-client-lifecycle/v1/hide:
    post:
      tags:
        - Plugins
        - Plugin riot-client-lifecycle
      summary: Hide the UX.
      operationId: PostRiotClientLifecycleV1Hide
      responses:
        '204':
          description: No content
  /riot-client-lifecycle/v1/league-region-election:
    get:
      tags:
        - Plugins
        - Plugin riot-client-lifecycle
      summary: Returns a structure containing the current state of League account election for the logged in account.
      operationId: GetRiotClientLifecycleV1LeagueRegionElection
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeagueRegionElectionResource'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/LeagueRegionElectionResource'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/LeagueRegionElectionResource'
    post:
      tags:
        - Plugins
        - Plugin riot-client-lifecycle
      summary: 'Sets League account election information for the current account -- specifically, ''selectedRegions''.'
      operationId: PostRiotClientLifecycleV1LeagueRegionElection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegionLocale'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/RegionLocale'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/RegionLocale'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegionAssignmentResponse'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/RegionAssignmentResponse'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/RegionAssignmentResponse'
  /riot-client-lifecycle/v1/product-context:
    delete:
      tags:
        - Plugins
        - Plugin riot-client-lifecycle
      summary: 'Deletes the existing product context, if it exists.'
      operationId: DeleteRiotClientLifecycleV1ProductContext
      responses:
        '204':
          description: No content
    get:
      tags:
        - Plugins
        - Plugin riot-client-lifecycle
      summary: Returns the product context.
      operationId: GetRiotClientLifecycleV1ProductContext
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductPatchlineInfo'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ProductPatchlineInfo'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/ProductPatchlineInfo'
    put:
      tags:
        - Plugins
        - Plugin riot-client-lifecycle
      summary: Sets the product and patchline to launch.
      operationId: PutRiotClientLifecycleV1ProductContext
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductPatchline'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ProductPatchline'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/ProductPatchline'
      responses:
        '204':
          description: No content
  /riot-client-lifecycle/v1/product-context-phase:
    get:
      tags:
        - Plugins
        - Plugin riot-client-lifecycle
      summary: Returns the product context phase.
      operationId: GetRiotClientLifecycleV1ProductContextPhase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
            application/x-yaml:
              schema:
                type: string
            application/x-msgpack:
              schema:
                type: string
  /riot-client-lifecycle/v1/quit:
    post:
      tags:
        - Plugins
        - Plugin riot-client-lifecycle
      summary: Quit Riot Client. If any games are running show the games-running exit-dialog.
      operationId: PostRiotClientLifecycleV1Quit
      responses:
        '204':
          description: No content
  /riot-client-lifecycle/v1/restart:
    post:
      tags:
        - Plugins
        - Plugin riot-client-lifecycle
      summary: Restarts Riot Client. If any games are running show the games-running exit-dialog.
      operationId: PostRiotClientLifecycleV1Restart
      responses:
        '204':
          description: No content
  /riot-client-lifecycle/v1/show:
    post:
      tags:
        - Plugins
        - Plugin riot-client-lifecycle
      summary: Show the UX.
      operationId: PostRiotClientLifecycleV1Show
      responses:
        '204':
          description: No content
  /riot-client-lifecycle/v1/ux-command:
    delete:
      tags:
        - Plugins
        - Plugin riot-client-lifecycle
      summary: Deletes the current UX command so that the default client UX app no longer needs to process it
      operationId: DeleteRiotClientLifecycleV1UxCommand
      responses:
        '204':
          description: No content
    get:
      tags:
        - Plugins
        - Plugin riot-client-lifecycle
      summary: Returns the current UX command that the default client UX app needs to process
      operationId: GetRiotClientLifecycleV1UxCommand
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UxCommand'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/UxCommand'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/UxCommand'
    put:
      tags:
        - Plugins
        - Plugin riot-client-lifecycle
      summary: Sets a new UX command that the default client UX app should process
      operationId: PutRiotClientLifecycleV1UxCommand
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UxCommand'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/UxCommand'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/UxCommand'
      responses:
        '204':
          description: No content
  /riot-login/v1/status:
    get:
      tags:
        - riot-login
      summary: Returns the current login state of the client
      operationId: GetRiotLoginV1Status
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RiotLoginLoginStatus'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/RiotLoginLoginStatus'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/RiotLoginLoginStatus'
  /riot-messaging-service/v1/acknowledge:
    post:
      tags:
        - riot-messaging-service
      summary: acknowledge RMS message received
      operationId: PostRiotMessagingServiceV1Acknowledge
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RiotMessagingServiceAcknowledgeBody'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/RiotMessagingServiceAcknowledgeBody'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/RiotMessagingServiceAcknowledgeBody'
      responses:
        '204':
          description: No content
  /riot-messaging-service/v1/connect:
    delete:
      tags:
        - riot-messaging-service
      summary: Schedule a disconnect request from RMS.
      operationId: DeleteRiotMessagingServiceV1Connect
      responses:
        '204':
          description: No content
    post:
      tags:
        - riot-messaging-service
      summary: Schedule a connect request to RMS.
      operationId: PostRiotMessagingServiceV1Connect
      parameters:
        - name: idToken
          in: query
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No content
  /riot-messaging-service/v1/entitlements:
    delete:
      tags:
        - riot-messaging-service
      summary: Delete session entitlements token
      operationId: DeleteRiotMessagingServiceV1Entitlements
      responses:
        '204':
          description: No content
    post:
      tags:
        - riot-messaging-service
      summary: Update session entitlements token
      operationId: PostRiotMessagingServiceV1Entitlements
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RiotMessagingServiceEntitlementsToken'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/RiotMessagingServiceEntitlementsToken'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/RiotMessagingServiceEntitlementsToken'
      responses:
        '204':
          description: No content
  '/riot-messaging-service/v1/message/{a}':
    get:
      tags:
        - riot-messaging-service
      summary: Util endpoint that responds with any cached messages for the resource based on component a
      description: 'Endpoint deprecated and will be deleted October 2022.  Please use ''riot-messaging-service/v1/messages/{+path}''.'
      operationId: GetRiotMessagingServiceV1MessageByA
      parameters:
        - name: a
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RiotMessagingServiceMessage'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/RiotMessagingServiceMessage'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/RiotMessagingServiceMessage'
  '/riot-messaging-service/v1/message/{a}/{b}':
    get:
      tags:
        - riot-messaging-service
      summary: Util endpoint that responds with any cached messages for the aggregate resource based on components a:b
      description: 'Endpoint deprecated and will be deleted October 2022.  Please use ''riot-messaging-service/v1/messages/{+path}''.'
      operationId: GetRiotMessagingServiceV1MessageByAByB
      parameters:
        - name: a
          in: path
          required: true
          schema:
            type: string
        - name: b
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RiotMessagingServiceMessage'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/RiotMessagingServiceMessage'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/RiotMessagingServiceMessage'
  '/riot-messaging-service/v1/message/{a}/{b}/{c}':
    get:
      tags:
        - riot-messaging-service
      summary: Util endpoint that responds with any cached messages for the aggregate resource based on components a:b:c
      description: 'Endpoint deprecated and will be deleted October 2022.  Please use ''riot-messaging-service/v1/messages/{+path}''.'
      operationId: GetRiotMessagingServiceV1MessageByAByBByC
      parameters:
        - name: a
          in: path
          required: true
          schema:
            type: string
        - name: b
          in: path
          required: true
          schema:
            type: string
        - name: c
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RiotMessagingServiceMessage'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/RiotMessagingServiceMessage'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/RiotMessagingServiceMessage'
  '/riot-messaging-service/v1/message/{a}/{b}/{c}/{d}':
    get:
      tags:
        - riot-messaging-service
      summary: Util endpoint that responds with any cached messages for the aggregate resource based on components a:b:c:d
      description: 'Endpoint deprecated and will be deleted October 2022.  Please use ''riot-messaging-service/v1/messages/{+path}''.'
      operationId: GetRiotMessagingServiceV1MessageByAByBByCByD
      parameters:
        - name: a
          in: path
          required: true
          schema:
            type: string
        - name: b
          in: path
          required: true
          schema:
            type: string
        - name: c
          in: path
          required: true
          schema:
            type: string
        - name: d
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RiotMessagingServiceMessage'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/RiotMessagingServiceMessage'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/RiotMessagingServiceMessage'
  '/riot-messaging-service/v1/message/{a}/{b}/{c}/{d}/{e}':
    get:
      tags:
        - riot-messaging-service
      summary: Util endpoint that responds with any cached messages for the aggregate resource based on components a:b:c:d:e
      description: 'Endpoint deprecated and will be deleted October 2022.  Please use ''riot-messaging-service/v1/messages/{+path}''.'
      operationId: GetRiotMessagingServiceV1MessageByAByBByCByDByE
      parameters:
        - name: a
          in: path
          required: true
          schema:
            type: string
        - name: b
          in: path
          required: true
          schema:
            type: string
        - name: c
          in: path
          required: true
          schema:
            type: string
        - name: d
          in: path
          required: true
          schema:
            type: string
        - name: e
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RiotMessagingServiceMessage'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/RiotMessagingServiceMessage'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/RiotMessagingServiceMessage'
  '/riot-messaging-service/v1/message/{a}/{b}/{c}/{d}/{e}/{f}':
    get:
      tags:
        - riot-messaging-service
      summary: Util endpoint that responds with any cached messages for the aggregate resource based on components a:b:c:d:e:f
      description: 'Endpoint deprecated and will be deleted October 2022.  Please use ''riot-messaging-service/v1/messages/{+path}''.'
      operationId: GetRiotMessagingServiceV1MessageByAByBByCByDByEByF
      parameters:
        - name: a
          in: path
          required: true
          schema:
            type: string
        - name: b
          in: path
          required: true
          schema:
            type: string
        - name: c
          in: path
          required: true
          schema:
            type: string
        - name: d
          in: path
          required: true
          schema:
            type: string
        - name: e
          in: path
          required: true
          schema:
            type: string
        - name: f
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RiotMessagingServiceMessage'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/RiotMessagingServiceMessage'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/RiotMessagingServiceMessage'
  '/riot-messaging-service/v1/messages/{+path}':
    get:
      tags:
        - riot-messaging-service
      summary: Subscription endpoint to receive async notifications of push messages with the given resource path.
      description: "Subscriptions can be for a fully qualified path (mock/v1/resource), a wildcard (mock/v1/ *) or a recursive wildcard (mock/ **).\n\nNote that subscriptions for your application cannot overlap or conflict, such that a subscription for `mock/ **` cannot coincide with a subscription for `mock/v1/resource`."
      operationId: GetRiotMessagingServiceV1MessagesByPath
      parameters:
        - name: path
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RiotMessagingServiceMessage'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/RiotMessagingServiceMessage'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/RiotMessagingServiceMessage'
  /riot-messaging-service/v1/reconnect:
    post:
      tags:
        - riot-messaging-service
      summary: Schedule a reconnect request to RMS. For debug purposes only.
      operationId: PostRiotMessagingServiceV1Reconnect
      responses:
        '204':
          description: No content
  /riot-messaging-service/v1/session:
    delete:
      tags:
        - riot-messaging-service
      summary: 'Kill the current session, if any.'
      operationId: DeleteRiotMessagingServiceV1Session
      responses:
        '204':
          description: No content
    get:
      tags:
        - riot-messaging-service
      summary: 'Return the current session, if any.'
      operationId: GetRiotMessagingServiceV1Session
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RiotMessagingServiceSession'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/RiotMessagingServiceSession'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/RiotMessagingServiceSession'
  /riot-messaging-service/v1/simulate-message:
    post:
      tags:
        - riot-messaging-service
      summary: Simulate an RMS message. For debug purposes only.
      operationId: PostRiotMessagingServiceV1SimulateMessage
      parameters:
        - name: resource
          in: query
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
          application/x-yaml:
            schema:
              type: object
              additionalProperties:
                type: object
          application/x-msgpack:
            schema:
              type: object
              additionalProperties:
                type: object
      responses:
        '204':
          description: No content
  /riot-messaging-service/v1/socket:
    delete:
      tags:
        - riot-messaging-service
      summary: Schedule a socket kill request. For debug purposes only.
      operationId: DeleteRiotMessagingServiceV1Socket
      responses:
        '204':
          description: No content
  /riot-messaging-service/v1/state:
    get:
      tags:
        - riot-messaging-service
      summary: Return all state
      operationId: GetRiotMessagingServiceV1State
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RiotMessagingServiceState'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/RiotMessagingServiceState'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/RiotMessagingServiceState'
  /riot-messaging-service/v1/switch-servers:
    post:
      tags:
        - riot-messaging-service
      summary: Schedule a switching server request to RMS. For debug purposes only.
      operationId: PostRiotMessagingServiceV1SwitchServers
      responses:
        '204':
          description: No content
  /riot-messaging-service/v1/token/refresh:
    post:
      tags:
        - riot-messaging-service
      summary: Schedule a token refresh request to RMS. For debug purposes only.
      operationId: PostRiotMessagingServiceV1TokenRefresh
      responses:
        '204':
          description: No content
  /riot-messaging-service/v1/user:
    get:
      tags:
        - riot-messaging-service
      summary: Returns the PUUID that this plugin is currently authenticated for
      operationId: GetRiotMessagingServiceV1User
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
            application/x-yaml:
              schema:
                type: string
            application/x-msgpack:
              schema:
                type: string
  /riot-messaging-service/v2/simulate-message:
    post:
      tags:
        - riot-messaging-service
      summary: Simulate an RMS message. For debug purposes only.
      operationId: PostRiotMessagingServiceV2SimulateMessage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RiotMessagingServiceMessage'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/RiotMessagingServiceMessage'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/RiotMessagingServiceMessage'
      responses:
        '204':
          description: No content
  '/riot-status/v1/debug/set-riotclient-patchline/{patchlineId}':
    post:
      tags:
        - riot-status
      summary: Returns raw JSON service status information for issues affecting multiple games
      operationId: PostRiotStatusV1DebugSetRiotclientPatchlineByPatchlineId
      parameters:
        - name: patchlineId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
            application/x-yaml:
              schema:
                type: string
            application/x-msgpack:
              schema:
                type: string
  '/riot-status/v1/products/{productId}/patchlines/{patchlineId}/deployments/{deployment}':
    get:
      tags:
        - riot-status
      summary: Returns raw JSON service status information for a specific game service cluster
      operationId: GetRiotStatusV1ProductsByProductIdPatchlinesByPatchlineIdDeploymentsByDeployment
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: string
        - name: patchlineId
          in: path
          required: true
          schema:
            type: string
        - name: deployment
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
            application/x-yaml:
              schema:
                type: string
            application/x-msgpack:
              schema:
                type: string
  /riot-status/v1/riotclient:
    get:
      tags:
        - riot-status
      summary: Returns raw JSON service status information for issues affecting multiple games
      operationId: GetRiotStatusV1Riotclient
      parameters:
        - name: patchlineId
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
            application/x-yaml:
              schema:
                type: string
            application/x-msgpack:
              schema:
                type: string
  /riotclient/affinity:
    delete:
      tags:
        - riotclient
      summary: Deletes the current runtime affinity of the application.
      operationId: DeleteRiotclientAffinity
      responses:
        '204':
          description: No content
    get:
      tags:
        - riotclient
      summary: Get the current runtime affinity of the application.
      operationId: GetRiotclientAffinity
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
            application/x-yaml:
              schema:
                type: object
            application/x-msgpack:
              schema:
                type: object
    post:
      tags:
        - riotclient
      summary: Sets the current runtime affinity of the application.
      operationId: PostRiotclientAffinity
      parameters:
        - name: newAffinity
          in: query
          description: The new affinity to use.
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No content
  /riotclient/app-name:
    get:
      tags:
        - riotclient
      summary: Application name without file extension
      operationId: GetRiotclientAppName
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
            application/x-yaml:
              schema:
                type: string
            application/x-msgpack:
              schema:
                type: string
  /riotclient/app-port:
    get:
      tags:
        - riotclient
      summary: Get the TCP port number that the remoting server is listening on.
      operationId: GetRiotclientAppPort
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: integer
                format: int16
            application/x-yaml:
              schema:
                type: integer
                format: int16
            application/x-msgpack:
              schema:
                type: integer
                format: int16
  /riotclient/auth-token:
    get:
      tags:
        - riotclient
      summary: Return the auth token used by the remoting server
      operationId: GetRiotclientAuthToken
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
            application/x-yaml:
              schema:
                type: string
            application/x-msgpack:
              schema:
                type: string
  /riotclient/build-number:
    get:
      tags:
        - riotclient
      summary: Numeric build number for this application
      operationId: GetRiotclientBuildNumber
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: integer
                format: int64
            application/x-yaml:
              schema:
                type: integer
                format: int64
            application/x-msgpack:
              schema:
                type: integer
                format: int64
  /riotclient/command-line-args:
    get:
      tags:
        - riotclient
      summary: Get the command line parameters for the application
      description: 'Command line arguments are deprecated, and will be removed June 2022. Use configuration directly.'
      operationId: GetRiotclientCommandLineArgs
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
            application/x-yaml:
              schema:
                type: array
                items:
                  type: string
            application/x-msgpack:
              schema:
                type: array
                items:
                  type: string
  /riotclient/get_region_locale:
    get:
      tags:
        - riotclient
      summary: Get the current region and locale.
      operationId: GetRiotclientGetRegionLocale
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegionLocale'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/RegionLocale'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/RegionLocale'
  /riotclient/lifecycle:
    get:
      tags:
        - riotclient
      summary: Get the current lifecycle events.
      operationId: GetRiotclientLifecycle
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LifecycleData'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/LifecycleData'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/LifecycleData'
    put:
      tags:
        - riotclient
      summary: Update the current app lifecycle events.
      operationId: PutRiotclientLifecycle
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LifecycleData'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/LifecycleData'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/LifecycleData'
      responses:
        '204':
          description: No content
  /riotclient/machine-id:
    get:
      tags:
        - riotclient
      summary: Base64 encoded uuid identifying the user's machine
      operationId: GetRiotclientMachineId
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
            application/x-yaml:
              schema:
                type: string
            application/x-msgpack:
              schema:
                type: string
  /riotclient/new-args:
    post:
      tags:
        - riotclient
      summary: Endpoint for passing in new data.
      description: 'This endpoint is deprecated, and will be removed June 2022, use direct events instead (e.g. `/player-affinity/shard`.'
      operationId: PostRiotclientNewArgs
      parameters:
        - name: args
          in: query
          required: true
          schema:
            type: array
            items:
              type: string
      responses:
        '204':
          description: No content
  '/riotclient/product-locales/products/{productId}/patchlines/{patchlineId}':
    get:
      tags:
        - riotclient
      summary: Gets the locale of the product with the specified product and patchline id
      operationId: GetRiotclientProductLocalesProductsByProductIdPatchlinesByPatchlineId
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: string
        - name: patchlineId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
            application/x-yaml:
              schema:
                type: string
            application/x-msgpack:
              schema:
                type: string
    put:
      tags:
        - riotclient
      summary: Sets the locale of the product with the specified installId
      operationId: PutRiotclientProductLocalesProductsByProductIdPatchlinesByPatchlineId
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: string
        - name: patchlineId
          in: path
          required: true
          schema:
            type: string
        - name: locale
          in: query
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No content
  /riotclient/region-locale:
    get:
      tags:
        - riotclient
      summary: Get the current region and locale.
      operationId: GetRiotclientRegionLocale
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegionLocale'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/RegionLocale'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/RegionLocale'
    put:
      tags:
        - riotclient
      summary: Update the region and locale.
      operationId: PutRiotclientRegionLocale
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegionLocale'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/RegionLocale'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/RegionLocale'
      responses:
        '204':
          description: No content
  /riotclient/secondary-args:
    get:
      tags:
        - riotclient
      summary: Get the command line parameters that occur after the '--' delimiter
      description: 'Command line arguments are deprecated, and will be removed June 2022. Use configuration directly.'
      operationId: GetRiotclientSecondaryArgs
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
            application/x-yaml:
              schema:
                type: array
                items:
                  type: string
            application/x-msgpack:
              schema:
                type: array
                items:
                  type: string
  /riotclient/session-id:
    get:
      tags:
        - riotclient
      summary: UUID identifying a user interaction session. This value is created or set when the Player Platform SDK is initialized.
      operationId: GetRiotclientSessionId
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
            application/x-yaml:
              schema:
                type: string
            application/x-msgpack:
              schema:
                type: string
  /riotclient/set_region_locale:
    post:
      tags:
        - riotclient
      summary: Update the region and locale.
      operationId: PostRiotclientSetRegionLocale
      parameters:
        - name: region
          in: query
          required: true
          schema:
            type: string
        - name: locale
          in: query
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No content
  /riotclient/show-logs:
    post:
      tags:
        - riotclient
      summary: Open explorer to log files.
      operationId: PostRiotclientShowLogs
      responses:
        '204':
          description: No content
  /riotclient/show-swagger:
    post:
      tags:
        - riotclient
      summary: Open swagger in the default browser.
      operationId: PostRiotclientShowSwagger
      responses:
        '204':
          description: No content
  /riotclient/splash:
    delete:
      tags:
        - riotclient
      summary: Hide the splash screen.
      operationId: DeleteRiotclientSplash
      responses:
        '204':
          description: No content
    put:
      tags:
        - riotclient
      summary: Show the splash screen.
      operationId: PutRiotclientSplash
      responses:
        '204':
          description: No content
  /riotclient/system-info/v1/basic-info:
    get:
      tags:
        - riotclient
      summary: 'Get basic system information: OS, memory, processor speed, and number of physical cores'
      operationId: GetRiotclientSystemInfoV1BasicInfo
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/basicSystemInfo'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/basicSystemInfo'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/basicSystemInfo'
  /riotclient/trace:
    get:
      tags:
        - riotclient
      summary: Retrieves a completed scheduler trace.
      operationId: GetRiotclientTrace
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/x-yaml:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/x-msgpack:
              schema:
                type: object
                additionalProperties:
                  type: object
  /riotclient/ux-load-complete:
    put:
      tags:
        - riotclient
      summary: Ux notification that it has completed loading the main window.
      operationId: PutRiotclientUxLoadComplete
      responses:
        '204':
          description: No content
  /riotclient/v1/app-info:
    get:
      tags:
        - riotclient
      summary: Information about the application hosting the SDK
      operationId: GetRiotclientV1AppInfo
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppInfo'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AppInfo'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/AppInfo'
  '/riotclient/v1/auth-tokens/{authToken}':
    delete:
      tags:
        - riotclient
      summary: Unregister an existing auth token.
      operationId: DeleteRiotclientV1AuthTokensByAuthToken
      parameters:
        - name: authToken
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
            application/x-yaml:
              schema:
                type: object
            application/x-msgpack:
              schema:
                type: object
    put:
      tags:
        - riotclient
      summary: Register an auth token.  This is any alpha-numeric string that will be used as a password with the `riot` user when making requests.
      operationId: PutRiotclientV1AuthTokensByAuthToken
      parameters:
        - name: authToken
          in: path
          description: Authentication token to add.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
            application/x-yaml:
              schema:
                type: object
            application/x-msgpack:
              schema:
                type: object
  /riotclient/v1/platform-user:
    get:
      tags:
        - riotclient
      summary: Information about the currently active platform user
      operationId: GetRiotclientV1PlatformUser
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlatformUser'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/PlatformUser'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/PlatformUser'
    put:
      tags:
        - riotclient
      summary: Update the currently active platform user
      operationId: PutRiotclientV1PlatformUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlatformUser'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/PlatformUser'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/PlatformUser'
      responses:
        '204':
          description: No content
  /riotclient/zoom-scale:
    get:
      tags:
        - riotclient
      summary: Gets the last known posted zoom-scale value.
      operationId: GetRiotclientZoomScale
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: number
                format: double
            application/x-yaml:
              schema:
                type: number
                format: double
            application/x-msgpack:
              schema:
                type: number
                format: double
    post:
      tags:
        - riotclient
      summary: Handles changing the zoom scale value.
      operationId: PostRiotclientZoomScale
      parameters:
        - name: newZoomScale
          in: query
          description: The new value of the zoom scale.
          required: true
          schema:
            type: number
            format: double
      responses:
        '204':
          description: No content
  /riotclientapp/v1/command-line-args:
    get:
      tags:
        - riotclientapp
      summary: 'Returns the current list of command line arguments that are intended for Riot Client, that is, excluding secondary arguments that are intended for launched applications. The /riotclientapp/v1/new-args resource is updated when new command line arguments are added.'
      operationId: GetRiotclientappV1CommandLineArgs
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
            application/x-yaml:
              schema:
                type: array
                items:
                  type: string
            application/x-msgpack:
              schema:
                type: array
                items:
                  type: string
  /riotclientapp/v1/new-args:
    post:
      tags:
        - riotclientapp
      summary: Adds new command line arguments for Riot Client.
      operationId: PostRiotclientappV1NewArgs
      parameters:
        - name: args
          in: query
          required: true
          schema:
            type: array
            items:
              type: string
      responses:
        '204':
          description: No content
  /riotclientapp/v1/secondary-args:
    get:
      tags:
        - riotclientapp
      summary: Returns the list of secondary arguments used for launched applications.
      operationId: GetRiotclientappV1SecondaryArgs
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
            application/x-yaml:
              schema:
                type: array
                items:
                  type: string
            application/x-msgpack:
              schema:
                type: array
                items:
                  type: string
  /rnet-lifecycle/v1/default_product/launch:
    post:
      tags:
        - Plugins
        - Plugin rnet-lifecycle
      summary: Launch the currently configured default product.
      operationId: PostRnetLifecycleV1DefaultProductLaunch
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: boolean
            application/x-yaml:
              schema:
                type: boolean
            application/x-msgpack:
              schema:
                type: boolean
  /rnet-lifecycle/v1/hide:
    put:
      tags:
        - Plugins
        - Plugin rnet-lifecycle
      summary: Hide the UX.
      operationId: PutRnetLifecycleV1Hide
      responses:
        '204':
          description: No content
  /rnet-lifecycle/v1/league-region-election:
    get:
      tags:
        - Plugins
        - Plugin rnet-lifecycle
      summary: Returns a structure containing the current state of League account election for the logged in account.
      operationId: GetRnetLifecycleV1LeagueRegionElection
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RnetLifecycleLeagueRegionElectionResource'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/RnetLifecycleLeagueRegionElectionResource'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/RnetLifecycleLeagueRegionElectionResource'
    post:
      tags:
        - Plugins
        - Plugin rnet-lifecycle
      summary: 'Sets League account election information for the current account -- specifically, ''selectedRegions''.'
      operationId: PostRnetLifecycleV1LeagueRegionElection
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-yaml:
            schema:
              type: object
          application/x-msgpack:
            schema:
              type: object
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RnetLifecycleRegionAssignmentResponse'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/RnetLifecycleRegionAssignmentResponse'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/RnetLifecycleRegionAssignmentResponse'
  /rnet-lifecycle/v1/product-context:
    delete:
      tags:
        - Plugins
        - Plugin rnet-lifecycle
      summary: 'Deletes the existing product context, if it exists.'
      operationId: DeleteRnetLifecycleV1ProductContext
      responses:
        '204':
          description: No content
    get:
      tags:
        - Plugins
        - Plugin rnet-lifecycle
      summary: Returns the product context
      operationId: GetRnetLifecycleV1ProductContext
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RnetLifecycleProductContext'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/RnetLifecycleProductContext'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/RnetLifecycleProductContext'
    put:
      tags:
        - Plugins
        - Plugin rnet-lifecycle
      summary: 'Sets the product to launch, following the product context-flow of checking auth, update, and patch state.'
      operationId: PutRnetLifecycleV1ProductContext
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RnetLifecycleProductContext'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/RnetLifecycleProductContext'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/RnetLifecycleProductContext'
      responses:
        '204':
          description: No content
  /rnet-lifecycle/v1/product-context-phase:
    get:
      tags:
        - Plugins
        - Plugin rnet-lifecycle
      summary: Returns the phase of the product context
      operationId: GetRnetLifecycleV1ProductContextPhase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
            application/x-yaml:
              schema:
                type: string
            application/x-msgpack:
              schema:
                type: string
  /rnet-lifecycle/v1/quit:
    put:
      tags:
        - Plugins
        - Plugin rnet-lifecycle
      summary: Quit Riot Client. If any games are running show the games-running exit-dialog.
      operationId: PutRnetLifecycleV1Quit
      responses:
        '204':
          description: No content
  /rnet-lifecycle/v1/restart:
    put:
      tags:
        - Plugins
        - Plugin rnet-lifecycle
      summary: Restarts Riot Client. If any games are running show the games-running exit-dialog.
      operationId: PutRnetLifecycleV1Restart
      responses:
        '204':
          description: No content
  /rnet-lifecycle/v2/ux-command:
    delete:
      tags:
        - Plugins
        - Plugin rnet-lifecycle
      summary: Deletes the current UX command so that the default client UX app no longer needs to process it
      operationId: DeleteRnetLifecycleV2UxCommand
      responses:
        '204':
          description: No content
    get:
      tags:
        - Plugins
        - Plugin rnet-lifecycle
      summary: Returns the current UX command that the default client UX app needs to process
      operationId: GetRnetLifecycleV2UxCommand
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RnetLifecycleUxCommand'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/RnetLifecycleUxCommand'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/RnetLifecycleUxCommand'
    put:
      tags:
        - Plugins
        - Plugin rnet-lifecycle
      summary: Sets a new UX command that the default client UX app should process
      operationId: PutRnetLifecycleV2UxCommand
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RnetLifecycleUxCommand'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/RnetLifecycleUxCommand'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/RnetLifecycleUxCommand'
      responses:
        '204':
          description: No content
  /rnet-pft/v1/request-survey:
    post:
      tags:
        - Plugins
        - Plugin rnet-pft
      summary: Post a game event and see if you get a survey.
      operationId: PostRnetPftV1RequestSurvey
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RnetPftSurveyRequest'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/RnetPftSurveyRequest'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/RnetPftSurveyRequest'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RnetPftSurveyRequestResult'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/RnetPftSurveyRequestResult'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/RnetPftSurveyRequestResult'
  /rnet-pft/v1/surveys:
    get:
      tags:
        - Plugins
        - Plugin rnet-pft
      summary: Gets the collection of surveys.
      operationId: GetRnetPftV1Surveys
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RnetPftSurvey'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RnetPftSurvey'
            application/x-msgpack:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RnetPftSurvey'
  '/rnet-pft/v1/surveys/{id}':
    get:
      tags:
        - Plugins
        - Plugin rnet-pft
      summary: Gets a specific survey by id.
      operationId: GetRnetPftV1SurveysById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RnetPftSurvey'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/RnetPftSurvey'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/RnetPftSurvey'
  '/rnet-pft/v1/surveys/{id}/close':
    post:
      tags:
        - Plugins
        - Plugin rnet-pft
      summary: Notifies the backend that the player closed the survey before completing it.
      operationId: PostRnetPftV1SurveysByIdClose
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No content
  '/rnet-pft/v1/surveys/{id}/popout':
    post:
      tags:
        - Plugins
        - Plugin rnet-pft
      summary: Notifies the backend that the player opened an external survey.
      operationId: PostRnetPftV1SurveysByIdPopout
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No content
  '/rnet-pft/v1/surveys/{id}/submit':
    post:
      tags:
        - Plugins
        - Plugin rnet-pft
      summary: Submits the given survey to the PFT service.
      operationId: PostRnetPftV1SurveysByIdSubmit
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No content
  '/rnet-pft/v1/surveys/{survey-id}/questions/{question-id}':
    patch:
      tags:
        - Plugins
        - Plugin rnet-pft
      summary: Updates the specified question response.
      operationId: PatchRnetPftV1SurveysBySurveyIdQuestionsByQuestionId
      parameters:
        - name: survey-id
          in: path
          required: true
          schema:
            type: string
        - name: question-id
          in: path
          required: true
          schema:
            type: string
        - name: answer
          in: query
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No content
  /rnet-product-registry/v1/available-disk-space:
    post:
      tags:
        - Plugins
        - Plugin rnet-product-registry
      summary: Retrieves the available disk space at a specified path. Will return the available disk space in bytes. All paths should use '/' as the delimiter
      operationId: PostRnetProductRegistryV1AvailableDiskSpace
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RnetProductRegistryAvailableDiskSpaceRequest'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/RnetProductRegistryAvailableDiskSpaceRequest'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/RnetProductRegistryAvailableDiskSpaceRequest'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: integer
                format: int64
            application/x-yaml:
              schema:
                type: integer
                format: int64
            application/x-msgpack:
              schema:
                type: integer
                format: int64
  /rnet-product-registry/v1/background-patching/state:
    get:
      tags:
        - Plugins
        - Plugin rnet-product-registry
      summary: Return the current background patching state
      operationId: GetRnetProductRegistryV1BackgroundPatchingState
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RnetProductRegistryBackgroundPatchingState'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/RnetProductRegistryBackgroundPatchingState'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/RnetProductRegistryBackgroundPatchingState'
  /rnet-product-registry/v1/directory-size:
    post:
      tags:
        - Plugins
        - Plugin rnet-product-registry
      summary: Retrieves the size of the entire directory of the specified path. Will return the directory size in bytes. All paths should use '/' as the delimiter
      operationId: PostRnetProductRegistryV1DirectorySize
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RnetProductRegistryDirectorySizeRequest'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/RnetProductRegistryDirectorySizeRequest'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/RnetProductRegistryDirectorySizeRequest'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: integer
                format: int64
            application/x-yaml:
              schema:
                type: integer
                format: int64
            application/x-msgpack:
              schema:
                type: integer
                format: int64
  /rnet-product-registry/v1/install-states:
    get:
      tags:
        - Plugins
        - Plugin rnet-product-registry
      summary: Retrieves a map of product and patchline install states
      operationId: GetRnetProductRegistryV1InstallStates
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RnetProductRegistryProductInstallStateResource'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RnetProductRegistryProductInstallStateResource'
            application/x-msgpack:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RnetProductRegistryProductInstallStateResource'
  '/rnet-product-registry/v1/install-states/products/{productId}/patchlines/{patchlineId}':
    get:
      tags:
        - Plugins
        - Plugin rnet-product-registry
      summary: Retrieves the install state of the specified product and patchline
      operationId: GetRnetProductRegistryV1InstallStatesProductsByProductIdPatchlinesByPatchlineId
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: string
        - name: patchlineId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RnetProductRegistryInstallState'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/RnetProductRegistryInstallState'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/RnetProductRegistryInstallState'
  '/rnet-product-registry/v1/move-install-requests/products/{productId}/patchlines/{patchlineId}':
    put:
      tags:
        - Plugins
        - Plugin rnet-product-registry
      summary: Request to move the install for a product.
      operationId: PutRnetProductRegistryV1MoveInstallRequestsProductsByProductIdPatchlinesByPatchlineId
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: string
        - name: patchlineId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RnetProductRegistryMoveInstallOptions'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/RnetProductRegistryMoveInstallOptions'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/RnetProductRegistryMoveInstallOptions'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RnetProductRegistryMoveInstallStatus'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/RnetProductRegistryMoveInstallStatus'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/RnetProductRegistryMoveInstallStatus'
  '/rnet-product-registry/v1/move-install-states/products/{productId}/patchlines/{patchlineId}':
    get:
      tags:
        - Plugins
        - Plugin rnet-product-registry
      summary: 'Get the status of a move request for a product, if it exists.'
      operationId: GetRnetProductRegistryV1MoveInstallStatesProductsByProductIdPatchlinesByPatchlineId
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: string
        - name: patchlineId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RnetProductRegistryMoveInstallStatus'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/RnetProductRegistryMoveInstallStatus'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/RnetProductRegistryMoveInstallStatus'
  '/rnet-product-registry/v1/verify-install/products/{productId}/patchlines/{patchlineId}':
    put:
      tags:
        - Plugins
        - Plugin rnet-product-registry
      summary: Verify that a specific product's patchline is installed via patch plugin
      operationId: PutRnetProductRegistryV1VerifyInstallProductsByProductIdPatchlinesByPatchlineId
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: string
        - name: patchlineId
          in: path
          required: true
          schema:
            type: string
        - name: data
          in: query
          required: true
          schema:
            type: ''
      responses:
        '204':
          description: No content
  /rnet-product-registry/v4/active-updates:
    get:
      tags:
        - Plugins
        - Plugin rnet-product-registry
      summary: Get list of active updates
      operationId: GetRnetProductRegistryV4ActiveUpdates
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RnetProductRegistryProductPatchlineKey'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RnetProductRegistryProductPatchlineKey'
            application/x-msgpack:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RnetProductRegistryProductPatchlineKey'
  '/rnet-product-registry/v4/available-product-locales/products/{productId}/patchlines/{patchlineId}':
    get:
      tags:
        - Plugins
        - Plugin rnet-product-registry
      summary: 'Retrieves the list of available locales for the given product and patchline. If the patchline is unavailable (i.e. it is a private product, and you are not logged in), the list of available locales will be returned from the .product_settings.yaml file, if it exists.'
      operationId: GetRnetProductRegistryV4AvailableProductLocalesProductsByProductIdPatchlinesByPatchlineId
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: string
        - name: patchlineId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
            application/x-yaml:
              schema:
                type: object
            application/x-msgpack:
              schema:
                type: object
  '/rnet-product-registry/v4/install-settings/products/{productId}/patchlines/{patchlineId}':
    get:
      tags:
        - Plugins
        - Plugin rnet-product-registry
      summary: 'Retrieves the settings for the particular product and patchline, stored in the .product_settings.yaml file.'
      operationId: GetRnetProductRegistryV4InstallSettingsProductsByProductIdPatchlinesByPatchlineId
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: string
        - name: patchlineId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
            application/x-yaml:
              schema:
                type: object
            application/x-msgpack:
              schema:
                type: object
    put:
      tags:
        - Plugins
        - Plugin rnet-product-registry
      summary: 'Sets the specified settings for the particular product and patchline, to the .product_settings.yaml file. Settings that are not specified in the body argument are not modified.'
      operationId: PutRnetProductRegistryV4InstallSettingsProductsByProductIdPatchlinesByPatchlineId
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: string
        - name: patchlineId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-yaml:
            schema:
              type: object
          application/x-msgpack:
            schema:
              type: object
      responses:
        '204':
          description: No content
  '/rnet-product-registry/v4/install-settings/products/{productId}/patchlines/{patchlineId}/{+path}':
    get:
      tags:
        - Plugins
        - Plugin rnet-product-registry
      summary: 'Retrieves the settings for the particular product and patchline, stored in the .product_settings.yaml file.'
      operationId: GetRnetProductRegistryV4InstallSettingsProductsByProductIdPatchlinesByPatchlineIdByPath
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: string
        - name: patchlineId
          in: path
          required: true
          schema:
            type: string
        - name: path
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
            application/x-yaml:
              schema:
                type: object
            application/x-msgpack:
              schema:
                type: object
    put:
      tags:
        - Plugins
        - Plugin rnet-product-registry
      summary: 'Sets the specified settings for the particular product and patchline, to the .product_settings.yaml file. Settings that are not specified in the body argument are not modified.'
      operationId: PutRnetProductRegistryV4InstallSettingsProductsByProductIdPatchlinesByPatchlineIdByPath
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: string
        - name: patchlineId
          in: path
          required: true
          schema:
            type: string
        - name: path
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-yaml:
            schema:
              type: object
          application/x-msgpack:
            schema:
              type: object
      responses:
        '204':
          description: No content
  '/rnet-product-registry/v4/patch-requests/products/{productId}/patchlines/{patchlineId}':
    delete:
      tags:
        - Plugins
        - Plugin rnet-product-registry
      summary: Delete patch request for patchline. This will stop any patch in progress.
      operationId: DeleteRnetProductRegistryV4PatchRequestsProductsByProductIdPatchlinesByPatchlineId
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: string
        - name: patchlineId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No content
    put:
      tags:
        - Plugins
        - Plugin rnet-product-registry
      summary: Submit a request to start patching the patchline.
      operationId: PutRnetProductRegistryV4PatchRequestsProductsByProductIdPatchlinesByPatchlineId
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: string
        - name: patchlineId
          in: path
          required: true
          schema:
            type: string
        - name: repair
          in: query
          schema:
            type: boolean
        - name: tempPath
          in: query
          schema:
            type: string
        - name: internalRequestSource
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RnetProductRegistryPatchRequestOptions'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/RnetProductRegistryPatchRequestOptions'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/RnetProductRegistryPatchRequestOptions'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
            application/x-yaml:
              schema:
                type: object
            application/x-msgpack:
              schema:
                type: object
  '/rnet-product-registry/v4/patch-requests/products/{productId}/patchlines/{patchlineId}/install-dependencies':
    post:
      tags:
        - Plugins
        - Plugin rnet-product-registry
      summary: Installs dependencies for the specified product/patchline combo.
      operationId: PostRnetProductRegistryV4PatchRequestsProductsByProductIdPatchlinesByPatchlineIdInstallDependencies
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: string
        - name: patchlineId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
            application/x-yaml:
              schema:
                type: object
            application/x-msgpack:
              schema:
                type: object
  '/rnet-product-registry/v4/patch-requests/products/{productId}/patchlines/{patchlineId}/retry-dependencies':
    post:
      tags:
        - Plugins
        - Plugin rnet-product-registry
      summary: 'Retry failed dependency installs, if any.'
      operationId: PostRnetProductRegistryV4PatchRequestsProductsByProductIdPatchlinesByPatchlineIdRetryDependencies
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: string
        - name: patchlineId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
            application/x-yaml:
              schema:
                type: object
            application/x-msgpack:
              schema:
                type: object
  '/rnet-product-registry/v4/patch-states/products/{productId}/patchlines/{patchlineId}':
    get:
      tags:
        - Plugins
        - Plugin rnet-product-registry
      summary: Get patch status for patchline
      operationId: GetRnetProductRegistryV4PatchStatesProductsByProductIdPatchlinesByPatchlineId
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: string
        - name: patchlineId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RnetProductRegistryPatchingResource'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/RnetProductRegistryPatchingResource'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/RnetProductRegistryPatchingResource'
  /rnet-product-registry/v4/player-products-state:
    get:
      tags:
        - Plugins
        - Plugin rnet-product-registry
      summary: Returns the current state of player products
      operationId: GetRnetProductRegistryV4PlayerProductsState
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RnetProductRegistryPlayerProductsState'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/RnetProductRegistryPlayerProductsState'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/RnetProductRegistryPlayerProductsState'
  '/rnet-product-registry/v4/priority-patch-requests/products/{productId}/patchlines/{patchlineId}':
    delete:
      tags:
        - Plugins
        - Plugin rnet-product-registry
      summary: 'Stops a priority patch operation for a given product and patchline, if in progress.'
      operationId: DeleteRnetProductRegistryV4PriorityPatchRequestsProductsByProductIdPatchlinesByPatchlineId
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: string
        - name: patchlineId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No content
    get:
      tags:
        - Plugins
        - Plugin rnet-product-registry
      summary: Checks to see if a priority patch is in progress for the given product and patchline. Returns a boolean value.
      operationId: GetRnetProductRegistryV4PriorityPatchRequestsProductsByProductIdPatchlinesByPatchlineId
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: string
        - name: patchlineId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No content
    put:
      tags:
        - Plugins
        - Plugin rnet-product-registry
      summary: 'Starts a priority patch request for a product, which will complete patching before any automatic patching operation.'
      operationId: PutRnetProductRegistryV4PriorityPatchRequestsProductsByProductIdPatchlinesByPatchlineId
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: string
        - name: patchlineId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RnetProductRegistryPatchRequestOptions'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/RnetProductRegistryPatchRequestOptions'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/RnetProductRegistryPatchRequestOptions'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
            application/x-yaml:
              schema:
                type: object
            application/x-msgpack:
              schema:
                type: object
  /rnet-product-registry/v4/products:
    get:
      tags:
        - Plugins
        - Plugin rnet-product-registry
      summary: Returns the list of installable games and configurations in hierarchical format
      operationId: GetRnetProductRegistryV4Products
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RnetProductRegistryProductV4'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RnetProductRegistryProductV4'
            application/x-msgpack:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RnetProductRegistryProductV4'
  '/rnet-product-registry/v4/products/{productId}/patchlines/{patchlineId}':
    get:
      tags:
        - Plugins
        - Plugin rnet-product-registry
      summary: Returns a patchline by id
      operationId: GetRnetProductRegistryV4ProductsByProductIdPatchlinesByPatchlineId
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: string
        - name: patchlineId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RnetProductRegistryProductPatchlineResourceV4'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/RnetProductRegistryProductPatchlineResourceV4'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/RnetProductRegistryProductPatchlineResourceV4'
    put:
      tags:
        - Plugins
        - Plugin rnet-product-registry
      summary: 'Updates a patchline resource with these possible properties: ''patching-policy'': describes whether a patchline is kept up-to-date automatically by Riot Client (auto), or if the user must choose when to patch the patchline (manual); ''patching-ask-policy'': describes whether we should ask the user whether they want to keep the patchline automatically up-to-date after the first launch. This will be ''ask'' if the user has never been asked before, and set to ''never'' once they have been asked.'
      operationId: PutRnetProductRegistryV4ProductsByProductIdPatchlinesByPatchlineId
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: string
        - name: patchlineId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RnetProductRegistryPatchlineUpdate'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/RnetProductRegistryPatchlineUpdate'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/RnetProductRegistryPatchlineUpdate'
      responses:
        '204':
          description: No content
  '/rnet-product-registry/v4/products/{productId}/patchlines/{patchlineId}/shortcut':
    put:
      tags:
        - Plugins
        - Plugin rnet-product-registry
      summary: 'Create or update the shortcut for a product, optionally at a specific path'
      operationId: PutRnetProductRegistryV4ProductsByProductIdPatchlinesByPatchlineIdShortcut
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: string
        - name: patchlineId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RnetProductRegistryCreateShortcutsRequest'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/RnetProductRegistryCreateShortcutsRequest'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/RnetProductRegistryCreateShortcutsRequest'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
            application/x-yaml:
              schema:
                type: object
            application/x-msgpack:
              schema:
                type: object
  /rnet-product-registry/v4/public-products-state:
    get:
      tags:
        - Plugins
        - Plugin rnet-product-registry
      summary: Returns the current state of public products
      operationId: GetRnetProductRegistryV4PublicProductsState
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RnetProductRegistryPublicProductsState'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/RnetProductRegistryPublicProductsState'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/RnetProductRegistryPublicProductsState'
  '/rnet-product-registry/v4/session-patch-lock/products/{productId}/patchline/{patchlineId}':
    delete:
      tags:
        - Plugins
        - Plugin rnet-product-registry
      summary: Releases a shared session patch lock for the product-patchline
      operationId: DeleteRnetProductRegistryV4SessionPatchLockProductsByProductIdPatchlineByPatchlineId
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: string
        - name: patchlineId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No content
    put:
      tags:
        - Plugins
        - Plugin rnet-product-registry
      summary: Acquires a shared session patch lock for the product-patchline
      operationId: PutRnetProductRegistryV4SessionPatchLockProductsByProductIdPatchlineByPatchlineId
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: string
        - name: patchlineId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No content
  /rnet-sanitizer/v1/containsSanitized:
    post:
      tags:
        - rnet-sanitizer
      summary: Determine if the request has a sanitized word
      operationId: PostRnetSanitizerV1ContainsSanitized
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RnetSanitizerContainsSanitizedRequest'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/RnetSanitizerContainsSanitizedRequest'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/RnetSanitizerContainsSanitizedRequest'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RnetSanitizerContainsSanitizedResponse'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/RnetSanitizerContainsSanitizedResponse'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/RnetSanitizerContainsSanitizedResponse'
  /rnet-sanitizer/v1/sanitize:
    post:
      tags:
        - rnet-sanitizer
      summary: Sanitize the input text(s)
      operationId: PostRnetSanitizerV1Sanitize
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RnetSanitizerSanitizeRequest'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/RnetSanitizerSanitizeRequest'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/RnetSanitizerSanitizeRequest'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RnetSanitizerSanitizeResponse'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/RnetSanitizerSanitizeResponse'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/RnetSanitizerSanitizeResponse'
  /rnet-sanitizer/v1/status:
    get:
      tags:
        - rnet-sanitizer
      summary: Gets the current status of the sanitizer plugin
      operationId: GetRnetSanitizerV1Status
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RnetSanitizerSanitizerStatus'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/RnetSanitizerSanitizerStatus'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/RnetSanitizerSanitizerStatus'
  /rnet-self-update/v1/enabled:
    get:
      tags:
        - Plugins
        - Plugin rnet-self-update
      summary: Get if self-update is enabled.
      operationId: GetRnetSelfUpdateV1Enabled
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: boolean
            application/x-yaml:
              schema:
                type: boolean
            application/x-msgpack:
              schema:
                type: boolean
    put:
      tags:
        - Plugins
        - Plugin rnet-self-update
      summary: Enable or disable self-update. No-ops if permanently disabled (e.g. disabled by command line flags).
      operationId: PutRnetSelfUpdateV1Enabled
      parameters:
        - name: enabled
          in: query
          required: true
          schema:
            type: boolean
      responses:
        '204':
          description: No content
  /rnet-self-update/v1/repair:
    put:
      tags:
        - Plugins
        - Plugin rnet-self-update
      summary: Trigger a repair because there was an error updating.
      operationId: PutRnetSelfUpdateV1Repair
      responses:
        '204':
          description: No content
  /rnet-self-update/v1/retry:
    put:
      tags:
        - Plugins
        - Plugin rnet-self-update
      summary: Retry self-update because there was an error updating
      operationId: PutRnetSelfUpdateV1Retry
      responses:
        '204':
          description: No content
  /rnet-self-update/v1/status:
    get:
      tags:
        - Plugins
        - Plugin rnet-self-update
      summary: Get the status of the self-update plugin.
      operationId: GetRnetSelfUpdateV1Status
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RnetSelfUpdateStatus'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/RnetSelfUpdateStatus'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/RnetSelfUpdateStatus'
  /rso-auth/configuration/v3/amr-values-supported:
    get:
      tags:
        - rso-auth
      summary: Returns a list of supported authentication strategies.
      operationId: GetRsoAuthConfigurationV3AmrValuesSupported
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RsoAuthConfigV3AMRValuesSupported'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/RsoAuthConfigV3AMRValuesSupported'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/RsoAuthConfigV3AMRValuesSupported'
  /rso-auth/configuration/v3/client-id:
    get:
      tags:
        - rso-auth
      summary: Returns the default client ID for this application. Only available once /v3/ready-state is marked as ready.
      operationId: GetRsoAuthConfigurationV3ClientId
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
            application/x-yaml:
              schema:
                type: string
            application/x-msgpack:
              schema:
                type: string
  /rso-auth/configuration/v3/openid-configuration:
    get:
      tags:
        - rso-auth
      summary: Returns the raw RSO openid configuration. This resource will be notified when the configuration is retrieved initially and when it's updated.
      operationId: GetRsoAuthConfigurationV3OpenidConfiguration
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RsoAuthConfigV3OpenIdConfiguration'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/RsoAuthConfigV3OpenIdConfiguration'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/RsoAuthConfigV3OpenIdConfiguration'
  /rso-auth/configuration/v3/partner-auth-config:
    get:
      tags:
        - rso-auth
      summary: Returns a partner auth config
      operationId: GetRsoAuthConfigurationV3PartnerAuthConfig
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RsoAuthConfigV3PartnerAuthConfig'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/RsoAuthConfigV3PartnerAuthConfig'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/RsoAuthConfigV3PartnerAuthConfig'
  /rso-auth/configuration/v3/ready-state:
    get:
      tags:
        - rso-auth
      summary: Returns the ready state of the rso-auth plugin
      description: "The rso-auth plugin relies on asynchronous fetching of multiple resources. This endpoint reflects whether or not all of those resources have been retrieved.\n\nThis endpoint also supports subscriptions."
      operationId: GetRsoAuthConfigurationV3ReadyState
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RsoAuthConfigV3ReadyState'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/RsoAuthConfigV3ReadyState'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/RsoAuthConfigV3ReadyState'
  /rso-auth/v1/auth-hints/hint:
    delete:
      tags:
        - rso-auth
      summary: Dismisses the current auth hint
      operationId: DeleteRsoAuthV1AuthHintsHint
      responses:
        '204':
          description: No content
    get:
      tags:
        - rso-auth
      summary: Returns the current auth hint
      operationId: GetRsoAuthV1AuthHintsHint
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RsoAuthAuthHint'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/RsoAuthAuthHint'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/RsoAuthAuthHint'
    post:
      tags:
        - rso-auth
      summary: Creates a test auth hint
      operationId: PostRsoAuthV1AuthHintsHint
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RsoAuthAuthHint'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/RsoAuthAuthHint'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/RsoAuthAuthHint'
      responses:
        '204':
          description: No content
  /rso-auth/v1/authorization:
    delete:
      tags:
        - rso-auth
      summary: 'Revoke existing tokens, logging the user out.'
      description: "\nThis method destroys both the client-side authorization and revokes refresh tokens (if any) on the server. As a result, this request can fail if the authorization server is down. In the face of failure, the client still forgets the authorization, otherwise server-side downtime would prevent a player from logging out.\n\n"
      operationId: DeleteRsoAuthV1Authorization
      responses:
        '204':
          description: No content
    get:
      tags:
        - rso-auth
      summary: Retrieve a player's authorization status.
      description: "When the user is logged in, this resource will be populated with data about the player:\n\n* **currentPlatformId** is the player's home platformId\n* **currentAccountId** is the account ID for the player on their home platform.\n* **subject** is the [RFC 0214g]()-defined globally unique identifier for the player.\n* **authenticationType** is the authentication mechanism used to establish the RSO session.\n\nWhile true that the player's `currentPlatformId` will usually match the `region` setting of the client, consuming plugins *must not* make this assumption. Applications *must not* create identifiers for the player by concatenating `currentAccountId` with the client's region setting. consuming plugins *should* use the `subject` to globally recognize players, but may use a concatenation of `currentPlatformId` and `currentAccountId` if subject is infeasible.\n\nIn addition, note that when a player transfers from region to region, the value of that player's `currentPlatformId` and `currentAccountId` will change, but the value of their `subject` will not.\n\n"
      operationId: GetRsoAuthV1Authorization
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RsoAuthAuthorization'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/RsoAuthAuthorization'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/RsoAuthAuthorization'
  /rso-auth/v1/authorization/access-token:
    get:
      tags:
        - rso-auth
      summary: Retrieve a player's access token.
      description: "If the player has a valid authorization, this API will return the player's access token, as well as their approximate expiration time and scope. This token can be used as the `Bearer` value of an `Authorization` header in order to make requets against services protected by RSO tokens. This token represents permission sets granted to the application by the player.\n\nAccess tokens expire. This plugin will handle refreshing access tokens automatically, but it's up to your plugin to either request an access token for each request, or subscribe to resource updated events for the token.\n\nAccess tokens are intended to be server-authoritative, despite being verifiable client-side as well. Scopes are included as a means for UIs to anticipate which scopes are available.\n\n**Note:** This API returns the token's expiry as seconds since the unix epoch. Do not trust this value locally in the client, as the player's system clock may be incorrect. This value is *deprecated*, and may be removed in a future version.\n\n"
      operationId: GetRsoAuthV1AuthorizationAccessToken
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RsoAuthAccessToken'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/RsoAuthAccessToken'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/RsoAuthAccessToken'
  /rso-auth/v1/authorization/error:
    get:
      tags:
        - rso-auth
      summary: Retrieves any error received from RSO during the last authorization attempt.
      description: "If the player has failed to log in via RSO, and the HTTP error code cannot uniquely disambiguate the error encountered, provides more information about the error encountered in the form of the error and errorDescription provided from RSO via OAuth errors.\n"
      operationId: GetRsoAuthV1AuthorizationError
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RsoAuthAuthError'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/RsoAuthAuthError'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/RsoAuthAuthError'
  /rso-auth/v1/authorization/gas:
    post:
      tags:
        - rso-auth
      summary: 'Log the user in with username, password and platformId.'
      description: "Executes OAuth2's [resource owner password credentials grant](https://tools.ietf.org/html/rfc6749#section-4.3) flow in order to log the user in. If successful, it will alter trigger a modification of the `/rso-auth/v1/authorization` resource and relevant sub-resources with details of the user's session. This flow is stateless, and does not create a session with the RSO server.\n\nIn circumstances where additional data is required to log the user in (such as captcha or multi-factor authentication, this method will simply fail.\n\n"
      operationId: PostRsoAuthV1AuthorizationGas
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RsoAuthRSOPlayerCredentials'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/RsoAuthRSOPlayerCredentials'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/RsoAuthRSOPlayerCredentials'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RsoAuthAuthorization'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/RsoAuthAuthorization'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/RsoAuthAuthorization'
  /rso-auth/v1/authorization/id-token:
    get:
      tags:
        - rso-auth
      summary: Retrieve a player's ID token.
      description: "If the player has a valid authorization, this API will return the player's id token, as well as their approximate expiration time and a JSON object of the data it includes. This token includes details about the player, signed as a means of trust. These details--called claims--are data about the player that the RSO server deems to be true at the time of authentication. There is no guarantee that these details have not changed in the interim.\n\nId tokens are only created at login, and cannot be refreshed, as the system's trust that the claims remain true decays over time. Expired Id tokens may continue to be used informationally, but *must not* be trusted.\n\n**Note:** This API returns the token's expiry as seconds since the unix epoch. Do not trust this value locally in the client, as the player's system clock may be incorrect. This value is *deprecated*, and may be removed in a future version.\n"
      operationId: GetRsoAuthV1AuthorizationIdToken
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RsoAuthIdToken'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/RsoAuthIdToken'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/RsoAuthIdToken'
  /rso-auth/v1/authorization/refresh:
    post:
      tags:
        - rso-auth
      summary: Force a refresh of the RSO tokens.
      description: "Executes OAuth2's [refresh flow](https://tools.ietf.org/html/rfc6749#section-6) in order to refresh an expired authorization. This API is for debugging and testing only; the RSO plugin handles refresh automatically.\n\nRefreshes authorization for all clients that have currently active authorizations, the return value is from the main client RiotClient bootstraps with (the one from config)"
      operationId: PostRsoAuthV1AuthorizationRefresh
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RsoAuthAuthorization'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/RsoAuthAuthorization'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/RsoAuthAuthorization'
  /rso-auth/v1/authorization/simulate-error:
    post:
      tags:
        - rso-auth
      summary: Set simulated error response code for logging in
      description: Sets a simulated error response code to be used next time `POST`:`/rso-auth/v1/authorization/gas` occurs. Then resets to normal functionality
      operationId: PostRsoAuthV1AuthorizationSimulateError
      parameters:
        - name: errorCode
          in: query
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '204':
          description: No content
  /rso-auth/v1/authorization/userinfo:
    delete:
      tags:
        - rso-auth
      summary: Delete the player userinfo
      description: This endpoint is not available until the OpenID configuration is retrieved.
      operationId: DeleteRsoAuthV1AuthorizationUserinfo
      responses:
        '204':
          description: No content
    get:
      tags:
        - rso-auth
      summary: Retrieve a player's userinfo.
      description: "If the player has a valid access token, and the userinfo has previously been fetched, this API will return the userinfo of the player as specified by the access token's scopes.\n\nThis endpoint is not available until the OpenID configuration is retrieved."
      operationId: GetRsoAuthV1AuthorizationUserinfo
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RsoAuthUserInfo'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/RsoAuthUserInfo'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/RsoAuthUserInfo'
    post:
      tags:
        - rso-auth
      summary: Retrieve a player's userinfo from RSO.
      description: "If the player has a valid access token, this API will invoke RSO's userinfo endpoint to retrieve the userinfo of the player as specified by the access token's scopes.\n\nThis endpoint is not available until the OpenID configuration is retrieved."
      operationId: PostRsoAuthV1AuthorizationUserinfo
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RsoAuthUserInfo'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/RsoAuthUserInfo'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/RsoAuthUserInfo'
  /rso-auth/v1/device-id:
    post:
      tags:
        - rso-auth
      summary: Retrieves device ID configuration.
      description: "Provides client-side settings for collecting device ID information, including a session id, collector server and merchant id. The session ID is programmatically generated by the plugin at startup.\n\nThis endpoint is not available until the OpenID configuration is retrieved."
      operationId: PostRsoAuthV1DeviceId
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RsoAuthDeviceId'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/RsoAuthDeviceId'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/RsoAuthDeviceId'
  /rso-auth/v1/key/request:
    post:
      tags:
        - rso-auth
      summary: Generates an authorization key from an existing authorization. An 'authorization key' is a code and code verifier encoded together.
      operationId: PostRsoAuthV1KeyRequest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RsoAuthAuthorizationKeyRequest'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/RsoAuthAuthorizationKeyRequest'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/RsoAuthAuthorizationKeyRequest'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RsoAuthAuthorizationKey'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/RsoAuthAuthorizationKey'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/RsoAuthAuthorizationKey'
  /rso-auth/v1/session:
    delete:
      tags:
        - rso-auth
      summary: Destroy the login session.
      description: Destroys the login session locally and on the RSO server. Local sessions will also be destroyed and will require newly authenticating to login and create a new authentication session.
      operationId: DeleteRsoAuthV1Session
      responses:
        '204':
          description: No content
    get:
      tags:
        - rso-auth
      summary: Retrieve the current session state.
      description: "Returns a `SessionResponse` with details of the current state of the session. This is a subscribable end-point that will update as the state is updated.\n\nWhen not set, the type of the `SessionResponse` will be set to `unknown_authentication_response`. The return value will also include the current state of the `persistLogin` value.\n"
      operationId: GetRsoAuthV1Session
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RsoAuthSessionResponse'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/RsoAuthSessionResponse'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/RsoAuthSessionResponse'
  /rso-auth/v1/session/credentials:
    put:
      tags:
        - rso-auth
      summary: Update an authentication session with credentials to login.
      description: "Progresses the login flow for the session with the required player credentials.\n\nThis API should be called when prompted for `needs_authentication` from the `/rso-auth/v2/authorizations` API. Along with the user's credentials, this API will also take the `trustDevice` boolean to tell the RSO service whether or not to record this device as a trusted device to remember for use when determining trust level requirements.\n\nThis API returns a response that contains a type to determine how to follow up in the login process. If the credentials are accepted then the type will be set to `authenticated`.\n\nIf further verification is required then the type may be set to `needs_multifactor_verification`, in which case details can be found in the `MultifactorDetails`, and the required input should be PUT to `/rso-auth/v2/authentication/multifactor`\n\nIn some error cases, the `error` string may be set to indicate more information about the authentication state.\n"
      operationId: PutRsoAuthV1SessionCredentials
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RsoAuthSessionCredentials'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/RsoAuthSessionCredentials'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/RsoAuthSessionCredentials'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RsoAuthSessionResponse'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/RsoAuthSessionResponse'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/RsoAuthSessionResponse'
  /rso-auth/v1/session/login-token:
    put:
      tags:
        - rso-auth
      summary: Update an authentication session with a token from rso-authenticator.
      description: Authenticates a player using a token from rso-authenticator
      operationId: PutRsoAuthV1SessionLoginToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RsoAuthSessionLoginToken'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/RsoAuthSessionLoginToken'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/RsoAuthSessionLoginToken'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RsoAuthSessionResponse'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/RsoAuthSessionResponse'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/RsoAuthSessionResponse'
  /rso-auth/v1/session/multifactor:
    put:
      tags:
        - rso-auth
      summary: Update an authentication session with multifactor input to complete login.
      description: "Progresses the login flow for the session with the required multifactor authentication.\n\nThis API should be called when prompted for `needs_multifactor_verification` after providing credentials through `/rso-auth/v2/authentication/credentials`.\n\nThe `retry` boolean can be set when calling this API to cause MFA to push the multifactor message to the user again.\nIn some error cases, the `error` string may be set to indicate more information about the authentication state.\n"
      operationId: PutRsoAuthV1SessionMultifactor
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RsoAuthSessionMultifactor'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/RsoAuthSessionMultifactor'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/RsoAuthSessionMultifactor'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RsoAuthSessionResponse'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/RsoAuthSessionResponse'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/RsoAuthSessionResponse'
  /rso-auth/v1/session/persistence:
    get:
      tags:
        - rso-auth
      summary: Retrieves the persistence value of this session as a `BindingProperty` which can be serialized to local storage.
      description: "Returns a `BindingProperty` representing the serialized cookies that maintains the current session that can later be `PUT` back to restore the session.\n\nThis endpoint is only available to Internal calls (plugin-to-plugin)\n"
      operationId: GetRsoAuthV1SessionPersistence
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/x-yaml:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/x-msgpack:
              schema:
                type: object
                additionalProperties:
                  type: object
    put:
      tags:
        - rso-auth
      summary: Takes a `BindingProperty` and restores the session state.
      description: "Takes the `BindingProperty` and tries to rehydrate the cookies to restore the session state which can be retrieved by doing a `GET` on this endpoint.\n\nThese cookies will automatically be appended to calls to `/v2/authorizations` and `/v1/session` endpoints as part of the session to restore, refresh and continue to use the session.\n\nThis endpoint is only available to Internal calls (plugin-to-plugin)\n"
      operationId: PutRsoAuthV1SessionPersistence
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
          application/x-yaml:
            schema:
              type: object
              additionalProperties:
                type: object
          application/x-msgpack:
            schema:
              type: object
              additionalProperties:
                type: object
      responses:
        '204':
          description: No content
  /rso-auth/v1/session/reauthentication:
    put:
      tags:
        - rso-auth
      summary: Update an authentication session with player password to reauthenticate.
      description: "Reauthenticates the session with the player password.\n\nThis API should be called when prompted for `needs_reauthentication` from the `/rso-auth/v2/authorizations` API\n\nIf the password is accepted, then the type will be set to `authenticated`.\n\nIn some error cases, the `error` string may be set to indicate more information about the authentication state.\n"
      operationId: PutRsoAuthV1SessionReauthentication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RsoAuthSessionReauthentication'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/RsoAuthSessionReauthentication'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/RsoAuthSessionReauthentication'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RsoAuthSessionResponse'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/RsoAuthSessionResponse'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/RsoAuthSessionResponse'
  /rso-auth/v1/session/signup-token:
    put:
      tags:
        - rso-auth
      summary: Update an authentication session with a token from signup-api.
      description: Authenticates a player using a token from signup-api
      operationId: PutRsoAuthV1SessionSignupToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RsoAuthSessionSignup'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/RsoAuthSessionSignup'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/RsoAuthSessionSignup'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RsoAuthSessionResponse'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/RsoAuthSessionResponse'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/RsoAuthSessionResponse'
  /rso-auth/v1/status-message:
    get:
      tags:
        - rso-auth
      summary: Get the current RSO status message
      operationId: GetRsoAuthV1StatusMessage
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RsoAuthStatusMessage'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/RsoAuthStatusMessage'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/RsoAuthStatusMessage'
    post:
      tags:
        - rso-auth
      summary: Update the RSO auth status
      operationId: PostRsoAuthV1StatusMessage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RsoAuthStatusMessage'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/RsoAuthStatusMessage'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/RsoAuthStatusMessage'
      responses:
        '204':
          description: No content
  '/rso-auth/v1/userinfo/{client-id}':
    delete:
      tags:
        - rso-auth
      summary: This endpoint is not available until the OpenID configuration is retrieved.
      operationId: DeleteRsoAuthV1UserinfoByClientId
      parameters:
        - name: client-id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No content
    get:
      tags:
        - rso-auth
      summary: Retrieve a player's userinfo using the implicit grant mode managed client-id and access-token.
      description: "If the client-id has a valid access token managed by the implicit grant mode manager, this API will return the userinfo of the player for the client-id as specified by the access token's scopes.\n\nThis endpoint is not available until the OpenID configuration is retrieved."
      operationId: GetRsoAuthV1UserinfoByClientId
      parameters:
        - name: client-id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RsoAuthUserInfo'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/RsoAuthUserInfo'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/RsoAuthUserInfo'
    post:
      tags:
        - rso-auth
      summary: Refresh a player's userinfo using the implicit grant mode managed client-id and access-token.
      description: "If the client-id has a valid access token managed by the implicit grant mode manager, this API will return the userinfo of the player for the client-id as specified by the access token's scopes.\n\nThis endpoint is not available until the OpenID configuration is retrieved."
      operationId: PostRsoAuthV1UserinfoByClientId
      parameters:
        - name: client-id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RsoAuthUserInfo'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/RsoAuthUserInfo'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/RsoAuthUserInfo'
  /rso-auth/v1/userinfo/refresh:
    post:
      tags:
        - rso-auth
      summary: "This internal endpoint can be used to force a refresh of all current UserInfos.\nThis is an expensive operation and should be only used if necessary."
      operationId: PostRsoAuthV1UserinfoRefresh
      responses:
        '204':
          description: No content
  /rso-auth/v2/authorizations:
    post:
      tags:
        - rso-auth
      summary: 'Create a new authorization request, or retrieves authorization for an existing request.'
      description: "Attempts to retrieve the authorization associated with the `client-id` set in the `authorizationRequest`. If the player has not been logged in, then this call will prompt that a login session be established.\n\nWhen POSTing a request for authorization, the body may optionally include an array of `scope`s to be included for the authorization. Likewise, an array of `trustLevels` can be set to set the level at which the authorization state is trusted.\n\nThis API returns type: `needs_authentication` if the client requires authentication before an authorization can be presented, or type: `needs_reauthorization` if the client requires reauthentication before a new authorization can be presented, or type: `authorized` along with the `ImplicitAuthorization` field populated.\n\n"
      operationId: PostRsoAuthV2Authorizations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RsoAuthAuthorizationRequest'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/RsoAuthAuthorizationRequest'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/RsoAuthAuthorizationRequest'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RsoAuthAuthorizationResponse'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/RsoAuthAuthorizationResponse'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/RsoAuthAuthorizationResponse'
  '/rso-auth/v2/authorizations/{client-id}':
    delete:
      tags:
        - rso-auth
      summary: Remove the local instance of the authorization for the client-id.
      description: This API will delete the local instance of the authorization associated with the client-id. This can be retrieved again by first POSTing via the `/rso-auth/v2/authorizations` API.
      operationId: DeleteRsoAuthV2AuthorizationsByClientId
      parameters:
        - name: client-id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No content
    get:
      tags:
        - rso-auth
      summary: Retrieve the authorization for the client-id.
      description: "If an authorization request has been created, this API will return the `ImplicitAuthorization` associated with the `client-id`. If an authorization request has not been created, one will need to be created by successfully POSTing to `/rso-auth/v2/authorizations`.\n\nOn success, this API will return type: `authorized` along with the `ImplicitAuthorization` field populated.\n\n"
      operationId: GetRsoAuthV2AuthorizationsByClientId
      parameters:
        - name: client-id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RsoAuthAuthorizationResponse'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/RsoAuthAuthorizationResponse'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/RsoAuthAuthorizationResponse'
    patch:
      tags:
        - rso-auth
      summary: Updates an existing authorization for a client and requests a new authorization.
      description: "If an existing authorization exists for this client ID, it will update the request with any values provided and request a fresh authorization.\n\nWhen PATCHing a request to update an existing authorization, the body may optionally include an array of `scope`s to be included for the authorization. Likewise, an array of `trustLevels` can be set to set the level at which the authorization state is trusted.\n\nThis API returns type: `needs_authentication` if the client requires authentication before an authorization can be presented, or type: `needs_reauthorization` if the client requires reauthentication before a new authorization can be presented, or type: `authorized` along with the `ImplicitAuthorization` field populated.\n\n"
      operationId: PatchRsoAuthV2AuthorizationsByClientId
      parameters:
        - name: client-id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RsoAuthAuthorizationUpdateRequest'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/RsoAuthAuthorizationUpdateRequest'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/RsoAuthAuthorizationUpdateRequest'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RsoAuthAuthorizationResponse'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/RsoAuthAuthorizationResponse'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/RsoAuthAuthorizationResponse'
    post:
      tags:
        - rso-auth
      summary: Refresh an authorization for a given client
      description: This endpoint refreshes authorization for a given client ID and returns the resultant updated authorization
      operationId: PostRsoAuthV2AuthorizationsByClientId
      parameters:
        - name: client-id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RsoAuthAuthorization'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/RsoAuthAuthorization'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/RsoAuthAuthorization'
  /rso-auth/v2/config:
    delete:
      tags:
        - rso-auth
      summary: Reset the RSO endpoint configuration.
      description: Removes configuration overrides. This removes any provided configuration overrides.
      operationId: DeleteRsoAuthV2Config
      responses:
        '204':
          description: No content
    post:
      tags:
        - rso-auth
      summary: Override the default RSO configuration
      description: 'Overrides the configuration from RSO from the config files, if any. The url should not have a trailing slash and should be the root url for the RSO instance to be used.'
      operationId: PostRsoAuthV2Config
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RsoAuthPublicClientConfig'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/RsoAuthPublicClientConfig'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/RsoAuthPublicClientConfig'
      responses:
        '204':
          description: No content
  /rso-auth/v2/partner-auth:
    post:
      tags:
        - rso-auth
      summary: Log the user in with any of the accepted partner credentials
      operationId: PostRsoAuthV2PartnerAuth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RsoAuthPartnerCredentials'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/RsoAuthPartnerCredentials'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/RsoAuthPartnerCredentials'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RsoAuthAuthorization'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/RsoAuthAuthorization'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/RsoAuthAuthorization'
  /rso-authenticator/v1/authentication:
    delete:
      tags:
        - rso-authenticator
      summary: Delete the current authentication session.
      operationId: DeleteRsoAuthenticatorV1Authentication
      responses:
        '204':
          description: No content
    get:
      tags:
        - rso-authenticator
      summary: Get the current state of authentication.
      operationId: GetRsoAuthenticatorV1Authentication
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RsoAuthenticatorV1AuthenticationResponse'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/RsoAuthenticatorV1AuthenticationResponse'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/RsoAuthenticatorV1AuthenticationResponse'
    put:
      tags:
        - rso-authenticator
      summary: Update the current prompt for authentication.
      operationId: PutRsoAuthenticatorV1Authentication
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
          application/x-yaml:
            schema:
              type: object
              additionalProperties:
                type: object
          application/x-msgpack:
            schema:
              type: object
              additionalProperties:
                type: object
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RsoAuthenticatorV1AuthenticationResponse'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/RsoAuthenticatorV1AuthenticationResponse'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/RsoAuthenticatorV1AuthenticationResponse'
  /rso-authenticator/v1/authentication/apple:
    post:
      tags:
        - rso-authenticator
      summary: Authenticate a player with apple open id token.
      operationId: PostRsoAuthenticatorV1AuthenticationApple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RsoAuthenticatorV1AuthenticateOpenIdConnectInput'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/RsoAuthenticatorV1AuthenticateOpenIdConnectInput'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/RsoAuthenticatorV1AuthenticateOpenIdConnectInput'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RsoAuthenticatorV1AuthenticationResponse'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/RsoAuthenticatorV1AuthenticationResponse'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/RsoAuthenticatorV1AuthenticationResponse'
  /rso-authenticator/v1/authentication/code:
    post:
      tags:
        - rso-authenticator
      summary: Create a new authentication session with code from a previous federated authentication.
      operationId: PostRsoAuthenticatorV1AuthenticationCode
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RsoAuthenticatorV1AuthenticateCodeInput'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/RsoAuthenticatorV1AuthenticateCodeInput'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/RsoAuthenticatorV1AuthenticateCodeInput'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RsoAuthenticatorV1AuthenticationResponse'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/RsoAuthenticatorV1AuthenticationResponse'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/RsoAuthenticatorV1AuthenticationResponse'
  /rso-authenticator/v1/authentication/facebook:
    post:
      tags:
        - rso-authenticator
      summary: Authenticate a player with facebook access token.
      operationId: PostRsoAuthenticatorV1AuthenticationFacebook
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RsoAuthenticatorV1AuthenticateFacebookInput'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/RsoAuthenticatorV1AuthenticateFacebookInput'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/RsoAuthenticatorV1AuthenticateFacebookInput'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RsoAuthenticatorV1AuthenticationResponse'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/RsoAuthenticatorV1AuthenticationResponse'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/RsoAuthenticatorV1AuthenticationResponse'
  /rso-authenticator/v1/authentication/gamecenter:
    post:
      tags:
        - rso-authenticator
      summary: Authenticate a player with gamecenter credentials.
      description: 'Removing endpoint on Feb 2022 due to dropped support by Apple. Context JIRA ticket: SDKFEAT-633'
      operationId: PostRsoAuthenticatorV1AuthenticationGamecenter
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RsoAuthenticatorV1AuthenticateGameCenterInput'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/RsoAuthenticatorV1AuthenticateGameCenterInput'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/RsoAuthenticatorV1AuthenticateGameCenterInput'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RsoAuthenticatorV1AuthenticationResponse'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/RsoAuthenticatorV1AuthenticationResponse'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/RsoAuthenticatorV1AuthenticationResponse'
  /rso-authenticator/v1/authentication/google:
    post:
      tags:
        - rso-authenticator
      summary: Authenticate a player with google open id token.
      operationId: PostRsoAuthenticatorV1AuthenticationGoogle
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RsoAuthenticatorV1AuthenticateOpenIdConnectInput'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/RsoAuthenticatorV1AuthenticateOpenIdConnectInput'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/RsoAuthenticatorV1AuthenticateOpenIdConnectInput'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RsoAuthenticatorV1AuthenticationResponse'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/RsoAuthenticatorV1AuthenticationResponse'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/RsoAuthenticatorV1AuthenticationResponse'
  /rso-authenticator/v1/authentication/link/apple:
    put:
      tags:
        - rso-authenticator
      summary: Link the current authentication with an existing account with apple open id token.
      operationId: PutRsoAuthenticatorV1AuthenticationLinkApple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RsoAuthenticatorV1OpenIdConnectInput'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/RsoAuthenticatorV1OpenIdConnectInput'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/RsoAuthenticatorV1OpenIdConnectInput'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RsoAuthenticatorV1AuthenticationResponse'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/RsoAuthenticatorV1AuthenticationResponse'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/RsoAuthenticatorV1AuthenticationResponse'
  /rso-authenticator/v1/authentication/link/code:
    put:
      tags:
        - rso-authenticator
      summary: Link the current authentication with a code from a previous federated authentication.
      operationId: PutRsoAuthenticatorV1AuthenticationLinkCode
      parameters:
        - name: codeExchange
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RsoAuthenticatorV1AuthenticationResponse'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/RsoAuthenticatorV1AuthenticationResponse'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/RsoAuthenticatorV1AuthenticationResponse'
  /rso-authenticator/v1/authentication/link/facebook:
    put:
      tags:
        - rso-authenticator
      summary: Link the current authentication with an existing account with facebook access token.
      operationId: PutRsoAuthenticatorV1AuthenticationLinkFacebook
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RsoAuthenticatorV1FacebookInput'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/RsoAuthenticatorV1FacebookInput'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/RsoAuthenticatorV1FacebookInput'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RsoAuthenticatorV1AuthenticationResponse'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/RsoAuthenticatorV1AuthenticationResponse'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/RsoAuthenticatorV1AuthenticationResponse'
  /rso-authenticator/v1/authentication/link/gamecenter:
    put:
      tags:
        - rso-authenticator
      summary: Link the current authentication with an existing account with gamecenter credentials.
      operationId: PutRsoAuthenticatorV1AuthenticationLinkGamecenter
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RsoAuthenticatorV1GameCenterInput'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/RsoAuthenticatorV1GameCenterInput'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/RsoAuthenticatorV1GameCenterInput'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RsoAuthenticatorV1AuthenticationResponse'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/RsoAuthenticatorV1AuthenticationResponse'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/RsoAuthenticatorV1AuthenticationResponse'
  /rso-authenticator/v1/authentication/link/google:
    put:
      tags:
        - rso-authenticator
      summary: Link the current authentication with an existing account with google open id token.
      operationId: PutRsoAuthenticatorV1AuthenticationLinkGoogle
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RsoAuthenticatorV1OpenIdConnectInput'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/RsoAuthenticatorV1OpenIdConnectInput'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/RsoAuthenticatorV1OpenIdConnectInput'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RsoAuthenticatorV1AuthenticationResponse'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/RsoAuthenticatorV1AuthenticationResponse'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/RsoAuthenticatorV1AuthenticationResponse'
  /rso-authenticator/v1/authentication/link/nintendo:
    put:
      tags:
        - rso-authenticator
      summary: Link the current authentication with an existing account with nintendo open id tokens.
      operationId: PutRsoAuthenticatorV1AuthenticationLinkNintendo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RsoAuthenticatorV1NintendoInput'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/RsoAuthenticatorV1NintendoInput'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/RsoAuthenticatorV1NintendoInput'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RsoAuthenticatorV1AuthenticationResponse'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/RsoAuthenticatorV1AuthenticationResponse'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/RsoAuthenticatorV1AuthenticationResponse'
  /rso-authenticator/v1/authentication/link/resendCode:
    put:
      tags:
        - rso-authenticator
      summary: Request that a code for linking be resent.
      operationId: PutRsoAuthenticatorV1AuthenticationLinkResendCode
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RsoAuthenticatorV1AuthenticationResponse'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/RsoAuthenticatorV1AuthenticationResponse'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/RsoAuthenticatorV1AuthenticationResponse'
  /rso-authenticator/v1/authentication/link/riot-identity:
    put:
      tags:
        - rso-authenticator
      summary: Link the current authentication with an existing account with riot identity.
      operationId: PutRsoAuthenticatorV1AuthenticationLinkRiotIdentity
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RsoAuthenticatorV1RiotIdentityInput'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/RsoAuthenticatorV1RiotIdentityInput'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/RsoAuthenticatorV1RiotIdentityInput'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RsoAuthenticatorV1AuthenticationResponse'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/RsoAuthenticatorV1AuthenticationResponse'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/RsoAuthenticatorV1AuthenticationResponse'
  /rso-authenticator/v1/authentication/link/status:
    delete:
      tags:
        - rso-authenticator
      summary: Delete the current web linking code.
      operationId: DeleteRsoAuthenticatorV1AuthenticationLinkStatus
      responses:
        '204':
          description: No content
    get:
      tags:
        - rso-authenticator
      summary: Get the current status of web linking.
      operationId: GetRsoAuthenticatorV1AuthenticationLinkStatus
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RsoAuthenticatorV1WebLinkingStatusResponse'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/RsoAuthenticatorV1WebLinkingStatusResponse'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/RsoAuthenticatorV1WebLinkingStatusResponse'
  /rso-authenticator/v1/authentication/multifactor:
    post:
      tags:
        - rso-authenticator
      summary: Linking player's social to their multifactor enabled riot account.
      operationId: PostRsoAuthenticatorV1AuthenticationMultifactor
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RsoAuthenticatorV1AuthenticateMultifactorInput'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/RsoAuthenticatorV1AuthenticateMultifactorInput'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/RsoAuthenticatorV1AuthenticateMultifactorInput'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RsoAuthenticatorV1AuthenticationResponse'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/RsoAuthenticatorV1AuthenticationResponse'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/RsoAuthenticatorV1AuthenticationResponse'
  /rso-authenticator/v1/authentication/nintendo:
    post:
      tags:
        - rso-authenticator
      summary: Authenticate a player with nintendo open id tokens.
      operationId: PostRsoAuthenticatorV1AuthenticationNintendo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RsoAuthenticatorV1AuthenticateNintendoInput'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/RsoAuthenticatorV1AuthenticateNintendoInput'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/RsoAuthenticatorV1AuthenticateNintendoInput'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RsoAuthenticatorV1AuthenticationResponse'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/RsoAuthenticatorV1AuthenticationResponse'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/RsoAuthenticatorV1AuthenticationResponse'
  /rso-authenticator/v1/authentication/playstation:
    post:
      tags:
        - rso-authenticator
      summary: Authenticate a player with Playstation id token.
      operationId: PostRsoAuthenticatorV1AuthenticationPlaystation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RsoAuthenticatorV1AuthenticatePlaystationInput'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/RsoAuthenticatorV1AuthenticatePlaystationInput'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/RsoAuthenticatorV1AuthenticatePlaystationInput'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RsoAuthenticatorV1AuthenticationResponse'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/RsoAuthenticatorV1AuthenticationResponse'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/RsoAuthenticatorV1AuthenticationResponse'
  /rso-authenticator/v1/authentication/redirect:
    post:
      tags:
        - rso-authenticator
      summary: Redirect the current authentication to the given url
      operationId: PostRsoAuthenticatorV1AuthenticationRedirect
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RsoAuthenticatorV1AuthenticationRedirectInput'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/RsoAuthenticatorV1AuthenticationRedirectInput'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/RsoAuthenticatorV1AuthenticationRedirectInput'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RsoAuthenticatorV1AuthenticationResponse'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/RsoAuthenticatorV1AuthenticationResponse'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/RsoAuthenticatorV1AuthenticationResponse'
  /rso-authenticator/v1/authentication/riot-identity:
    post:
      tags:
        - rso-authenticator
      summary: Create a new authentication with riot credentials.
      operationId: PostRsoAuthenticatorV1AuthenticationRiotIdentity
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RsoAuthenticatorV1AuthenticateRiotIdentityInput'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/RsoAuthenticatorV1AuthenticateRiotIdentityInput'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/RsoAuthenticatorV1AuthenticateRiotIdentityInput'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RsoAuthenticatorV1AuthenticationResponse'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/RsoAuthenticatorV1AuthenticationResponse'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/RsoAuthenticatorV1AuthenticationResponse'
  /rso-authenticator/v1/authentication/xbox:
    post:
      tags:
        - rso-authenticator
      summary: Authenticate a player with Xbox xsts token and user hash
      operationId: PostRsoAuthenticatorV1AuthenticationXbox
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RsoAuthenticatorV1AuthenticateXboxInput'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/RsoAuthenticatorV1AuthenticateXboxInput'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/RsoAuthenticatorV1AuthenticateXboxInput'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RsoAuthenticatorV1AuthenticationResponse'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/RsoAuthenticatorV1AuthenticationResponse'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/RsoAuthenticatorV1AuthenticationResponse'
  /rso-authenticator/v1/config:
    get:
      tags:
        - rso-authenticator
      summary: Get the current client config
      operationId: GetRsoAuthenticatorV1Config
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RsoAuthenticatorPluginConfigResponse'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/RsoAuthenticatorPluginConfigResponse'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/RsoAuthenticatorPluginConfigResponse'
  /rso-authenticator/v1/login:
    post:
      tags:
        - rso-authenticator
      summary: Completes authentication given a login token
      operationId: PostRsoAuthenticatorV1Login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RsoAuthenticatorV1LoginRequest'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/RsoAuthenticatorV1LoginRequest'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/RsoAuthenticatorV1LoginRequest'
      responses:
        '204':
          description: No content
  /rso-authenticator/v1/web-authentication-url:
    post:
      tags:
        - rso-authenticator
      summary: Provides a url for performing a web based authentication
      operationId: PostRsoAuthenticatorV1WebAuthenticationUrl
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RsoAuthenticatorV1WebAuthenticationUrlRequest'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/RsoAuthenticatorV1WebAuthenticationUrlRequest'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/RsoAuthenticatorV1WebAuthenticationUrlRequest'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
            application/x-yaml:
              schema:
                type: string
            application/x-msgpack:
              schema:
                type: string
  /rso-mobile-ui/v1/account-promotion/initiate:
    post:
      tags:
        - rso-mobile-ui
      description: Launches a UI for handling account promotion
      operationId: PostRsoMobileUiV1AccountPromotionInitiate
      responses:
        '204':
          description: No content
  /rso-mobile-ui/v1/account-promotion/status:
    get:
      tags:
        - rso-mobile-ui
      summary: Get the current account promotion UI status
      operationId: GetRsoMobileUiV1AccountPromotionStatus
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RsoMobileUiAccountPromotionStatus'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/RsoMobileUiAccountPromotionStatus'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/RsoMobileUiAccountPromotionStatus'
  /rso-mobile-ui/v1/authentication-redirect:
    post:
      tags:
        - rso-mobile-ui
      description: Internal endpoint for triggering redirect of the current authentication to a given url.
      operationId: PostRsoMobileUiV1AuthenticationRedirect
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RsoMobileUiAuthenticationRedirectRequest'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/RsoMobileUiAuthenticationRedirectRequest'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/RsoMobileUiAuthenticationRedirectRequest'
      responses:
        '204':
          description: No content
  /rso-mobile-ui/v1/debug/browser/redirect:
    post:
      tags:
        - rso-mobile-ui
      operationId: PostRsoMobileUiV1DebugBrowserRedirect
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RsoMobileUiIOSEventInfo'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/RsoMobileUiIOSEventInfo'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/RsoMobileUiIOSEventInfo'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: boolean
            application/x-yaml:
              schema:
                type: boolean
            application/x-msgpack:
              schema:
                type: boolean
  /rso-mobile-ui/v1/debug/configurations:
    get:
      tags:
        - rso-mobile-ui
      summary: Introspect the current configuration
      operationId: GetRsoMobileUiV1DebugConfigurations
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/x-yaml:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/x-msgpack:
              schema:
                type: object
                additionalProperties:
                  type: object
  /rso-mobile-ui/v1/debug/sdk:
    post:
      tags:
        - rso-mobile-ui
      operationId: PostRsoMobileUiV1DebugSdk
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
          application/x-yaml:
            schema:
              type: object
              additionalProperties:
                type: object
          application/x-msgpack:
            schema:
              type: object
              additionalProperties:
                type: object
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/x-yaml:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/x-msgpack:
              schema:
                type: object
                additionalProperties:
                  type: object
  /rso-mobile-ui/v1/debug/webview/decide-navigation-policy:
    post:
      tags:
        - rso-mobile-ui
      operationId: PostRsoMobileUiV1DebugWebviewDecideNavigationPolicy
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
          application/x-yaml:
            schema:
              type: object
              additionalProperties:
                type: object
          application/x-msgpack:
            schema:
              type: object
              additionalProperties:
                type: object
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
            application/x-yaml:
              schema:
                type: string
            application/x-msgpack:
              schema:
                type: string
  /rso-mobile-ui/v1/debug/webview/javascript-message:
    post:
      tags:
        - rso-mobile-ui
      operationId: PostRsoMobileUiV1DebugWebviewJavascriptMessage
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
          application/x-yaml:
            schema:
              type: object
              additionalProperties:
                type: object
          application/x-msgpack:
            schema:
              type: object
              additionalProperties:
                type: object
      responses:
        '204':
          description: No content
  /rso-mobile-ui/v1/debug/webview/launch:
    post:
      tags:
        - rso-mobile-ui
      summary: Debug endpoint to detect page launches
      operationId: PostRsoMobileUiV1DebugWebviewLaunch
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
          application/x-yaml:
            schema:
              type: object
              additionalProperties:
                type: object
          application/x-msgpack:
            schema:
              type: object
              additionalProperties:
                type: object
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/x-yaml:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/x-msgpack:
              schema:
                type: object
                additionalProperties:
                  type: object
  /rso-mobile-ui/v1/debug/webview/load-error-page:
    post:
      tags:
        - rso-mobile-ui
      operationId: PostRsoMobileUiV1DebugWebviewLoadErrorPage
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
          application/x-yaml:
            schema:
              type: object
              additionalProperties:
                type: object
          application/x-msgpack:
            schema:
              type: object
              additionalProperties:
                type: object
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/x-yaml:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/x-msgpack:
              schema:
                type: object
                additionalProperties:
                  type: object
  /rso-mobile-ui/v1/debug/webview/simulate-onfinish:
    post:
      tags:
        - rso-mobile-ui
      summary: Simulates the callback from the web view closing
      operationId: PostRsoMobileUiV1DebugWebviewSimulateOnfinish
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
          application/x-yaml:
            schema:
              type: object
              additionalProperties:
                type: object
          application/x-msgpack:
            schema:
              type: object
              additionalProperties:
                type: object
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/x-yaml:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/x-msgpack:
              schema:
                type: object
                additionalProperties:
                  type: object
  /rso-mobile-ui/v1/delete-account:
    post:
      tags:
        - rso-mobile-ui
      summary: 'Initiates the Account Deletion UI to delete a player''s Riot account. Be careful, this functionality is destructive - making it difficult, if not impossible, to recover an account.'
      operationId: PostRsoMobileUiV1DeleteAccount
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/x-yaml:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/x-msgpack:
              schema:
                type: object
                additionalProperties:
                  type: object
  /rso-mobile-ui/v1/delete-account/status:
    get:
      tags:
        - rso-mobile-ui
      summary: Retrieves the current status of the Account Deletion UI initiated via /rso-mobile-ui/v1/delete-account. Most useful for a client to track whether or not an Account Deletion flow was cancelled or completed.
      description: "\n**Response**\n* `status`: the current status of the Delete Account flow. Of type Api::AccountDeletionV1::AccountDeletionUIStatus.\n"
      operationId: GetRsoMobileUiV1DeleteAccountStatus
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RsoMobileUiAccountDeletionV1AccountDeletionUIStatus'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/RsoMobileUiAccountDeletionV1AccountDeletionUIStatus'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/RsoMobileUiAccountDeletionV1AccountDeletionUIStatus'
  /rso-mobile-ui/v1/eula/initiate:
    post:
      tags:
        - rso-mobile-ui
      description: Launches a dialog UI for requesting player acceptance to the current EULA from rcp-be-eula
      operationId: PostRsoMobileUiV1EulaInitiate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RsoMobileUiEULAUIInitiate'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/RsoMobileUiEULAUIInitiate'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/RsoMobileUiEULAUIInitiate'
      responses:
        '204':
          description: No content
  /rso-mobile-ui/v1/eula/status:
    get:
      tags:
        - rso-mobile-ui
      description: Get the current EULA UI status.
      operationId: GetRsoMobileUiV1EulaStatus
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RsoMobileUiEULAUIStatus'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/RsoMobileUiEULAUIStatus'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/RsoMobileUiEULAUIStatus'
  /rso-mobile-ui/v1/federated-login:
    post:
      tags:
        - rso-mobile-ui
      description: Internal endpoint for triggering federated logins for account linking.
      operationId: PostRsoMobileUiV1FederatedLogin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RsoMobileUiFederatedLoginRequest'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/RsoMobileUiFederatedLoginRequest'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/RsoMobileUiFederatedLoginRequest'
      responses:
        '204':
          description: No content
  /rso-mobile-ui/v1/ios-auth-redirect:
    post:
      tags:
        - rso-mobile-ui
      summary: iOS application open url event
      operationId: PostRsoMobileUiV1IosAuthRedirect
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RsoMobileUiIOSEventInfo'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/RsoMobileUiIOSEventInfo'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/RsoMobileUiIOSEventInfo'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: boolean
            application/x-yaml:
              schema:
                type: boolean
            application/x-msgpack:
              schema:
                type: boolean
  /rso-mobile-ui/v1/login/initiate:
    post:
      tags:
        - rso-mobile-ui
      description: Launches an Android Activity or iOS UIView to display a login flow to the player using a WebView
      operationId: PostRsoMobileUiV1LoginInitiate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RsoMobileUiLoginInitiateRequest'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/RsoMobileUiLoginInitiateRequest'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/RsoMobileUiLoginInitiateRequest'
      responses:
        '204':
          description: No content
  /rso-mobile-ui/v1/login/status:
    get:
      tags:
        - rso-mobile-ui
      summary: Get the current login UI status
      operationId: GetRsoMobileUiV1LoginStatus
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RsoMobileUiLoginStatus'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/RsoMobileUiLoginStatus'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/RsoMobileUiLoginStatus'
  /rso-mobile-ui/v1/login/strategies:
    get:
      tags:
        - rso-mobile-ui
      description: Returns a list of strategies supported by the rso-mobile-ui plugin for this SDK version and client id
      operationId: GetRsoMobileUiV1LoginStrategies
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RsoMobileUiLoginStrategyInfo'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RsoMobileUiLoginStrategyInfo'
            application/x-msgpack:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RsoMobileUiLoginStrategyInfo'
  /rso-mobile-ui/v1/region-election:
    delete:
      tags:
        - rso-mobile-ui
      summary: 'Programmatically dismiss the Region Election UI. Note that this endpoit returns immediately, but the resource is finalized synchronously.'
      operationId: DeleteRsoMobileUiV1RegionElection
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RsoMobileUiRegionElectionV1RegionElection'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/RsoMobileUiRegionElectionV1RegionElection'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/RsoMobileUiRegionElectionV1RegionElection'
    get:
      tags:
        - rso-mobile-ui
      summary: Fetches the state of the Region Election UI
      operationId: GetRsoMobileUiV1RegionElection
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RsoMobileUiRegionElectionV1RegionElection'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/RsoMobileUiRegionElectionV1RegionElection'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/RsoMobileUiRegionElectionV1RegionElection'
    post:
      tags:
        - rso-mobile-ui
      summary: Initiates the display of the Region Election UI
      operationId: PostRsoMobileUiV1RegionElection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RsoMobileUiRegionElectionV1InitiateRequest'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/RsoMobileUiRegionElectionV1InitiateRequest'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/RsoMobileUiRegionElectionV1InitiateRequest'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RsoMobileUiRegionElectionV1RegionElection'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/RsoMobileUiRegionElectionV1RegionElection'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/RsoMobileUiRegionElectionV1RegionElection'
    put:
      tags:
        - rso-mobile-ui
      summary: Programmatically update the state of the Region Election UI
      operationId: PutRsoMobileUiV1RegionElection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RsoMobileUiRegionElectionV1UpdateRequest'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/RsoMobileUiRegionElectionV1UpdateRequest'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/RsoMobileUiRegionElectionV1UpdateRequest'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RsoMobileUiRegionElectionV1RegionElection'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/RsoMobileUiRegionElectionV1RegionElection'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/RsoMobileUiRegionElectionV1RegionElection'
  /rso-mobile-ui/v1/region-election/eligibility:
    get:
      tags:
        - rso-mobile-ui
      summary: Check if a player is eligible for region election with UI
      operationId: GetRsoMobileUiV1RegionElectionEligibility
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RsoMobileUiRegionElectionV1EligibilityResponse'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/RsoMobileUiRegionElectionV1EligibilityResponse'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/RsoMobileUiRegionElectionV1EligibilityResponse'
  /rso-mobile-ui/v1/show-game-out-of-date:
    post:
      tags:
        - rso-mobile-ui
      summary: Show a native dialog displaying game is out of date and redirecting user to app store
      operationId: PostRsoMobileUiV1ShowGameOutOfDate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RsoMobileUiGameOutOfDateUIInitiate'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/RsoMobileUiGameOutOfDateUIInitiate'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/RsoMobileUiGameOutOfDateUIInitiate'
      responses:
        '204':
          description: No content
  '/rso-mobile-ui/v1/vng/profile/{productId}':
    post:
      tags:
        - rso-mobile-ui
      description: Launches a WebView to edit VNG (Vietnam) profile registration
      operationId: PostRsoMobileUiV1VngProfileByProductId
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/x-yaml:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/x-msgpack:
              schema:
                type: object
                additionalProperties:
                  type: object
  '/rso-mobile-ui/v1/vng/register/{productId}':
    post:
      tags:
        - rso-mobile-ui
      description: 'Launches a WebView (if necessary) to handle initial, one-time, game-specific, required VNG (Vietnam) profile registration'
      operationId: PostRsoMobileUiV1VngRegisterByProductId
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/x-yaml:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/x-msgpack:
              schema:
                type: object
                additionalProperties:
                  type: object
  /rso-mobile-ui/v1/vng/status:
    get:
      tags:
        - rso-mobile-ui
      description: Get the current VNG Registration UI status.
      operationId: GetRsoMobileUiV1VngStatus
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RsoMobileUiVngV1RegistrationUIStatus'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/RsoMobileUiVngV1RegistrationUIStatus'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/RsoMobileUiVngV1RegistrationUIStatus'
  /rso-mobile-ui/v2/eula:
    get:
      tags:
        - rso-mobile-ui
      description: Get the current EULA UI V2 content.
      operationId: GetRsoMobileUiV2Eula
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RsoMobileUiEULAUIV2Config'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/RsoMobileUiEULAUIV2Config'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/RsoMobileUiEULAUIV2Config'
  /rso-mobile-ui/v2/eula/agreement:
    post:
      tags:
        - rso-mobile-ui
      description: Saves agreement status
      operationId: PostRsoMobileUiV2EulaAgreement
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RsoMobileUiEULAUIV2Agreement'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/RsoMobileUiEULAUIV2Agreement'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/RsoMobileUiEULAUIV2Agreement'
      responses:
        '204':
          description: No content
  /rso-mobile-ui/v2/eula/initiate:
    post:
      tags:
        - rso-mobile-ui
      description: Launches a WebView for requesting player acceptance to the current EULA from rcp-be-eula
      operationId: PostRsoMobileUiV2EulaInitiate
      responses:
        '204':
          description: No content
  /rso-mobile-ui/v2/eula/status:
    get:
      tags:
        - rso-mobile-ui
      description: Get the current EULA UI V2 status.
      operationId: GetRsoMobileUiV2EulaStatus
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RsoMobileUiEULAUIV2Status'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/RsoMobileUiEULAUIV2Status'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/RsoMobileUiEULAUIV2Status'
  /scd/v1/cookies:
    get:
      tags:
        - scd
      summary: Returns the list of cookies
      operationId: GetScdV1Cookies
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScdCookies'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ScdCookies'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/ScdCookies'
  /scd/v1/enabled:
    get:
      tags:
        - scd
      summary: Returns whether SCD communication is enabled.
      operationId: GetScdV1Enabled
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScdScdEnabled'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ScdScdEnabled'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/ScdScdEnabled'
    post:
      tags:
        - scd
      summary: Activates communication to the SCD service.
      operationId: PostScdV1Enabled
      parameters:
        - name: enabled
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/ScdScdEnabled'
      responses:
        '204':
          description: No content
  /scd/v1/enabled-in-config:
    get:
      tags:
        - scd
      summary: Returns whether SCD communication is enabled in confguration.
      description: This provides an indicator that SCD communication may become available if any requests are made and acts as an emergency kill-switch to disable requests to SCD service. Use /scd/v1/enabled to determine if SCD is currently enabled.
      operationId: GetScdV1EnabledInConfig
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: boolean
            application/x-yaml:
              schema:
                type: boolean
            application/x-msgpack:
              schema:
                type: boolean
  /scd/v1/url-patterns/test:
    post:
      tags:
        - scd
      summary: Returns whether a url refers to SCD-protected content
      operationId: PostScdV1UrlPatternsTest
      parameters:
        - name: url
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: boolean
            application/x-yaml:
              schema:
                type: boolean
            application/x-msgpack:
              schema:
                type: boolean
  /swagger/v1/api-docs:
    get:
      tags:
        - swagger
      summary: Retrieves the API documentation
      operationId: GetSwaggerV1ApiDocs
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/x-yaml:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/x-msgpack:
              schema:
                type: object
                additionalProperties:
                  type: object
  /swagger/v2/swagger.json:
    get:
      tags:
        - swagger
      summary: Retrieves the API documentation
      operationId: GetSwaggerV2SwaggerJson
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/x-yaml:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/x-msgpack:
              schema:
                type: object
                additionalProperties:
                  type: object
  /swagger/v3/openapi.json:
    get:
      tags:
        - swagger
      summary: Retrieves the API documentation
      operationId: GetSwaggerV3OpenapiJson
      parameters:
        - name: plugins_and_core_only
          in: query
          required: true
          schema:
            type: boolean
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/x-yaml:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/x-msgpack:
              schema:
                type: object
                additionalProperties:
                  type: object
  /telemetry/v1/application-start-time:
    get:
      tags:
        - telemetry
      summary: Gets the millisecond UNIX timestamp of when the application was started.
      operationId: GetTelemetryV1ApplicationStartTime
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: integer
                format: int64
            application/x-yaml:
              schema:
                type: integer
                format: int64
            application/x-msgpack:
              schema:
                type: integer
                format: int64
  /telemetry/v1/availability:
    get:
      tags:
        - telemetry
      summary: Returns the availability for each telemetry ingest endpoint. This is not updated dynamically.
      operationId: GetTelemetryV1Availability
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  $ref: '#/components/schemas/CollectorAvailability'
            application/x-yaml:
              schema:
                type: object
                additionalProperties:
                  $ref: '#/components/schemas/CollectorAvailability'
            application/x-msgpack:
              schema:
                type: object
                additionalProperties:
                  $ref: '#/components/schemas/CollectorAvailability'
  '/telemetry/v1/common-data/{key}':
    post:
      tags:
        - telemetry
      summary: Adds/updates a common data key and value to be sent with every subsequent event.
      operationId: PostTelemetryV1CommonDataByKey
      parameters:
        - name: key
          in: path
          description: The name of the common data key
          required: true
          schema:
            type: string
        - name: value
          in: query
          description: The value of the common data key
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No content
  '/telemetry/v1/events/{eventType}':
    post:
      tags:
        - telemetry
      summary: Adds a new event to be sent to Dradis and/or other analytics/monitoring data sinks. All events will have their eventType prefixed
      operationId: PostTelemetryV1EventsByEventType
      parameters:
        - name: eventType
          in: path
          description: The name of the event type
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
          application/x-yaml:
            schema:
              type: object
              additionalProperties:
                type: object
          application/x-msgpack:
            schema:
              type: object
              additionalProperties:
                type: object
      responses:
        '204':
          description: No content
  '/telemetry/v1/metrics/{name}':
    put:
      tags:
        - telemetry
      summary: Pushes a metric sample to a public collector endpoint.
      operationId: PutTelemetryV1MetricsByName
      parameters:
        - name: name
          in: path
          description: Name format should indicate the source and context (i.e. 'rso.login') and must be dot-separated terms. A standard prefix for this application will be automatically applied to each sample name.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-yaml:
            schema:
              type: object
          application/x-msgpack:
            schema:
              type: object
      responses:
        '204':
          description: No content
  /telemetry/v1/metrics/config:
    put:
      tags:
        - telemetry
      summary: Updates the configuration for sending metrics to the public collectors.Values are persisted to install settings for this installation.
      description: "**Body:**  Object containing metrics configuration fields. All are optional. If a field is ommitted, that configuration does not change.\n\n```\n{ \n    \"enabled\":      (bool) True to have metrics enabled for this session, if a collector is configured. False to forcibly disable metrics.\n    \"api_key\":      (string) API key to use for the public metrics telemetry collector.\n    \"send_retries\": (uint32) Number of times to retry sending metric samples to the public collector. Takes effect when application restarts.\n}\n```\n"
      operationId: PutTelemetryV1MetricsConfig
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-yaml:
            schema:
              type: object
          application/x-msgpack:
            schema:
              type: object
      responses:
        '204':
          description: No content
  '/telemetry/v1/singular/event/{eventName}':
    post:
      tags:
        - telemetry
      summary: Sends an event to Singular (hits a derivative of the Singular s2s 'event' endpoint).
      operationId: PostTelemetryV1SingularEventByEventName
      parameters:
        - name: eventName
          in: path
          description: The name of the Singular event
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-yaml:
            schema:
              type: object
          application/x-msgpack:
            schema:
              type: object
      responses:
        '204':
          description: No content
  /telemetry/v1/singular/session:
    post:
      tags:
        - telemetry
      summary: Starts a session with Singular (hits the Singular s2s 'launch' endpoint).
      operationId: PostTelemetryV1SingularSession
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
          application/x-yaml:
            schema:
              type: object
              additionalProperties:
                type: object
          application/x-msgpack:
            schema:
              type: object
              additionalProperties:
                type: object
      responses:
        '204':
          description: No content
  /telemetry/v1/structured_logs:
    put:
      tags:
        - telemetry
      summary: 'Handles a new structured log message for pushing to a public Collector-V1 endpoint. Structured log fields must be of the following types: bool, string, float, int, uint'
      operationId: PutTelemetryV1StructuredLogs
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/StructuredLogRequest'
          application/x-yaml:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/StructuredLogRequest'
          application/x-msgpack:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/StructuredLogRequest'
      responses:
        '204':
          description: No content
  /telemetry/v2/disabled-events:
    put:
      tags:
        - telemetry
      summary: 'Receives a list of event IDs to disable. Disabled events recieved via `/telemetry/v2/events/{id}` will be dropped.'
      operationId: PutTelemetryV2DisabledEvents
      parameters:
        - name: eventIDs
          in: query
          description: 'List of Analytics Platform Event IDs. '
          required: true
          schema:
            type: array
            items:
              type: string
      responses:
        '204':
          description: No content
  '/telemetry/v2/events-extended/{id}':
    put:
      tags:
        - telemetry
      summary: Sends the event to the Analytics Pipeline CollectorV2 endpoint (https://data.riotgames.com). This backend differs from /v1/events as it requires schemas to be registered in the schema repository.
      operationId: PutTelemetryV2EventsExtendedById
      parameters:
        - name: id
          in: path
          description: The ID of the event (32-character GUID or human readable string)
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExtendedEventData'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ExtendedEventData'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/ExtendedEventData'
      responses:
        '204':
          description: No content
  '/telemetry/v2/events-schemaless/{id}':
    put:
      tags:
        - telemetry
      summary: 'Sends the event directly to New Relic, without sending the data to AP.'
      operationId: PutTelemetryV2EventsSchemalessById
      parameters:
        - name: id
          in: path
          description: "An AP-schema-like id for this event, in `world__event__version` format.\nThis id does not need to be registered with AP. Using an id with a different format will make it difficult to query across existing data in New Relic."
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-yaml:
            schema:
              type: object
          application/x-msgpack:
            schema:
              type: object
      responses:
        '204':
          description: No content
  '/telemetry/v2/events/{id}':
    put:
      tags:
        - telemetry
      summary: Sends the event to the Analytics Pipeline CollectorV2 endpoint (https://data.riotgames.com). This backend differs from /v1/events as it requires schemas to be registered in the schema repository.
      operationId: PutTelemetryV2EventsById
      parameters:
        - name: id
          in: path
          description: The ID of the event (32-character GUID or human readable string)
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-yaml:
            schema:
              type: object
          application/x-msgpack:
            schema:
              type: object
      responses:
        '204':
          description: No content
  '/telemetry/v2/metadata/{schemaPrefix}/{metadataEntity}/{propertyName}':
    delete:
      tags:
        - telemetry
      summary: Deletes a property in the metadata automatically applied to a type of analytics platform event
      operationId: DeleteTelemetryV2MetadataBySchemaPrefixByMetadataEntityByPropertyName
      parameters:
        - name: schemaPrefix
          in: path
          description: 'The schema ''world'' prefix (i.e. riotclient, rtp, etc) to match against incoming AP events.'
          required: true
          schema:
            type: string
        - name: metadataEntity
          in: path
          description: 'Name of the metadata entity that exists in every schema for the given prefix (i.e. metadata, riotclientMetadata, etc)'
          required: true
          schema:
            type: string
        - name: propertyName
          in: path
          description: 'Name of a property to remove (i.e. rsoClient, region, locale)'
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No content
    post:
      tags:
        - telemetry
      summary: Sets the metadata to automatically apply to a type of analytics platform event
      operationId: PostTelemetryV2MetadataBySchemaPrefixByMetadataEntityByPropertyName
      parameters:
        - name: schemaPrefix
          in: path
          description: 'The schema ''world'' prefix (i.e. riotclient, rtp, etc) to match against incoming AP events.'
          required: true
          schema:
            type: string
        - name: metadataEntity
          in: path
          description: 'Name of the metadata entity that exists in every schema for the given prefix (i.e. metadata, riotclientMetadata, etc)'
          required: true
          schema:
            type: string
        - name: propertyName
          in: path
          description: 'Name of a property to set (i.e. rsoClient, region, locale)'
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-yaml:
            schema:
              type: object
          application/x-msgpack:
            schema:
              type: object
      responses:
        '204':
          description: No content
  /vanguard/v1/check-vanguard-service:
    post:
      tags:
        - Plugins
        - Plugin vanguard
      summary: Check if Vanguard is running
      operationId: PostVanguardV1CheckVanguardService
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VanguardPluginState'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/VanguardPluginState'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/VanguardPluginState'
  /vanguard/v1/status:
    get:
      tags:
        - Plugins
        - Plugin vanguard
      summary: Returns the state of the Vanguard installation.
      operationId: GetVanguardV1Status
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VanguardPluginState'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/VanguardPluginState'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/VanguardPluginState'
  /vanguard/v1/update:
    put:
      tags:
        - Plugins
        - Plugin vanguard
      summary: 'Request that Vanguard update, prompting UAC if required.'
      operationId: PutVanguardV1Update
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VanguardPluginState'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/VanguardPluginState'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/VanguardPluginState'
  /voice-chat/v1/active-product:
    get:
      tags:
        - voice-chat
      summary: Get the current active product
      operationId: GetVoiceChatV1ActiveProduct
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
            application/x-yaml:
              schema:
                type: string
            application/x-msgpack:
              schema:
                type: string
  /voice-chat/v1/audio-properties:
    get:
      tags:
        - voice-chat
      summary: Get current audio properties
      operationId: GetVoiceChatV1AudioProperties
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VoiceChatAudioPropertiesResource'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/VoiceChatAudioPropertiesResource'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/VoiceChatAudioPropertiesResource'
  /voice-chat/v1/heartbeat-metrics:
    get:
      tags:
        - voice-chat
      summary: Retrieve a set of metrics about the voice chat plugin.
      description: 'This endpoint retrieves metrics about active sessions and products that are currently using the voice-chat plugin. It is an internal endpoint, intended for use directly by the info-radiator plugin, which manages the heartbeat cadence of the SDK.'
      operationId: GetVoiceChatV1HeartbeatMetrics
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VoiceChatVoiceChatHeartbeatMetrics'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/VoiceChatVoiceChatHeartbeatMetrics'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/VoiceChatVoiceChatHeartbeatMetrics'
  '/voice-chat/v1/initialize-provider/{productName}':
    post:
      tags:
        - voice-chat
      summary: Eagerly initialize a provider. Needed for device settings to update before a first session is established
      operationId: PostVoiceChatV1InitializeProviderByProductName
      parameters:
        - name: productName
          in: path
          required: true
          schema:
            type: string
        - name: provider
          in: query
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No content
  /voice-chat/v1/push-to-talk:
    get:
      tags:
        - voice-chat
      summary: Get voice chat push to talk configuration status
      description: Endpoint deleted March 2021.
      operationId: GetVoiceChatV1PushToTalk
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VoiceChatPushToTalkResource'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/VoiceChatPushToTalkResource'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/VoiceChatPushToTalkResource'
    put:
      tags:
        - voice-chat
      summary: Set voice chat push to talk configuration
      description: Endpoint deleted March 2021.
      operationId: PutVoiceChatV1PushToTalk
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VoiceChatUnnormalizedPushToTalkResource'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/VoiceChatUnnormalizedPushToTalkResource'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/VoiceChatUnnormalizedPushToTalkResource'
      responses:
        '204':
          description: No content
  /voice-chat/v1/push-to-talk/check-available:
    post:
      tags:
        - voice-chat
      summary: Use to check if we have permissions to start push to talk
      description: Endpoint deleted March 2021.
      operationId: PostVoiceChatV1PushToTalkCheckAvailable
      parameters:
        - name: prompt
          in: query
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: boolean
            application/x-yaml:
              schema:
                type: boolean
            application/x-msgpack:
              schema:
                type: boolean
  /voice-chat/v2/devices/capture:
    get:
      tags:
        - voice-chat
      summary: Get the list of available sound capture devices
      operationId: GetVoiceChatV2DevicesCapture
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VoiceChatDeviceResource'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VoiceChatDeviceResource'
            application/x-msgpack:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VoiceChatDeviceResource'
  /voice-chat/v2/devices/capture/permission:
    get:
      tags:
        - voice-chat
      summary: Returns true if the user has permission to use the microphone.
      description: 'Use this endpoint to determine if the user has granted access to the microphone for voice. Returns an enum that indicates if permission is denied/granted, or if permission needs to be obtained through the prompt-for-permission endpoint.'
      operationId: GetVoiceChatV2DevicesCapturePermission
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VoiceChatCaptureDevicePermissionStatus'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/VoiceChatCaptureDevicePermissionStatus'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/VoiceChatCaptureDevicePermissionStatus'
  /voice-chat/v2/devices/capture/prompt-for-permission:
    put:
      tags:
        - voice-chat
      summary: 'Prompts the user for permission to use the microphone, if required.'
      description: "On Mac OS, starting from 10.14 (Mojave), we must ask the user for permission to access the microphone. Until they accept the prompt, or if they decline, the microphone will be unavailable, and voice will not be transmitted.\nBefore joining a voice channel, users of this plugin should call PUT on this endpoint while being subscribed for updates to /voice-chat/v2/devices/capture/permission. If 'permission' is updated to 'true', the listener must leave and re-join the voice channel to enable the microphone.\nIf the user has already granted or denied permission, this endpoint does nothing. The endpoint always returns immediately with success."
      operationId: PutVoiceChatV2DevicesCapturePromptForPermission
      responses:
        '204':
          description: No content
  /voice-chat/v2/devices/render:
    get:
      tags:
        - voice-chat
      summary: Get the list of available sound render devices
      operationId: GetVoiceChatV2DevicesRender
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VoiceChatDeviceResource'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VoiceChatDeviceResource'
            application/x-msgpack:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VoiceChatDeviceResource'
  '/voice-chat/v2/push-to-talk/{productName}':
    get:
      tags:
        - voice-chat
      summary: Get voice chat push to talk configuration status
      operationId: GetVoiceChatV2PushToTalkByProductName
      parameters:
        - name: productName
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VoiceChatPushToTalkResource'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/VoiceChatPushToTalkResource'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/VoiceChatPushToTalkResource'
    put:
      tags:
        - voice-chat
      summary: Set voice chat push to talk configuration
      operationId: PutVoiceChatV2PushToTalkByProductName
      parameters:
        - name: productName
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VoiceChatUnnormalizedPushToTalkResource'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/VoiceChatUnnormalizedPushToTalkResource'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/VoiceChatUnnormalizedPushToTalkResource'
      responses:
        '204':
          description: No content
  /voice-chat/v2/push-to-talk/check-available:
    post:
      tags:
        - voice-chat
      summary: Use to check if we have permissions to start push to talk
      operationId: PostVoiceChatV2PushToTalkCheckAvailable
      parameters:
        - name: prompt
          in: query
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: boolean
            application/x-yaml:
              schema:
                type: boolean
            application/x-msgpack:
              schema:
                type: boolean
  /voice-chat/v2/sessions:
    delete:
      tags:
        - voice-chat
      summary: Leave all joined sessions
      description: Endpoint deleted March 2021.
      operationId: DeleteVoiceChatV2Sessions
      responses:
        '204':
          description: No content
    get:
      tags:
        - voice-chat
      summary: Get the list of all current voice sessions
      description: Endpoint deleted March 2021.
      operationId: GetVoiceChatV2Sessions
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VoiceChatSessionResource'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VoiceChatSessionResource'
            application/x-msgpack:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VoiceChatSessionResource'
    post:
      tags:
        - voice-chat
      summary: Join a session with game-specific JWT token
      description: Endpoint deleted March 2021.
      operationId: PostVoiceChatV2Sessions
      parameters:
        - name: JWT
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VoiceChatSessionResource'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/VoiceChatSessionResource'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/VoiceChatSessionResource'
    put:
      tags:
        - voice-chat
      summary: Update the properties for all sessions
      description: "volume: Controls the output volume for a room. Set to 0 to mute.\nisFocused: Toggles if a session gains volume priority, which dampens the volume of the other sessions.\nisTransmitEnabled: Toggles audio input for a session.\n\n\nEndpoint deleted March 2021."
      operationId: PutVoiceChatV2Sessions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VoiceChatUpdateSessionResource'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/VoiceChatUpdateSessionResource'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/VoiceChatUpdateSessionResource'
      responses:
        '204':
          description: No content
  '/voice-chat/v2/sessions/{id}':
    delete:
      tags:
        - voice-chat
      summary: Leave a session
      description: Endpoint deleted March 2021.
      operationId: DeleteVoiceChatV2SessionsById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No content
    get:
      tags:
        - voice-chat
      summary: Get session details
      description: Endpoint deleted March 2021.
      operationId: GetVoiceChatV2SessionsById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VoiceChatSessionResource'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/VoiceChatSessionResource'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/VoiceChatSessionResource'
    put:
      tags:
        - voice-chat
      summary: Update the properties for a session
      description: "volume: Controls the output volume for a room. Set to 0 to mute.\nisFocused: Toggles if a session gains volume priority, which dampens the volume of the other sessions.\nisTransmitEnabled: Toggles audio input for a session.\n\n\nEndpoint deleted March 2021."
      operationId: PutVoiceChatV2SessionsById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VoiceChatUpdateSessionResource'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/VoiceChatUpdateSessionResource'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/VoiceChatUpdateSessionResource'
      responses:
        '204':
          description: No content
  '/voice-chat/v2/sessions/{sessionId}/participants/{participantId}':
    get:
      tags:
        - voice-chat
      summary: Get participant details
      description: Endpoint deleted March 2021.
      operationId: GetVoiceChatV2SessionsBySessionIdParticipantsByParticipantId
      parameters:
        - name: sessionId
          in: path
          required: true
          schema:
            type: string
        - name: participantId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VoiceChatParticipantResource'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/VoiceChatParticipantResource'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/VoiceChatParticipantResource'
    put:
      tags:
        - voice-chat
      summary: Update local participant details
      description: Endpoint deleted March 2021.
      operationId: PutVoiceChatV2SessionsBySessionIdParticipantsByParticipantId
      parameters:
        - name: sessionId
          in: path
          required: true
          schema:
            type: string
        - name: participantId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VoiceChatUpdateParticipantResource'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/VoiceChatUpdateParticipantResource'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/VoiceChatUpdateParticipantResource'
      responses:
        '204':
          description: No content
  /voice-chat/v2/settings:
    get:
      tags:
        - voice-chat
      summary: Get current voice chat settings
      description: Endpoint deleted March 2021.
      operationId: GetVoiceChatV2Settings
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VoiceChatSettingsResource'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/VoiceChatSettingsResource'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/VoiceChatSettingsResource'
    put:
      tags:
        - voice-chat
      summary: Update current voice chat settings
      description: Endpoint deleted March 2021.
      operationId: PutVoiceChatV2Settings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VoiceChatUpdateSettingsResource'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/VoiceChatUpdateSettingsResource'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/VoiceChatUpdateSettingsResource'
      responses:
        '204':
          description: No content
  /voice-chat/v2/state:
    get:
      tags:
        - voice-chat
      summary: Get the connection state
      description: "Always returns true. SDK inititalize/authenticate/authorize is now done when creating/joining a voice session/channel\n\nEndpoint deleted October 2020."
      operationId: GetVoiceChatV2State
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VoiceChatStateResource'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/VoiceChatStateResource'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/VoiceChatStateResource'
  '/voice-chat/v3/sessions/{productName}':
    delete:
      tags:
        - voice-chat
      summary: Leave all joined sessions
      description: 'Endpoint deprecated and will be deleted November 2022.  Please use /voice-chat/v4/sessions/{productName}'
      operationId: DeleteVoiceChatV3SessionsByProductName
      parameters:
        - name: productName
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No content
    get:
      tags:
        - voice-chat
      summary: Get the list of all current voice sessions
      description: 'Endpoint deprecated and will be deleted November 2022.  Please use /voice-chat/v4/sessions/{productName}'
      operationId: GetVoiceChatV3SessionsByProductName
      parameters:
        - name: productName
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VoiceChatSessionResource'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VoiceChatSessionResource'
            application/x-msgpack:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VoiceChatSessionResource'
    post:
      tags:
        - voice-chat
      summary: Join a session with game-specific JWT token
      description: 'Endpoint deprecated and will be deleted November 2022.  Please use /voice-chat/v4/sessions/{productName}'
      operationId: PostVoiceChatV3SessionsByProductName
      parameters:
        - name: productName
          in: path
          required: true
          schema:
            type: string
        - name: jwt
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VoiceChatSessionResource'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/VoiceChatSessionResource'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/VoiceChatSessionResource'
    put:
      tags:
        - voice-chat
      summary: Update the properties for all sessions
      description: "volume: Controls the output volume for a room. Set to 0 to mute.\nisFocused: Toggles if a session gains volume priority, which dampens the volume of the other sessions.\nisTransmitEnabled: Toggles audio input for a session.\n\n\nEndpoint deprecated and will be deleted November 2022.  Please use /voice-chat/v4/sessions/{productName}"
      operationId: PutVoiceChatV3SessionsByProductName
      parameters:
        - name: productName
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VoiceChatUpdateSessionResource'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/VoiceChatUpdateSessionResource'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/VoiceChatUpdateSessionResource'
      responses:
        '204':
          description: No content
  '/voice-chat/v3/sessions/{productName}/{id}':
    delete:
      tags:
        - voice-chat
      summary: Leave a session
      description: 'Endpoint deprecated and will be deleted November 2022.  Please use /voice-chat/v4/sessions/{productName}'
      operationId: DeleteVoiceChatV3SessionsByProductNameById
      parameters:
        - name: productName
          in: path
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No content
    get:
      tags:
        - voice-chat
      summary: Get session details
      description: 'Endpoint deprecated and will be deleted November 2022.  Please use /voice-chat/v4/sessions/{productName}/{id}'
      operationId: GetVoiceChatV3SessionsByProductNameById
      parameters:
        - name: productName
          in: path
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VoiceChatSessionResource'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/VoiceChatSessionResource'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/VoiceChatSessionResource'
    put:
      tags:
        - voice-chat
      summary: Update the properties for a session
      description: "volume: Controls the output volume for a room. Set to 0 to mute.\nisFocused: Toggles if a session gains volume priority, which dampens the volume of the other sessions.\nisTransmitEnabled: Toggles audio input for a session.\n\n\nEndpoint deprecated and will be deleted November 2022.  Please use /voice-chat/v4/sessions/{productName}"
      operationId: PutVoiceChatV3SessionsByProductNameById
      parameters:
        - name: productName
          in: path
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VoiceChatUpdateSessionResource'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/VoiceChatUpdateSessionResource'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/VoiceChatUpdateSessionResource'
      responses:
        '204':
          description: No content
  '/voice-chat/v3/sessions/{productName}/{sessionId}/participants/{participantId}':
    get:
      tags:
        - voice-chat
      summary: Get participant details
      description: 'Endpoint deprecated and will be deleted November 2022.  Please use /voice-chat/v4/sessions/{productName}'
      operationId: GetVoiceChatV3SessionsByProductNameBySessionIdParticipantsByParticipantId
      parameters:
        - name: productName
          in: path
          required: true
          schema:
            type: string
        - name: sessionId
          in: path
          required: true
          schema:
            type: string
        - name: participantId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VoiceChatParticipantResource'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/VoiceChatParticipantResource'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/VoiceChatParticipantResource'
    put:
      tags:
        - voice-chat
      summary: Update local participant details
      description: 'Endpoint deprecated and will be deleted November 2022.  Please use /voice-chat/v4/sessions/{productName}'
      operationId: PutVoiceChatV3SessionsByProductNameBySessionIdParticipantsByParticipantId
      parameters:
        - name: productName
          in: path
          required: true
          schema:
            type: string
        - name: sessionId
          in: path
          required: true
          schema:
            type: string
        - name: participantId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VoiceChatUpdateParticipantResource'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/VoiceChatUpdateParticipantResource'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/VoiceChatUpdateParticipantResource'
      responses:
        '204':
          description: No content
  '/voice-chat/v3/settings/{productName}':
    get:
      tags:
        - voice-chat
      summary: Get current voice chat settings
      operationId: GetVoiceChatV3SettingsByProductName
      parameters:
        - name: productName
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VoiceChatSettingsResource'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/VoiceChatSettingsResource'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/VoiceChatSettingsResource'
    put:
      tags:
        - voice-chat
      summary: Update current voice chat settings
      operationId: PutVoiceChatV3SettingsByProductName
      parameters:
        - name: productName
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VoiceChatUpdateSettingsResource'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/VoiceChatUpdateSettingsResource'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/VoiceChatUpdateSettingsResource'
      responses:
        '204':
          description: No content
  '/voice-chat/v4/sessions/{productName}':
    delete:
      tags:
        - voice-chat
      summary: Leave all joined sessions
      operationId: DeleteVoiceChatV4SessionsByProductName
      parameters:
        - name: productName
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No content
    get:
      tags:
        - voice-chat
      summary: Get the list of all current voice sessions
      operationId: GetVoiceChatV4SessionsByProductName
      parameters:
        - name: productName
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VoiceChatSessionResource'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VoiceChatSessionResource'
            application/x-msgpack:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VoiceChatSessionResource'
    post:
      tags:
        - voice-chat
      summary: Join a session with game-specific JWT token
      operationId: PostVoiceChatV4SessionsByProductName
      parameters:
        - name: productName
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VoiceChatJoinSession'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/VoiceChatJoinSession'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/VoiceChatJoinSession'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VoiceChatSessionResource'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/VoiceChatSessionResource'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/VoiceChatSessionResource'
    put:
      tags:
        - voice-chat
      summary: Update the properties for all sessions
      description: "volume: Controls the output volume for a room. Set to 0 to mute.\nisFocused: Toggles if a session gains volume priority, which dampens the volume of the other sessions.\nisTransmitEnabled: Toggles audio input for a session.\n"
      operationId: PutVoiceChatV4SessionsByProductName
      parameters:
        - name: productName
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VoiceChatUpdateSessionResource'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/VoiceChatUpdateSessionResource'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/VoiceChatUpdateSessionResource'
      responses:
        '204':
          description: No content
  '/voice-chat/v4/sessions/{productName}/{id}':
    delete:
      tags:
        - voice-chat
      summary: Leave a session
      operationId: DeleteVoiceChatV4SessionsByProductNameById
      parameters:
        - name: productName
          in: path
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No content
    get:
      tags:
        - voice-chat
      summary: Get session details
      operationId: GetVoiceChatV4SessionsByProductNameById
      parameters:
        - name: productName
          in: path
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VoiceChatSessionResource'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/VoiceChatSessionResource'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/VoiceChatSessionResource'
    put:
      tags:
        - voice-chat
      summary: Update the properties for a session
      description: "volume: Controls the output volume for a room. Set to 0 to mute.\nisFocused: Toggles if a session gains volume priority, which dampens the volume of the other sessions.\nisTransmitEnabled: Toggles audio input for a session.\n"
      operationId: PutVoiceChatV4SessionsByProductNameById
      parameters:
        - name: productName
          in: path
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VoiceChatUpdateSessionResource'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/VoiceChatUpdateSessionResource'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/VoiceChatUpdateSessionResource'
      responses:
        '204':
          description: No content
  '/voice-chat/v4/sessions/{productName}/{sessionId}/participants/{participantId}':
    get:
      tags:
        - voice-chat
      summary: Get participant details
      operationId: GetVoiceChatV4SessionsByProductNameBySessionIdParticipantsByParticipantId
      parameters:
        - name: productName
          in: path
          required: true
          schema:
            type: string
        - name: sessionId
          in: path
          required: true
          schema:
            type: string
        - name: participantId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VoiceChatParticipantResource'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/VoiceChatParticipantResource'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/VoiceChatParticipantResource'
    put:
      tags:
        - voice-chat
      summary: Update local participant details
      operationId: PutVoiceChatV4SessionsByProductNameBySessionIdParticipantsByParticipantId
      parameters:
        - name: productName
          in: path
          required: true
          schema:
            type: string
        - name: sessionId
          in: path
          required: true
          schema:
            type: string
        - name: participantId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VoiceChatUpdateParticipantResource'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/VoiceChatUpdateParticipantResource'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/VoiceChatUpdateParticipantResource'
      responses:
        '204':
          description: No content
  /xbox-account/v1/authorization:
    post:
      tags:
        - xbox-account
      summary: Gets authorization from the Xbox Account of the player logged in the Xbox
      operationId: PostXboxAccountV1Authorization
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/XboxAccountAuthorizationParameters'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/XboxAccountAuthorizationParameters'
          application/x-msgpack:
            schema:
              $ref: '#/components/schemas/XboxAccountAuthorizationParameters'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XboxAccountAuthorization'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/XboxAccountAuthorization'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/XboxAccountAuthorization'
  /xbox-account/v1/authorization-consent:
    get:
      tags:
        - xbox-account
      summary: Authorization consent status for Xbox
      operationId: GetXboxAccountV1AuthorizationConsent
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: boolean
            application/x-yaml:
              schema:
                type: boolean
            application/x-msgpack:
              schema:
                type: boolean
    put:
      tags:
        - xbox-account
      summary: Update authorization consent status for Xbox
      operationId: PutXboxAccountV1AuthorizationConsent
      parameters:
        - name: AuthorizationConsent
          in: query
          required: true
          schema:
            type: boolean
      responses:
        '204':
          description: No content
components:
  schemas:
    AccessToken:
      type: object
      properties:
        token:
          type: string
    AccountsSecurityAccountsSecurity:
      type: object
      properties:
        action:
          type: string
        granted:
          type: boolean
        url:
          type: string
    AccountsSecurityHomeBaseCountry:
      type: object
      properties:
        home_base_country:
          type: string
    AccountsSecurityProductSessionSession:
      type: object
      properties:
        productId:
          type: string
    AgentRequest:
      type: object
      properties:
        id:
          type: string
        status:
          type: object
        type:
          $ref: '#/components/schemas/AgentRequestType'
    AgentRequestQueue:
      type: object
      properties:
        current:
          $ref: '#/components/schemas/AgentRequest'
        pending:
          type: array
          items:
            $ref: '#/components/schemas/AgentRequest'
    AgentRequestType:
      enum:
        - ThirdPartyDependency
      type: string
    AgentResourceEvent:
      type: object
      properties:
        data:
          type: object
        eventType:
          $ref: '#/components/schemas/AgentResourceEventType'
        uri:
          type: string
    AgentResourceEventType:
      enum:
        - Create
        - Update
        - Delete
      type: string
    AgentSession:
      type: object
      properties:
        isElevated:
          type: boolean
        processsId:
          type: integer
          format: int32
    AgeRestriction:
      type: object
      properties:
        productId:
          type: string
        restricted:
          type: boolean
    AgeRestrictionAgeRestriction:
      type: object
      properties:
        productId:
          type: string
        restricted:
          type: boolean
    AgeRestrictionHomeBaseCountry:
      type: object
      properties:
        home_base_country:
          type: string
    AliasRequiredResponse:
      type: object
      properties:
        isAliasChangeRequired:
          type: boolean
        isAliasMissing:
          type: boolean
    AntiAddictionAntiAddictionConfig:
      type: object
      properties:
        backendUrl:
          type: string
        enabled:
          type: boolean
        heartbeatInterval:
          type: number
          format: double
    AntiAddictionAntiAddictionPolicy:
      type: object
      properties:
        hopePayload:
          type: object
          additionalProperties:
            type: string
        localizationKey:
          type: string
        payloadToken:
          type: string
        policyType:
          $ref: '#/components/schemas/AntiAddictionPolicyType'
        triggerTimeInSec:
          type: integer
          format: int64
    AntiAddictionAntiAddictionState:
      type: object
      properties:
        displayType:
          $ref: '#/components/schemas/AntiAddictionDisplayType'
        hopePayload:
          type: object
          additionalProperties:
            type: string
        localizationContext:
          type: object
          additionalProperties:
            type: string
        localizationKey:
          type: string
        payloadToken:
          type: string
        policyType:
          $ref: '#/components/schemas/AntiAddictionPolicyType'
    AntiAddictionDisplayType:
      enum:
        - MODAL_DIALOG
        - PASSIVE_DIPLAY
      type: string
    AntiAddictionPolicyType:
      enum:
        - shutdown
        - playTime
        - warningMessage
        - disableMatchMaking
        - hopeWarning
        - hopeRewardRate
        - hopeShutdown
        - hopeHeartbeat
      type: string
    AntiAddictionProductSessionSession:
      type: object
      properties:
        productId:
          type: string
    AppCommandAuthorizationResponse:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/AppCommandAuthorizationResponseType'
    AppCommandAuthorizationResponseType:
      enum:
        - needs_authentication
        - needs_reauthentication
        - authorized
      type: string
    AppCommandAuthStatus:
      type: object
      properties:
        error:
          type: string
        state:
          $ref: '#/components/schemas/AppCommandAuthStatusState'
    AppCommandAuthStatusState:
      enum:
        - Unknown
        - Succeeded
        - Failed
      type: string
    AppCommandCommand:
      type: object
      properties:
        kind:
          $ref: '#/components/schemas/AppCommandCommandKind'
        payload:
          type: object
          additionalProperties:
            type: ''
    AppCommandCommandAuthV1:
      type: object
      properties:
        token:
          type: string
    AppCommandCommandKind:
      enum:
        - Unknown
        - AuthV1
        - Vng
      type: string
    AppCommandCommandVng:
      type: object
      properties:
        productId:
          type: string
    AppFocusRequest:
      type: object
      properties:
        reason:
          type: string
    AppInfo:
      type: object
      properties:
        name:
          type: string
        patchline:
          type: string
        patchlineVisibleName:
          type: string
        publisher:
          type: string
        sdkVersion:
          type: string
        version:
          type: string
    AppRepairApplyRequest:
      type: object
      properties:
        repairCode:
          $ref: '#/components/schemas/RepairCode'
        sessionId:
          type: string
    AppUpdateApplyRequest:
      type: object
      properties:
        sessionId:
          type: string
    AuthenticationTypeEnum:
      enum:
        - SSOAuth
      type: string
    basicOperatingSystemInfo:
      type: object
      properties:
        edition:
          type: string
        platform:
          type: string
        versionMajor:
          type: string
        versionMinor:
          type: string
      description: User Experience Settings Operating System Information
    basicSystemInfo:
      type: object
      properties:
        operatingSystem:
          $ref: '#/components/schemas/basicOperatingSystemInfo'
        physicalMemory:
          type: integer
          format: int64
        physicalProcessorCores:
          type: integer
          format: int32
        processorSpeed:
          type: integer
          format: int32
      description: User Experience Settings System Information
    BindingFullApiHelp:
      type: object
      properties:
        events:
          type: array
          items:
            $ref: '#/components/schemas/BindingFullEventHelp'
        functions:
          type: array
          items:
            $ref: '#/components/schemas/BindingFullFunctionHelp'
        types:
          type: array
          items:
            $ref: '#/components/schemas/BindingFullTypeHelp'
      description: Describes the exposed native API.
    BindingFullArgumentHelp:
      type: object
      properties:
        description:
          type: string
        name:
          type: string
        optional:
          type: boolean
        type:
          $ref: '#/components/schemas/BindingFullTypeIdentifier'
      description: Describes a function parameter.
    BindingFullEnumValueHelp:
      type: object
      properties:
        description:
          type: string
        name:
          type: string
        value:
          type: integer
          format: int32
      description: Describes an enumerator.
    BindingFullEventHelp:
      type: object
      properties:
        description:
          type: string
        name:
          type: string
        nameSpace:
          type: string
        tags:
          type: array
          items:
            type: string
        type:
          $ref: '#/components/schemas/BindingFullTypeIdentifier'
      description: Describes an event.
    BindingFullFieldHelp:
      type: object
      properties:
        description:
          type: string
        name:
          type: string
        offset:
          type: integer
          format: int32
        optional:
          type: boolean
        type:
          $ref: '#/components/schemas/BindingFullTypeIdentifier'
      description: Describes a member of a struct.
    BindingFullFunctionHelp:
      type: object
      properties:
        arguments:
          type: array
          items:
            $ref: '#/components/schemas/BindingFullArgumentHelp'
        deprecated:
          type: boolean
        deprecatedHelp:
          type: string
        description:
          type: string
        help:
          type: string
        internal:
          type: boolean
        name:
          type: string
        nameSpace:
          type: string
        returns:
          $ref: '#/components/schemas/BindingFullTypeIdentifier'
        subscribable:
          type: boolean
        tags:
          type: array
          items:
            type: string
        threadSafe:
          type: boolean
      description: Describes a function.
    BindingFullTypeHelp:
      type: object
      properties:
        description:
          type: string
        fields:
          type: array
          items:
            $ref: '#/components/schemas/BindingFullFieldHelp'
        name:
          type: string
        nameSpace:
          type: string
        size:
          type: integer
          format: int32
        tags:
          type: array
          items:
            type: string
        values:
          type: array
          items:
            $ref: '#/components/schemas/BindingFullEnumValueHelp'
      description: Describes a struct or enum type.
    BindingFullTypeIdentifier:
      type: object
      properties:
        elementType:
          type: string
        type:
          type: string
      description: Describes the type of a value.
    BindingHelpFormat:
      enum:
        - Full
        - Epytext
      type: string
      description: Help format for binding functions and types.
    BootstrapProcessRequest:
      type: object
      properties:
        path:
          type: string
    ChatAccountChatSettings:
      type: object
      properties:
        bounceDockIconEnabled:
          type: boolean
        chat-status-message:
          type: string
        chatFilterDisabled:
          type: boolean
        chatGBG:
          type: boolean
        chatGroupMobile:
          type: boolean
        chatGroupOffline:
          type: boolean
        chatWindow:
          $ref: '#/components/schemas/ChatChatWindowSettings'
        chatWindowDockedHeight:
          type: integer
          format: int32
        closed-conversations:
          type: object
          additionalProperties:
            type: integer
            format: int64
        friendRequestToastsDisabled:
          type: boolean
        hidden-conversations:
          type: object
          additionalProperties:
            type: integer
            format: int64
        linkClickWarningEnabled:
          type: boolean
        messageNotificationsEnabled:
          type: boolean
        moreUnreadsEnabled:
          type: boolean
        muted-conversations:
          type: object
          additionalProperties:
            type: integer
            format: int8
        recentlyPlayedFirstOpen:
          type: boolean
        recentlyPlayedOpen:
          type: boolean
        roster-group-collapsed:
          type: object
          additionalProperties:
            type: boolean
        showWhenTypingEnabled:
          type: boolean
        sortBy:
          type: string
        usePlayerPreferences:
          type: boolean
    ChatAccountState:
      enum:
        - offline
        - mobile
        - away
        - chat
        - dnd
      type: string
    ChatActiveConvo:
      type: object
      properties:
        cid:
          type: string
    ChatApiTelemetry:
      type: object
      properties:
        duration:
          type: integer
          format: int64
        method:
          type: string
        pid:
          type: string
        productSession:
          $ref: '#/components/schemas/ChatProductSession'
        requestSession:
          type: string
        response_code:
          type: integer
          format: int32
        uri:
          type: string
    ChatBlockedAction:
      enum:
        - deny
      type: string
    ChatBlockedMapResource:
      type: object
      properties:
        blocks:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ChatChatBlockedPlayer'
    ChatBlockPid:
      type: object
      properties:
        pid:
          type: string
        puuid:
          type: string
    ChatChatBlockedList:
      type: object
      properties:
        blocked:
          type: array
          items:
            $ref: '#/components/schemas/ChatChatBlockedPlayer'
    ChatChatBlockedPlayer:
      type: object
      properties:
        game_name:
          type: string
        game_tag:
          type: string
        name:
          type: string
        pid:
          type: string
        puuid:
          type: string
        region:
          type: string
    ChatChatFriend:
      type: object
      properties:
        activePlatform:
          type: string
        displayGroup:
          type: string
        game_name:
          type: string
        game_tag:
          type: string
        group:
          type: string
        last_online_ts:
          type: integer
          format: int64
        name:
          type: string
        note:
          type: string
        pid:
          type: string
        puuid:
          type: string
        region:
          type: string
    ChatChatFriends:
      type: object
      properties:
        friends:
          type: array
          items:
            $ref: '#/components/schemas/ChatChatFriend'
    ChatChatGamePresence:
      type: object
      properties:
        msg:
          type: string
        private:
          type: string
        privateJwt:
          type: string
        shared:
          $ref: '#/components/schemas/ChatChatSharedPayload'
        sharedJwt:
          type: string
        state:
          $ref: '#/components/schemas/ChatAccountState'
    ChatChatGamePresenceUpdate:
      type: object
      properties:
        game_name:
          type: string
        game_tag:
          type: string
        name:
          type: string
        pid:
          type: string
        resource:
          type: string
        session:
          type: string
        update:
          $ref: '#/components/schemas/ChatChatGamePresence'
    ChatChatGroup:
      type: object
      properties:
        collapsed:
          type: boolean
        isMetaGroup:
          type: boolean
        name:
          type: string
    ChatChatGroupList:
      type: object
      properties:
        groups:
          type: array
          items:
            $ref: '#/components/schemas/ChatChatGroup'
    ChatChatGroupUpdate:
      type: object
      properties:
        collapsed:
          type: boolean
        name:
          type: string
        new_name:
          type: string
    ChatChatMessage:
      type: object
      properties:
        body:
          type: string
        cid:
          type: string
        game_name:
          type: string
        game_tag:
          type: string
        id:
          type: string
        mid:
          type: string
        name:
          type: string
        pid:
          type: string
        puuid:
          type: string
        read:
          type: boolean
        region:
          type: string
        time:
          type: string
        type:
          $ref: '#/components/schemas/ChatMessageType'
    ChatChatMessageList:
      type: object
      properties:
        messages:
          type: array
          items:
            $ref: '#/components/schemas/ChatChatMessage'
    ChatChatParticipant:
      type: object
      properties:
        activePlatform:
          type: string
        cid:
          type: string
        game_name:
          type: string
        game_tag:
          type: string
        muted:
          type: boolean
        name:
          type: string
        pid:
          type: string
        puuid:
          type: string
        region:
          type: string
    ChatChatParticipants:
      type: object
      properties:
        participants:
          type: array
          items:
            $ref: '#/components/schemas/ChatChatParticipant'
    ChatChatPlayer:
      type: object
      properties:
        activePlatform:
          type: string
        cid:
          type: string
        displayGroup:
          type: string
        game_name:
          type: string
        game_tag:
          type: string
        group:
          type: string
        muted:
          type: boolean
        name:
          type: string
        note:
          type: string
        pid:
          type: string
        presence:
          $ref: '#/components/schemas/ChatMultiGamePresence'
        priority:
          type: string
        puuid:
          type: string
        region:
          type: string
        resource:
          type: string
    ChatChatPlayerParticipants:
      type: object
      properties:
        participants:
          type: array
          items:
            $ref: '#/components/schemas/ChatChatPlayer'
    ChatChatSession:
      type: object
      properties:
        federated:
          type: boolean
        game_name:
          type: string
        game_tag:
          type: string
        loaded:
          type: boolean
        name:
          type: string
        pid:
          type: string
        puuid:
          type: string
        region:
          type: string
        resource:
          type: string
        state:
          $ref: '#/components/schemas/ChatChatSessionState'
    ChatChatSessionData:
      enum:
        - kNone
        - kSettings
        - kPresences
        - kRoster
        - kRosterReady
        - kPrivacies
        - kRecentConvos
        - kAll
        - kSentRoster
        - kTimeOut
      type: string
    ChatChatSessionState:
      enum:
        - disconnected
        - connecting
        - connected
      type: string
    ChatChatSharedPayload:
      type: object
      properties:
        actor:
          type: string
        details:
          type: string
        location:
          type: string
        patchline:
          type: string
        platform:
          type: string
        product:
          type: string
        time:
          type: integer
          format: int64
    ChatChatWindowSettings:
      type: object
      properties:
        detached:
          type: boolean
        height:
          type: integer
          format: int32
        left:
          type: integer
          format: int32
        top:
          type: integer
          format: int32
        width:
          type: integer
          format: int32
    ChatCommandTelemetry:
      type: object
      properties:
        commandType:
          type: string
        hasPromiseToFulfill:
          type: boolean
        isBlocking:
          type: boolean
        mutatorExecutionTimeUs:
          type: integer
          format: int64
        notifierExecutionTimeUs:
          type: integer
          format: int64
        promiseFulfillmentTimeUs:
          type: integer
          format: int64
        queueSize:
          type: integer
          format: int64
        timeInQueueMs:
          type: integer
          format: int64
        totalExecutionTimeUs:
          type: integer
          format: int64
        validatorExecutionTimeUs:
          type: integer
          format: int64
    ChatConfigReadinessEnum:
      enum:
        - NotReady
        - Ready
      type: string
    ChatConfigStatus:
      type: object
      properties:
        readiness:
          $ref: '#/components/schemas/ChatConfigReadinessEnum'
        updateId:
          type: integer
          format: int64
    ChatConversationCreateJoin:
      type: object
      properties:
        cid:
          type: string
        fetch_history:
          type: boolean
        hidden:
          type: boolean
        password:
          type: string
        session:
          type: string
        type:
          $ref: '#/components/schemas/ChatMessageType'
    ChatConversationCreateJoinFederated:
      type: object
      properties:
        join:
          $ref: '#/components/schemas/ChatConvoJoinFederated'
        session:
          type: string
    ChatConversationEdit:
      type: object
      properties:
        cid:
          type: string
        hidden:
          type: boolean
        muted:
          type: boolean
        mutedRestriction:
          type: boolean
    ChatConversationInitRecent:
      type: object
      properties:
        cid:
          type: string
        lastMessageRead:
          type: boolean
        msg:
          $ref: '#/components/schemas/ChatMessage'
        pid:
          type: string
        readPoint:
          $ref: '#/components/schemas/ChatReadPoint'
        type:
          $ref: '#/components/schemas/ChatMessageType'
    ChatConversationInitRecentList:
      type: object
      properties:
        conversations:
          type: array
          items:
            $ref: '#/components/schemas/ChatConversationInitRecent'
    ChatConversationReadership:
      type: object
      properties:
        cid:
          type: string
        id:
          type: string
        readTs:
          type: integer
          format: int64
    ChatConversationReadershipList:
      type: object
      properties:
        readTs:
          type: array
          items:
            $ref: '#/components/schemas/ChatConversationReadership'
    ChatConversationSetActive:
      type: object
      properties:
        cid:
          type: string
        session:
          type: string
    ChatConvoCid:
      type: object
      properties:
        cid:
          type: string
        id:
          type: string
    ChatConvoJoin:
      type: object
      properties:
        cid:
          type: string
        hidden:
          type: boolean
        password:
          type: string
        type:
          $ref: '#/components/schemas/ChatMessageType'
    ChatConvoJoinFederated:
      type: object
      properties:
        domain:
          type: string
        hidden:
          type: boolean
        id:
          type: string
        password:
          type: string
        resource:
          type: string
        targetRegion:
          type: string
        type:
          $ref: '#/components/schemas/ChatMessageType'
    ChatConvoUpdate:
      type: object
      properties:
        cid:
          type: string
        hidden:
          type: boolean
        muted:
          type: boolean
    ChatDebugChatGamePresence:
      type: object
      properties:
        jwt_actor:
          type: string
        jwt_details:
          type: string
        jwt_location:
          type: string
        jwt_patchline:
          type: string
        jwt_platform:
          type: string
        jwt_product:
          type: string
        jwt_time:
          type: integer
          format: int64
        msg:
          type: string
        private:
          type: string
        private_jwt:
          type: string
        shared:
          $ref: '#/components/schemas/ChatChatSharedPayload'
        state:
          $ref: '#/components/schemas/ChatAccountState'
    ChatDebugConfig:
      type: object
      properties:
        readershipInterval:
          type: number
          format: double
    ChatDeleteMessage:
      type: object
      properties:
        body:
          type: string
        id:
          type: string
        senderPuuid:
          type: string
    ChatDeviceChatSettings:
      type: object
      properties:
        mobilePushNotificationsEnabled:
          type: boolean
    ChatEntitlementsTokenResource:
      type: object
      properties:
        accessToken:
          type: string
        entitlements:
          type: array
          items:
            type: string
        issuer:
          type: string
        subject:
          type: string
        token:
          type: string
    ChatError:
      type: object
      properties:
        cid:
          type: string
        class:
          type: string
        code:
          type: string
        id:
          type: string
        pid:
          type: string
        subtype:
          type: string
        text:
          type: string
        ts:
          type: string
        type:
          type: string
    ChatErrorId:
      type: object
      properties:
        id:
          type: string
    ChatErrorList:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ChatError'
    ChatFriendGroup:
      type: object
      properties:
        collapsed:
          type: boolean
        isMetaGroup:
          type: boolean
        name:
          type: string
        priority:
          type: string
    ChatFriendGroupCreate:
      type: object
      properties:
        collapsed:
          type: boolean
        name:
          type: string
    ChatFriendGroupList:
      type: object
      properties:
        groups:
          type: array
          items:
            $ref: '#/components/schemas/ChatFriendGroup'
    ChatFriendGroupName:
      type: object
      properties:
        name:
          type: string
    ChatFriendGroupOrder:
      type: object
      properties:
        groups:
          type: array
          items:
            type: string
    ChatFriendGroupSyncList:
      type: object
      properties:
        groups:
          type: array
          items:
            $ref: '#/components/schemas/ChatGroupsFriendGroupSync'
    ChatFriendGroupUpdate:
      type: object
      properties:
        collapsed:
          type: boolean
        name:
          type: string
        new_name:
          type: string
        priority:
          type: string
    ChatFriendPid:
      type: object
      properties:
        pid:
          type: string
        puuid:
          type: string
    ChatFriendRequest:
      type: object
      properties:
        game_name:
          type: string
        game_tag:
          type: string
        name:
          type: string
        note:
          type: string
        pid:
          type: string
        puuid:
          type: string
        region:
          type: string
        subscription:
          $ref: '#/components/schemas/ChatFriendSubscriptionType'
    ChatFriendRequestAdd:
      type: object
      properties:
        game_name:
          type: string
        game_tag:
          type: string
        name:
          type: string
        note:
          type: string
        pid:
          type: string
        puuid:
          type: string
        region:
          type: string
    ChatFriendRequestList:
      type: object
      properties:
        requests:
          type: array
          items:
            $ref: '#/components/schemas/ChatFriendRequest'
    ChatFriendRequestListPuuid:
      type: object
      properties:
        requests:
          type: array
          items:
            $ref: '#/components/schemas/ChatFriendRequestPuuid'
    ChatFriendRequestPost:
      type: object
      properties:
        gameName:
          type: string
        note:
          type: string
        puuid:
          type: string
        tagLine:
          type: string
    ChatFriendRequestPuuid:
      type: object
      properties:
        gameName:
          type: string
        note:
          type: string
        puuid:
          type: string
        subscription:
          $ref: '#/components/schemas/ChatFriendSubscriptionType'
        tagLine:
          type: string
    ChatFriendSubscriptionType:
      enum:
        - pending_out
        - pending_in
      type: string
    ChatFriendUpdate:
      type: object
      properties:
        group:
          type: string
        note:
          type: string
        pid:
          type: string
        puuid:
          type: string
    ChatFriendUpdateList:
      type: object
      properties:
        friends:
          type: array
          items:
            $ref: '#/components/schemas/ChatChatFriend'
        type:
          type: string
    ChatGroupsFriendGroupSync:
      type: object
      properties:
        name:
          type: string
        priority:
          type: string
    ChatJWTVerifyResource:
      type: object
      properties:
        key:
          type: object
          additionalProperties:
            type: string
        token:
          type: string
    ChatMessage:
      type: object
      properties:
        body:
          type: string
        cid:
          type: string
        cts:
          type: string
        game_name:
          type: string
        game_tag:
          type: string
        id:
          type: string
        mid:
          type: string
        name:
          type: string
        pid:
          type: string
        puuid:
          type: string
        read:
          type: boolean
        region:
          type: string
        state:
          type: string
        ts:
          type: string
        type:
          $ref: '#/components/schemas/ChatMessageType'
    ChatMessageList:
      type: object
      properties:
        messages:
          type: array
          items:
            $ref: '#/components/schemas/ChatMessage'
    ChatMessagePost:
      type: object
      properties:
        cid:
          type: string
        message:
          type: string
        type:
          $ref: '#/components/schemas/ChatMessageType'
    ChatMessagesArchive:
      type: object
      properties:
        cid:
          type: string
        messages:
          type: array
          items:
            $ref: '#/components/schemas/ChatMessage'
        readPointTs:
          type: integer
          format: int64
        xmppId:
          type: string
    ChatMessageSend:
      type: object
      properties:
        message:
          type: string
        type:
          $ref: '#/components/schemas/ChatMessageType'
    ChatMessagesFetchArchive:
      type: object
      properties:
        before:
          type: integer
          format: int32
        cid:
          type: string
        count:
          type: integer
          format: int32
        since:
          type: integer
          format: int32
    ChatMessagesSendChatMessage:
      type: object
      properties:
        body:
          type: string
        cid:
          type: string
        sendId:
          type: string
        type:
          $ref: '#/components/schemas/ChatMessageType'
    ChatMessageType:
      enum:
        - chat
        - groupchat
        - dm
        - system
      type: string
    ChatMultiGamePresence:
      type: object
      properties:
        actor:
          type: string
        basic:
          type: string
        details:
          type: string
        game_name:
          type: string
        game_tag:
          type: string
        location:
          type: string
        msg:
          type: string
        name:
          type: string
        patchline:
          type: string
        pid:
          type: string
        platform:
          type: string
        private:
          type: string
        privateJwt:
          type: string
        product:
          type: string
        puuid:
          type: string
        region:
          type: string
        resource:
          type: string
        state:
          $ref: '#/components/schemas/ChatAccountState'
        summary:
          type: string
        time:
          type: integer
          format: int64
    ChatMultiGamePresenceDelete:
      type: object
      properties:
        product:
          type: string
        puuid:
          type: string
        resource:
          type: string
        session:
          type: string
    ChatMultiGamePresenceList:
      type: object
      properties:
        presences:
          type: array
          items:
            $ref: '#/components/schemas/ChatMultiGamePresence'
    ChatParticipantEdit:
      type: object
      properties:
        muted:
          type: boolean
        puuid:
          type: string
    ChatPlayerAffinityInput:
      type: object
      properties:
        hint:
          type: string
        service:
          type: string
    ChatPlayerAffinityToken:
      type: object
      properties:
        affinity:
          type: string
        expiry:
          type: integer
          format: int64
        issuedAt:
          type: integer
          format: int64
        puuid:
          type: string
        service:
          type: string
        token:
          type: string
    ChatPlayerPreferencesResource:
      type: object
      properties:
        data:
          type: object
          additionalProperties:
            type: ''
        modified:
          type: integer
          format: int64
        type:
          type: string
    ChatPlayRestrictionV1Data:
      type: object
      properties:
        chat_enabled:
          type: boolean
        play_restriction_setting:
          $ref: '#/components/schemas/ChatPlayRestrictionV1Settings'
    ChatPlayRestrictionV1Settings:
      enum:
        - none
        - platform_only
      type: string
    ChatPresenceDelete:
      type: object
      properties:
        puuid:
          type: string
        resource:
          type: string
    ChatPresenceProduct:
      type: object
      properties:
        product:
          type: string
    ChatPrivacyReceiveBlockedPlayer:
      type: object
      properties:
        name:
          type: string
        pid:
          type: string
    ChatProductLocTranslateReq:
      type: object
      properties:
        blocking:
          type: boolean
        keys:
          type: array
          items:
            type: string
        locale:
          type: string
        patchline:
          type: string
        product_id:
          type: string
    ChatProductLocTranslateResp:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/ChatProductLocTranslateResult'
    ChatProductLocTranslateResult:
      type: object
      properties:
        found:
          type: boolean
        key:
          type: string
        product_id:
          type: string
        value:
          type: string
    ChatProductMetadata:
      type: object
      properties:
        content_paths:
          $ref: '#/components/schemas/ChatProductMetadataContentPaths'
    ChatProductMetadataContentPaths:
      type: object
      properties:
        loc:
          type: string
        riotstatus:
          type: string
        social:
          type: string
    ChatProductSession:
      type: object
      properties:
        patchlineFullName:
          type: string
        patchlineId:
          type: string
        productId:
          type: string
        version:
          type: string
    ChatProductSessionState:
      type: object
      properties:
        mode:
          type: string
        productId:
          type: string
    ChatProtocolPreference:
      enum:
        - any
        - ipv4
        - ipv6
      type: string
    ChatReadCollectionData:
      type: object
      properties:
        bucket:
          type: string
        key:
          type: string
        subkey:
          type: string
    ChatReadPoint:
      type: object
      properties:
        pid:
          type: string
        readTimeStamp:
          type: string
    ChatRequestPid:
      type: object
      properties:
        pid:
          type: string
        puuid:
          type: string
    ChatRequestPuuid:
      type: object
      properties:
        puuid:
          type: string
    ChatRsoAccessTokenResource:
      type: object
      properties:
        token:
          type: string
    ChatRsoAuthorizationResource:
      type: object
      properties:
        currentAccountId:
          type: integer
          format: int64
        currentPlatformId:
          type: string
        subject:
          type: string
    ChatRsoIdTokenResource:
      type: object
      properties:
        token:
          type: string
    ChatSanitizeRequest:
      type: object
      properties:
        aggressiveScan:
          type: boolean
        level:
          type: integer
          format: int32
        text:
          type: string
        texts:
          type: array
          items:
            type: string
    ChatSanitizeResponse:
      type: object
      properties:
        modified:
          type: boolean
        text:
          type: string
        texts:
          type: array
          items:
            type: string
    ChatSanitizerStatus:
      type: object
      properties:
        ready:
          type: boolean
    ChatSessionPlatform:
      type: object
      properties:
        platformId:
          type: string
    ChatSessionState:
      type: object
      properties:
        products:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ChatProductSessionState'
    ChatSocialData:
      type: object
      properties:
        hovercard_background_url:
          type: string
        icon_url:
          type: string
        product_folder_name:
          type: string
        product_presence_name:
          type: string
    ChatSocialDataReq:
      type: object
      properties:
        locale:
          type: string
        patchline:
          type: string
        product:
          type: string
    ChatSocketClosedCode:
      enum:
        - NEW_CONNECTION
        - INIT_ERROR
        - BAD_AUTH_MECHANISMS_STANZA
        - AUTH_FAILURE
        - BAD_FEATURES_STANZA
        - BAD_BIND_STANZA
        - BAD_SESSION_STANZA
        - TIMEOUT_DURING_LOGIN
        - LOGGING_OUT
        - STREAM_ENDED
        - SOCKET_UNAVAILABLE
        - FINALIZED
        - BAD_MIGRATE_STANZA
        - BAD_MIGRATE_AUTH_MECHANISMS_STANZA
        - MIGRATE_AUTH_FAILURE
        - UNKNOWN
      type: string
    ChatUIState:
      type: object
      properties:
        changedSinceHidden:
          type: boolean
        hidden:
          type: boolean
    ChatUIStateConversation:
      type: object
      properties:
        cid:
          type: string
        direct_messages:
          type: boolean
        global_readership:
          type: boolean
        message_history:
          type: boolean
        mid:
          type: string
        muted:
          type: boolean
        mutedRestriction:
          type: boolean
        type:
          $ref: '#/components/schemas/ChatMessageType'
        uiState:
          $ref: '#/components/schemas/ChatUIState'
        unread_count:
          type: integer
          format: int64
    ChatUIStateConversationJoin:
      type: object
      properties:
        hidden:
          type: boolean
        password:
          type: string
        process:
          type: integer
          format: int32
        type:
          $ref: '#/components/schemas/ChatMessageType'
    ChatUIStateConversationList:
      type: object
      properties:
        conversations:
          type: array
          items:
            $ref: '#/components/schemas/ChatUIStateConversation'
    ChatUIStateConversationUpdate:
      type: object
      properties:
        hidden:
          type: boolean
        muted:
          type: boolean
    ChatUpdateChatSettings:
      type: object
      properties:
        settings:
          type: object
          additionalProperties:
            type: ''
        shouldSave:
          type: boolean
    ChatUpdateProductSession:
      type: object
      properties:
        productSession:
          $ref: '#/components/schemas/ChatProductSession'
        sessionId:
          type: string
    ChatUpdateSanitizerSettings:
      type: object
      properties:
        aggressiveScan:
          type: boolean
        forceFilter:
          type: boolean
    ChatXmppConnectionState:
      type: object
      properties:
        socketCode:
          $ref: '#/components/schemas/ChatSocketClosedCode'
        status:
          $ref: '#/components/schemas/ChatXmppConnectionStatus'
    ChatXmppConnectionStatus:
      enum:
        - DISCONNECTED
        - CONNECTING
        - STREAM_SENT
        - STREAM_RECV
        - AUTH_FEATURES_RECV
        - AUTH_SENT
        - AUTHENTICATED
        - AUTH_STREAM_SENT
        - AUTH_STREAM_RECV
        - FEATURES_RECV
        - BIND_SENT
        - BIND_RECV
        - ENTITLEMENTS_SENT
        - RXEP_SENT
        - SESSION_SENT
        - ENTITLEMENTS_RECV
        - RXEP_RECV
        - CONNECTED
        - MIGRATE_RECEIVED
        - MIGRATE_SENT
        - MIGRATE_DISCONNECTED
        - MIGRATE_CONNECTING
        - MIGRATE_STREAM_SENT
        - MIGRATE_STREAM_RECV
        - MIGRATE_AUTH_FEATURES_RECV
        - MIGRATE_AUTH_SENT
        - MIGRATE_AUTHENTICATED
        - MIGRATE_AUTH_STREAM_SENT
        - MIGRATE_AUTH_STREAM_RECV
      type: string
    ChatXmppReceivedStanza:
      type: object
      properties:
        from:
          type: string
        id:
          type: string
        kind:
          type: string
        stanzaStr:
          type: string
        to:
          type: string
        type:
          type: string
    ChatXmppSendStanza:
      type: object
      properties:
        stanzaRaw:
          type: string
    ChatXmppSessionId:
      type: object
      properties:
        game_name:
          type: string
        game_tag:
          type: string
        name:
          type: string
    ChatXmppSettings:
      type: object
      properties:
        affinityDomains:
          type: object
          additionalProperties:
            type: string
        affinityEnabled:
          type: boolean
        affinityHints:
          type: object
          additionalProperties:
            type: string
        affinityHosts:
          type: object
          additionalProperties:
            type: string
        allowBadCert:
          type: boolean
        autoQueryMsgHistory:
          type: boolean
        chatHost:
          type: string
        chatPort:
          type: integer
          format: int16
        defaultMobileProductId:
          type: string
        enableKeystonePresence:
          type: boolean
        gameNameTaglineEnabled:
          type: boolean
        heartBeatIntervalSecs:
          type: integer
          format: int32
        immediateConnectProducts:
          type: array
          items:
            type: string
        keepAliveIntervalSecs:
          type: integer
          format: int32
        keepAliveTimeoutSecs:
          type: integer
          format: int32
        productsRequiringJwtPresence:
          type: array
          items:
            type: string
        protocolPreference:
          $ref: '#/components/schemas/ChatProtocolPreference'
        replaceRichMessages:
          type: boolean
        useTLS:
          type: boolean
    ChatXmppStatusCheckData:
      type: object
      properties:
        maxNotAllowed:
          $ref: '#/components/schemas/ChatXmppConnectionStatus'
        minNotAllowed:
          $ref: '#/components/schemas/ChatXmppConnectionStatus'
        resource:
          type: string
    ClientConfigBuildInfo:
      type: object
      properties:
        branch:
          type: string
        branchFull:
          type: string
        codeBuildId:
          type: integer
          format: int32
        contentBuildId:
          type: integer
          format: int32
        gameBranch:
          type: string
        gameBranchFull:
          type: string
        gameDataBuildId:
          type: integer
          format: int32
        patchline:
          type: string
        patchlineVisibleName:
          type: string
        version:
          type: string
    ClientConfigClientConfig:
      type: object
      properties:
        data:
          type: object
          additionalProperties:
            type: 'map of '
        params:
          $ref: '#/components/schemas/ClientConfigConfigParams'
        updateTime:
          type: integer
          format: int64
    ClientConfigConfigNamespaceUpdate:
      type: object
      properties:
        player:
          type: array
          items:
            type: string
        public:
          type: array
          items:
            type: string
    ClientConfigConfigParams:
      type: object
      properties:
        appName:
          type: string
        namespace:
          type: string
        patchline:
          type: string
        region:
          type: string
        type:
          $ref: '#/components/schemas/ClientConfigConfigType'
        version:
          type: string
    ClientConfigConfigReadinessEnum:
      enum:
        - NotReady
        - Ready
        - Disabled
      type: string
    ClientConfigConfigStatus:
      type: object
      properties:
        readiness:
          $ref: '#/components/schemas/ClientConfigConfigReadinessEnum'
        updateId:
          type: integer
          format: int64
    ClientConfigConfigType:
      enum:
        - public
        - player
      type: string
    ClientConfigDataPaths:
      type: object
      properties:
        configRoot:
          type: string
        dataRoot:
          type: string
        localSettingsPath:
          type: string
        privateSettingsPath:
          type: string
        userDataRoot:
          type: string
    ClientConfigDepInjectorConfigNamespaceUpdate:
      type: object
      properties:
        player:
          type: array
          items:
            type: string
        public:
          type: array
          items:
            type: string
    ClientConfigDepInjectorRiotClientAuthAlias:
      type: object
      properties:
        game_name:
          type: string
        tag_line:
          type: string
    ClientConfigDepInjectorRiotClientAuthAuthorization:
      type: object
      properties:
        accessToken:
          $ref: '#/components/schemas/ClientConfigDepInjectorRsoAuthAccessToken'
        idToken:
          $ref: '#/components/schemas/ClientConfigDepInjectorRsoAuthIdToken'
        puuid:
          type: string
    ClientConfigDepInjectorRiotClientAuthIdClaims:
      type: object
      properties:
        acct:
          $ref: '#/components/schemas/ClientConfigDepInjectorRiotClientAuthAlias'
        acr:
          type: string
        country:
          type: string
        login_country:
          type: string
    ClientConfigDepInjectorRsoAuthAccessToken:
      type: object
      properties:
        clientId:
          type: string
        expiry:
          type: integer
          format: int64
        scopes:
          type: array
          items:
            type: string
        token:
          type: string
    ClientConfigDepInjectorRsoAuthIdToken:
      type: object
      properties:
        clientId:
          type: string
        expiry:
          type: integer
          format: int64
        nonce:
          type: string
        token:
          type: string
    ClientConfigDepInjectorSession:
      type: object
      properties:
        isInternal:
          type: boolean
        patchlineId:
          type: string
        productId:
          type: string
        version:
          type: string
    ClientConfigDepInjectorSessionsUpdate:
      type: object
      properties:
        sessions:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ClientConfigDepInjectorSession'
        updateType:
          $ref: '#/components/schemas/ClientConfigDepInjectorUpdateType'
    ClientConfigDepInjectorTokenV2:
      type: object
      properties:
        authorization:
          $ref: '#/components/schemas/ClientConfigDepInjectorRiotClientAuthAuthorization'
        entitlements:
          type: array
          items:
            type: string
        issuer:
          type: string
        subject:
          type: string
        token:
          type: string
    ClientConfigDepInjectorUpdateType:
      enum:
        - Create
        - Update
        - Delete
      type: string
    ClientConfigRiotClientAuthAlias:
      type: object
      properties:
        game_name:
          type: string
        tag_line:
          type: string
    ClientConfigRiotClientAuthAuthorization:
      type: object
      properties:
        accessToken:
          $ref: '#/components/schemas/ClientConfigRsoAuthAccessToken'
        idToken:
          $ref: '#/components/schemas/ClientConfigRsoAuthIdToken'
        puuid:
          type: string
    ClientConfigRiotClientAuthIdClaims:
      type: object
      properties:
        acct:
          $ref: '#/components/schemas/ClientConfigRiotClientAuthAlias'
        acr:
          type: string
        country:
          type: string
        login_country:
          type: string
    ClientConfigRsoAuthAccessToken:
      type: object
      properties:
        clientId:
          type: string
        expiry:
          type: integer
          format: int64
        scopes:
          type: array
          items:
            type: string
        token:
          type: string
    ClientConfigRsoAuthIdToken:
      type: object
      properties:
        clientId:
          type: string
        expiry:
          type: integer
          format: int64
        nonce:
          type: string
        token:
          type: string
    ClientConfigSession:
      type: object
      properties:
        isInternal:
          type: boolean
        patchlineId:
          type: string
        productId:
          type: string
        version:
          type: string
    ClientConfigSessionsUpdate:
      type: object
      properties:
        sessions:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ClientConfigSession'
        updateType:
          $ref: '#/components/schemas/ClientConfigUpdateType'
    ClientConfigTokenV2:
      type: object
      properties:
        authorization:
          $ref: '#/components/schemas/ClientConfigRiotClientAuthAuthorization'
        entitlements:
          type: array
          items:
            type: string
        issuer:
          type: string
        subject:
          type: string
        token:
          type: string
    ClientConfigUpdateType:
      enum:
        - Create
        - Update
        - Delete
      type: string
    ClientFeatureFlagsConfigurationSource:
      type: object
      properties:
        configuredFeatureFlags:
          type: object
          additionalProperties:
            type: ''
        configuredFeatureFlagsAvailable:
          type: boolean
        featureFlags:
          type: object
          additionalProperties:
            type: ''
        featureFlagsAvailable:
          type: boolean
        installSettings:
          type: object
          additionalProperties:
            type: ''
        installSettingsAvailable:
          type: boolean
        playerCohorts:
          type: object
          additionalProperties:
            type: ''
        playerCohortsAvailable:
          type: boolean
        stickyFlagCohortsActiveAtBoot:
          type: object
          additionalProperties:
            type: string
        stickyFlagCohortsInactiveAtBoot:
          type: array
          items:
            $ref: '#/components/schemas/ClientFeatureFlagsExperimentCohortPair'
    ClientFeatureFlagsExperimentCohortPair:
      type: object
      properties:
        cohort:
          type: string
        experiment:
          type: string
    ClientFeatureFlagsFeatureFlagConfiguration:
      type: object
      properties:
        enable_for_cohorts:
          type: array
          items:
            $ref: '#/components/schemas/ClientFeatureFlagsExperimentCohortPair'
        sticky_at_boot_time:
          type: boolean
    CollectorAvailability:
      enum:
        - Available
        - NotAvailable
      type: string
    CombinedPatchState:
      enum:
        - awaiting_headers
        - unknown
        - updating
        - out_of_date
        - up_to_date
        - not_installed
        - bad_install_path
      type: string
    ConfigurationStatus:
      enum:
        - unknown
        - has_configuration
        - unsupported_region
        - unsupported_shard
        - unsupported_os
        - unsupported_32_bit_os
      type: string
    ConnectionInfo:
      type: object
      properties:
        pid:
          type: integer
          format: int32
        port:
          type: integer
          format: int16
        token:
          type: string
    CookieJarCookie:
      type: object
      properties:
        domain:
          type: string
        expires:
          type: integer
          format: int64
        httponly:
          type: boolean
        name:
          type: string
        path:
          type: string
        secure:
          type: boolean
        url:
          type: string
        value:
          type: string
    CreateShortcutsRequest:
      type: object
      properties:
        paths:
          type: array
          items:
            type: string
    DataPaths:
      type: object
      properties:
        configRoot:
          type: string
        dataRoot:
          type: string
        localSettingsPath:
          type: string
        privateSettingsPath:
          type: string
        userDataRoot:
          type: string
    DataStorePartnerProduct:
      type: object
      properties:
        arguments:
          type: array
          items:
            type: string
        executable:
          type: string
        id:
          type: string
        relative_path:
          type: string
    DisambiguationAccessToken:
      type: object
      properties:
        expiry:
          type: integer
          format: int64
        token:
          type: string
    DisambiguationConfigReadinessEnum:
      enum:
        - NotReady
        - Ready
      type: string
    DisambiguationConfigStatus:
      type: object
      properties:
        readiness:
          $ref: '#/components/schemas/DisambiguationConfigReadinessEnum'
    DisambiguationIdToken:
      type: object
      properties:
        expiry:
          type: integer
          format: int64
        token:
          type: string
    DisambiguationRegionLocale:
      type: object
      properties:
        locale:
          type: string
        region:
          type: string
        webLanguage:
          type: string
        webRegion:
          type: string
    DownloadProgress:
      type: object
      properties:
        bytes_to_download:
          type: integer
          format: int64
        downloaded_bytes:
          type: integer
          format: int64
    EligibilityCheckResponse:
      type: object
      properties:
        canSelectRegion:
          type: boolean
        multipleRegionsAllowed:
          type: boolean
        selectedRegions:
          type: array
          items:
            type: string
    EntitlementsRiotClientAuthAlias:
      type: object
      properties:
        game_name:
          type: string
        tag_line:
          type: string
    EntitlementsRiotClientAuthAuthorization:
      type: object
      properties:
        accessToken:
          $ref: '#/components/schemas/EntitlementsRsoAuthAccessToken'
        idToken:
          $ref: '#/components/schemas/EntitlementsRsoAuthIdToken'
        puuid:
          type: string
    EntitlementsRiotClientAuthIdClaims:
      type: object
      properties:
        acct:
          $ref: '#/components/schemas/EntitlementsRiotClientAuthAlias'
        acr:
          type: string
        country:
          type: string
        login_country:
          type: string
    EntitlementsRsoAuthAccessToken:
      type: object
      properties:
        clientId:
          type: string
        expiry:
          type: integer
          format: int64
        scopes:
          type: array
          items:
            type: string
        token:
          type: string
    EntitlementsRsoAuthIdToken:
      type: object
      properties:
        clientId:
          type: string
        expiry:
          type: integer
          format: int64
        nonce:
          type: string
        token:
          type: string
    EntitlementsToken:
      type: object
      properties:
        accessToken:
          type: string
        entitlements:
          type: array
          items:
            type: string
        issuer:
          type: string
        subject:
          type: string
        token:
          type: string
    EntitlementsTokenV2:
      type: object
      properties:
        authorization:
          $ref: '#/components/schemas/EntitlementsRiotClientAuthAuthorization'
        entitlements:
          type: array
          items:
            type: string
        issuer:
          type: string
        subject:
          type: string
        token:
          type: string
    EulaAcceptance:
      enum:
        - WaitingForAllServiceData
        - AcceptanceRequired
        - Accepted
      type: string
    EulaAgreement:
      type: object
      properties:
        acceptance:
          $ref: '#/components/schemas/EulaAcceptance'
        agreementURI:
          type: string
        agreementVersion:
          type: string
        lastAcceptedTime:
          type: integer
          format: int64
        lastAcceptedVersion:
          type: string
        playerPreferencesKey:
          type: string
    EulaAuthorization:
      type: object
      properties:
        currentAccountId:
          type: integer
          format: int64
        currentPlatformId:
          type: string
        subject:
          type: string
    EulaExternalLegalLinks:
      type: object
      properties:
        privacyNoticeUrl:
          type: string
        termsOfServiceUrl:
          type: string
    EulaIdToken:
      type: object
      properties:
        token:
          type: string
    EulaPlayerPreferencesResource:
      type: object
      properties:
        data:
          type: object
          additionalProperties:
            type: ''
        type:
          type: string
    EulaPrivacyPolicy:
      type: object
      properties:
        policyContent:
          type: string
        policyURI:
          type: string
        policyVersion:
          type: string
    EulaProductContext:
      type: object
      properties:
        patchlineId:
          type: string
        productId:
          type: string
    EulaRegionLocale:
      type: object
      properties:
        locale:
          type: string
        region:
          type: string
    EulaTOSEventTypeForAP:
      enum:
        - failedIntoTemporaryAcceptance
        - acceptanceRequired
        - accepted
        - rejected
        - rejectedWithoutReading
      type: string
    ExtendedEventData:
      type: object
      properties:
        additionalFields:
          type: object
        data:
          type: object
    FirstPartyFulfillmentFirstPartyFulfillmentFulfillmentReason:
      enum:
        - gameLaunched
        - gameReturnedToForeground
        - purchaseCompleted
        - other
      type: string
    FirstPartyFulfillmentFirstPartyFulfillmentFulfillmentRequest:
      type: object
      properties:
        firstPartyAuthToken:
          type: string
        fulfillmentId:
          type: string
        fulfillmentReason:
          $ref: '#/components/schemas/FirstPartyFulfillmentFirstPartyFulfillmentFulfillmentReason'
    FoundationEventType:
      enum:
        - Create
        - Update
        - Delete
      type: string
    FriendsFriendsV1AddFriendData:
      type: object
      properties:
        friendDisplayName:
          $ref: '#/components/schemas/FriendsFriendsV1DisplayName'
        myDisplayName:
          $ref: '#/components/schemas/FriendsFriendsV1DisplayName'
        platformId:
          type: integer
          format: int64
        riotId:
          type: string
    FriendsFriendsV1BlockInfoList:
      type: object
      properties:
        blockedUsers:
          type: array
          items:
            type: string
    FriendsFriendsV1BlockListOptions:
      type: object
      properties:
        maxBlockCount:
          type: integer
          format: int32
        offset:
          type: integer
          format: int32
    FriendsFriendsV1DisplayName:
      type: object
      properties:
        language:
          type: string
        name:
          type: string
    FriendsFriendsV1FriendsListFilter:
      type: object
      properties:
        appGroupPlayedOnly:
          type: integer
          format: int64
        favoriteOnly:
          type: boolean
        presence:
          $ref: '#/components/schemas/FriendsFriendsV1PresenceFilter'
        sameAppPlayedOnly:
          type: boolean
        sameAppPresenceOnly:
          type: boolean
    FriendsFriendsV1FriendsListOptions:
      type: object
      properties:
        filter:
          $ref: '#/components/schemas/FriendsFriendsV1FriendsListFilter'
        maxFriends:
          type: integer
          format: int32
        offset:
          type: integer
          format: int32
    FriendsFriendsV1PlatformId:
      type: object
      properties:
        id:
          type: integer
          format: int64
    FriendsFriendsV1Presence:
      enum:
        - unknown
        - offline
        - online
      type: string
    FriendsFriendsV1PresenceFilter:
      enum:
        - none
        - onlineOnly
      type: string
    FriendsFriendsV1ProfileInfo:
      type: object
      properties:
        display_name:
          type: string
        image_urls:
          type: object
          additionalProperties:
            type: string
        platform_id:
          type: string
        presence:
          $ref: '#/components/schemas/FriendsFriendsV1Presence'
    FriendsFriendsV1ProfileInfoList:
      type: object
      properties:
        users:
          type: array
          items:
            $ref: '#/components/schemas/FriendsFriendsV1ProfileInfo'
    FriendsFriendsV1ProfilesRequest:
      type: object
      properties:
        ids:
          type: array
          items:
            $ref: '#/components/schemas/FriendsFriendsV1PlatformId'
    FriendsFriendsV1PromoteBlockData:
      type: object
      properties:
        platformIdsToBlock:
          type: array
          items:
            type: string
    FriendsFriendsV1ShowProfileData:
      type: object
      properties:
        myDisplayName:
          $ref: '#/components/schemas/FriendsFriendsV1DisplayName'
        platformId:
          type: integer
          format: int64
        targetDisplayName:
          $ref: '#/components/schemas/FriendsFriendsV1DisplayName'
    FriendsFrindsV1BlockInfoList:
      type: object
      properties:
        users:
          type: array
          items:
            type: string
    GameSessionAccessToken:
      type: object
      properties:
        expiry:
          type: integer
          format: int64
        scopes:
          type: array
          items:
            type: string
        token:
          type: string
    GameSessionAuthenticationTypeEnum:
      enum:
        - SSOAuth
        - RiotAuth
        - None
      type: string
    GameSessionAuthError:
      type: object
      properties:
        error:
          type: string
        errorDescription:
          type: string
    GameSessionAuthHint:
      type: object
      properties:
        context:
          type: object
          additionalProperties:
            type: ''
        required:
          type: boolean
        type:
          $ref: '#/components/schemas/GameSessionAuthHintType'
    GameSessionAuthHintType:
      enum:
        - email_verification
        - password_reset
        - parental_consent
        - ambiguous_username
        - alias_change_required
      type: string
    GameSessionAuthorization:
      type: object
      properties:
        currentAccountId:
          type: integer
          format: int64
        currentPlatformId:
          type: string
        subject:
          type: string
    GameSessionAuthorizationCode:
      type: object
      properties:
        code:
          type: string
        code_verifier:
          type: string
    GameSessionAuthorizationKey:
      type: object
      properties:
        key:
          type: string
    GameSessionAuthorizationKeyRequest:
      type: object
      properties:
        client_id:
          type: string
        prompt:
          type: string
        scopes:
          type: array
          items:
            type: string
    GameSessionAuthorizationRequest:
      type: object
      properties:
        authenticationType:
          $ref: '#/components/schemas/GameSessionAuthenticationTypeEnum'
        claims:
          type: array
          items:
            type: string
        clientId:
          type: string
        keepAlive:
          type: boolean
        prompt:
          type: string
        scope:
          type: array
          items:
            type: string
        trustLevels:
          type: array
          items:
            $ref: '#/components/schemas/GameSessionRSOAuthorizationTrustLevel'
    GameSessionAuthorizationResponse:
      type: object
      properties:
        authorization:
          $ref: '#/components/schemas/GameSessionImplicitAuthorization'
        country:
          type: string
        type:
          $ref: '#/components/schemas/GameSessionAuthorizationResponseType'
    GameSessionAuthorizationResponseType:
      enum:
        - needs_authentication
        - needs_reauthentication
        - authorized
      type: string
    GameSessionAuthorizationUpdateRequest:
      type: object
      properties:
        claims:
          type: array
          items:
            type: string
        prompt:
          type: string
        scope:
          type: array
          items:
            type: string
        trustLevels:
          type: array
          items:
            $ref: '#/components/schemas/GameSessionRSOAuthorizationTrustLevel'
    GameSessionClientConfigCluster:
      type: object
      properties:
        bypass:
          type: string
        queue:
          type: string
        session:
          type: string
    GameSessionConfigV3AMRValuesSupported:
      type: object
      properties:
        values:
          type: array
          items:
            $ref: '#/components/schemas/GameSessionLoginAMR'
    GameSessionConfigV3OpenIdConfiguration:
      type: object
      properties:
        config:
          type: object
          additionalProperties:
            type: ''
    GameSessionConfigV3PartnerAuthConfig:
      type: object
      properties:
        config:
          type: object
          additionalProperties:
            type: ''
    GameSessionConfigV3ReadyState:
      type: object
      properties:
        ready:
          type: boolean
    GameSessionDeviceId:
      type: object
      properties:
        collectorServerName:
          type: string
        frameUrl:
          type: string
        installId:
          type: string
        merchantId:
          type: string
        sessionId:
          type: string
    GameSessionEntitlementsToken:
      type: object
      properties:
        entitlements:
          type: array
          items:
            type: string
        expiry:
          type: integer
          format: int64
        token:
          type: string
    GameSessionGameCenterAuthCredentials:
      type: object
      properties:
        bundleId:
          type: string
        playerId:
          type: string
        publicKeyUrl:
          type: string
        salt:
          type: string
        signature:
          type: string
        timestamp:
          type: string
    GameSessionGameSessionServiceCreateSessionRequestBody:
      type: object
      properties:
        claims:
          type: object
          additionalProperties:
            type: ''
        product:
          type: string
        puuid:
          type: string
        region:
          type: string
    GameSessionGameSessionV1ClusterList:
      type: object
      properties:
        clusters:
          type: array
          items:
            type: string
    GameSessionGameSessionV1GameSessionId:
      type: object
      properties:
        id:
          type: string
    GameSessionGameSessionV1GameSessionMessage:
      enum:
        - no_error
        - player_banned
        - account_restricted
        - account_locked
        - queue_busy
        - bad_entity_parameter
        - bad_authorization_param
        - service_create_session_failure
        - service_refresh_session_failure
        - service_delete_session_failure
        - internal
        - unknown
      type: string
    GameSessionGameSessionV1GameSessionRequest:
      type: object
      properties:
        claims:
          type: object
          additionalProperties:
            type: ''
        clientName:
          type: string
        cluster:
          type: string
        region:
          type: string
        rsoClientId:
          type: string
        shouldAttemptQueueBypass:
          type: boolean
        shouldFetchSessionToken:
          type: boolean
    GameSessionGameSessionV1GameSessionResponse:
      type: object
      properties:
        bypassQueueClaims:
          type: object
          additionalProperties:
            type: ''
        bypassQueueToken:
          type: string
        errorId:
          $ref: '#/components/schemas/GameSessionGameSessionV1GameSessionMessage'
        errorMessage:
          type: string
        id:
          type: string
        loginQueueClaims:
          type: object
          additionalProperties:
            type: ''
        loginQueueToken:
          type: string
        productId:
          type: string
        queueIsOpen:
          type: boolean
        queuePosition:
          type: integer
          format: int64
        sessionClaims:
          type: object
          additionalProperties:
            type: ''
        sessionToken:
          type: string
        state:
          $ref: '#/components/schemas/GameSessionGameSessionV1GameSessionState'
        waitTime:
          type: integer
          format: int64
    GameSessionGameSessionV1GameSessionState:
      enum:
        - initializing
        - fetching_bypass
        - joining_queue
        - in_queue
        - login_created
        - creating_session
        - connected
        - deleting_session
        - failed
      type: string
    GameSessionGarenaPartnerCredentials:
      type: object
      properties:
        token:
          type: string
    GameSessionGoogleAuthCredentials:
      type: object
      properties:
        idToken:
          type: string
    GameSessionHttpCookie:
      type: object
      properties:
        domain:
          type: string
        hostOnly:
          type: boolean
        httpOnly:
          type: boolean
        name:
          type: string
        path:
          type: string
        persistent:
          type: boolean
        secureOnly:
          type: boolean
        value:
          type: string
    GameSessionHttpCookieJar:
      type: object
      properties:
        cookies:
          type: array
          items:
            $ref: '#/components/schemas/GameSessionHttpCookie'
    GameSessionIdToken:
      type: object
      properties:
        expiry:
          type: integer
          format: int64
        token:
          type: string
    GameSessionImplicitAuthorization:
      type: object
      properties:
        accessToken:
          $ref: '#/components/schemas/GameSessionAccessToken'
        idToken:
          $ref: '#/components/schemas/GameSessionIdToken'
    GameSessionLoginAMR:
      enum:
        - cookie
        - password
        - captcha
        - mfa
        - signup
        - google_auth
        - game_center
        - facebook
        - apple
        - msdk_qq
        - msdk_wechat
        - wegame
        - tencent
        - garena
      type: string
    GameSessionLoginQueueServiceLoginQueueRequest:
      type: object
      properties:
        token:
          type: string
        type:
          $ref: '#/components/schemas/GameSessionLoginQueueServiceLoginQueueTokenType'
    GameSessionLoginQueueServiceLoginQueueRequestBody:
      type: object
      properties:
        bypassToken:
          type: string
        clientName:
          type: string
        entitlements:
          type: string
        queueToken:
          type: string
        userinfo:
          type: string
    GameSessionLoginQueueServiceLoginQueueTokenType:
      enum:
        - LOGIN
        - QUEUE
        - UNKNOWN
      type: string
    GameSessionLoginQueueServiceQueueToken:
      type: object
      properties:
        exp:
          type: integer
          format: int64
        full:
          type: boolean
        iat:
          type: integer
          format: int64
        queuePos:
          type: integer
          format: int32
        retryAfter:
          type: integer
          format: int32
        waitTime:
          type: integer
          format: int32
    GameSessionLogoutReason:
      enum:
        - generic
        - tokens_expired
      type: string
    GameSessionMSDKQQPartnerCredentials:
      type: object
      properties:
        appId:
          type: string
        msdkKey:
          type: string
        openId:
          type: string
        openKey:
          type: string
    GameSessionMSDKWeChatPartnerCredentials:
      type: object
      properties:
        accessToken:
          type: string
        appId:
          type: string
        msdkKey:
          type: string
        openId:
          type: string
    GameSessionMultifactorDetails:
      type: object
      properties:
        email:
          type: string
        method:
          $ref: '#/components/schemas/GameSessionMultifactorMethod'
        methods:
          type: array
          items:
            type: string
        mfaVersion:
          type: string
        multiFactorCodeLength:
          type: integer
          format: int64
    GameSessionMultifactorMethod:
      enum:
        - method_not_set
        - email
        - authenticator
        - sms
        - push
      type: string
    GameSessionPartnerCredentials:
      type: object
      properties:
        game_center:
          $ref: '#/components/schemas/GameSessionGameCenterAuthCredentials'
        garena:
          $ref: '#/components/schemas/GameSessionGarenaPartnerCredentials'
        google_auth:
          $ref: '#/components/schemas/GameSessionGoogleAuthCredentials'
        msdk_qq:
          $ref: '#/components/schemas/GameSessionMSDKQQPartnerCredentials'
        msdk_wechat:
          $ref: '#/components/schemas/GameSessionMSDKWeChatPartnerCredentials'
        tencent:
          $ref: '#/components/schemas/GameSessionTencentPartnerCredentials'
        wegame:
          $ref: '#/components/schemas/GameSessionWeGamePartnerCredentials'
    GameSessionPluginCallerId_MockCallerId:
      type: object
      properties:
        patchlineId:
          type: string
        productId:
          type: string
    GameSessionPluginCallerId_ProductSession:
      type: object
      properties:
        patchlineFullName:
          type: string
        patchlineId:
          type: string
        productId:
          type: string
        version:
          type: string
    GameSessionPublicClientConfig:
      type: object
      properties:
        clientId:
          type: string
        url:
          type: string
    GameSessionRSOAuthorizationSubmission:
      type: object
      properties:
        acr_values:
          type: string
        claims:
          type: string
        client_id:
          type: string
        code_challenge:
          type: string
        code_challenge_method:
          type: string
        nonce:
          type: string
        redirect_uri:
          type: string
        response_type:
          type: string
        scope:
          type: string
    GameSessionRSOAuthorizationTrustLevel:
      enum:
        - always_trusted
        - trusted_device
        - always_verify
      type: string
    GameSessionRSOCredentialSubmission:
      type: object
      properties:
        language:
          type: string
        password:
          type: string
        region:
          type: string
        remember:
          type: boolean
        type:
          type: string
        username:
          type: string
    GameSessionRSOJWTConfig:
      type: object
      properties:
        token:
          type: string
    GameSessionRSOOTPSubmission:
      type: object
      properties:
        code:
          type: string
        rememberDevice:
          type: boolean
        retry:
          type: boolean
        type:
          type: string
    GameSessionRSOPartnerCredentialsSubmission:
      type: object
      properties:
        credentials:
          $ref: '#/components/schemas/GameSessionPartnerCredentials'
        locale:
          type: string
        remember:
          type: boolean
        type:
          type: string
    GameSessionRSOPlayerCredentials:
      type: object
      properties:
        password:
          type: string
        platformId:
          type: string
        username:
          type: string
    GameSessionRSOReauthenticationSubmission:
      type: object
      properties:
        password:
          type: string
        type:
          type: string
    GameSessionSessionCredentials:
      type: object
      properties:
        password:
          type: string
        persistLogin:
          type: boolean
        region:
          type: string
        username:
          type: string
    GameSessionSessionLoginToken:
      type: object
      properties:
        authentication_type:
          $ref: '#/components/schemas/GameSessionAuthenticationTypeEnum'
        code_verifier:
          type: string
        login_token:
          type: string
        persist_login:
          type: boolean
    GameSessionSessionMultifactor:
      type: object
      properties:
        code:
          type: string
        retry:
          type: boolean
        trustDevice:
          type: boolean
    GameSessionSessionReauthentication:
      type: object
      properties:
        password:
          type: string
    GameSessionSessionResponse:
      type: object
      properties:
        authenticationType:
          $ref: '#/components/schemas/GameSessionAuthenticationTypeEnum'
        country:
          type: string
        error:
          type: string
        multifactor:
          $ref: '#/components/schemas/GameSessionMultifactorDetails'
        persistLogin:
          type: boolean
        securityProfile:
          type: string
        type:
          $ref: '#/components/schemas/GameSessionSessionResponseType'
    GameSessionSessionResponseType:
      enum:
        - unknown_authentication_response
        - needs_credentials
        - needs_password
        - needs_multifactor_verification
        - authenticated
        - error
      type: string
    GameSessionSessionSignup:
      type: object
      properties:
        locale:
          type: string
        token:
          type: string
    GameSessionStatusMessage:
      type: object
      properties:
        code:
          type: string
        isError:
          type: boolean
        message:
          type: string
    GameSessionTencentPartnerCredentials:
      type: object
      properties:
        accountType:
          type: string
        appId:
          type: string
        cltkey:
          type: string
        cltkeyLength:
          type: string
        gameSignatureLength:
          type: string
        szGameSignature:
          type: string
        uId:
          type: string
    GameSessionUserInfo:
      type: object
      properties:
        userInfo:
          type: string
    GameSessionWeGamePartnerCredentials:
      type: object
      properties:
        railGameId:
          type: string
        railId:
          type: string
        railSessionTicket:
          type: string
    GarenaAuthGarenaPartnerCredentials:
      type: object
      properties:
        token:
          type: string
    GarenaAuthPartnerCredentials:
      type: object
      properties:
        garena:
          $ref: '#/components/schemas/GarenaAuthGarenaPartnerCredentials'
    GarenaAuthStatusMessage:
      type: object
      properties:
        code:
          type: string
        isError:
          type: boolean
        message:
          type: string
    GaWarningApiAuthorization:
      type: object
      properties:
        puuid:
          type: string
    GaWarningGapsMailboxUpdated:
      type: object
      properties:
        product:
          type: string
    GaWarningLocalizedWarningMessage:
      type: object
      properties:
        acknowledgeText:
          type: string
        category:
          type: string
        locale:
          type: string
        message:
          type: string
        seeMoreLabel:
          type: string
        seeMoreUrl:
          type: string
        title:
          type: string
    GaWarningMail:
      type: object
      properties:
        createdAt:
          type: integer
          format: int64
        mailId:
          type: string
        mailType:
          $ref: '#/components/schemas/GaWarningMailType'
        message:
          type: string
        state:
          $ref: '#/components/schemas/GaWarningMailState'
    GaWarningMailboxStatusUpdated:
      type: object
      properties:
        lastUpdateReceived:
          type: integer
          format: int64
    GaWarningMailState:
      enum:
        - NEW
        - READ
        - ACKNOWLEDGED
      type: string
    GaWarningMailType:
      enum:
        - STANDARD
        - ACK_REQUIRED
      type: string
    GaWarningPluginCallerId_MockCallerId:
      type: object
      properties:
        patchlineId:
          type: string
        productId:
          type: string
    GaWarningPluginCallerId_ProductSession:
      type: object
      properties:
        patchlineFullName:
          type: string
        patchlineId:
          type: string
        productId:
          type: string
        version:
          type: string
    GaWarningRegionLocale:
      type: object
      properties:
        locale:
          type: string
        region:
          type: string
    GaWarningRequestMailParameters:
      type: object
      properties:
        count:
          type: integer
          format: int64
        includedStates:
          type: array
          items:
            $ref: '#/components/schemas/GaWarningMailState'
        startIndex:
          type: integer
          format: int64
        tags:
          type: array
          items:
            type: string
    GaWarningUpdateMailStateRequest:
      type: object
      properties:
        mailId:
          type: string
        state:
          $ref: '#/components/schemas/GaWarningMailState'
    GaWarningWarning:
      type: object
      properties:
        category:
          type: string
        messageId:
          type: string
        product:
          type: string
    GaWarningWarningAcknowledgementEvent:
      type: object
      properties:
        product:
          type: string
        puuid:
          type: string
        success:
          type: boolean
        transgressionCategory:
          type: string
        warningId:
          type: string
    GaWarningWarningDto:
      type: object
      properties:
        category:
          type: string
        product:
          type: string
    GaWarningWarningFoundUnacknowledgedEvent:
      type: object
      properties:
        product:
          type: string
        puuid:
          type: string
        success:
          type: boolean
        transgressionCategory:
          type: string
        warningId:
          type: string
    GaWarningWarningResponse:
      type: object
      properties:
        gaWarningMessages:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/GaWarningLocalizedWarningMessage'
    HomeBaseCountry:
      type: object
      properties:
        cached_home_base_country:
          type: string
        home_base_country:
          type: string
    InfoRadiatorAccessToken:
      type: object
      properties:
        token:
          type: string
    InfoRadiatorAuthenticationTypeEnum:
      enum:
        - SSOAuth
        - RiotAuth
        - None
      type: string
    InfoRadiatorAuthorization:
      type: object
      properties:
        currentPlatformId:
          type: string
        subject:
          type: string
    InfoRadiatorBuildInfo:
      type: object
      properties:
        patchline:
          type: string
        version:
          type: string
    InfoRadiatorHomeBaseCountry:
      type: object
      properties:
        cached_home_base_country:
          type: string
        home_base_country:
          type: string
    InfoRadiatorLoginCountry:
      type: object
      properties:
        login_country:
          type: string
    InfoRadiatorPatchlineMetadata:
      type: object
      properties:
        config_type:
          type: string
        id:
          type: string
        product_id:
          type: string
    InfoRadiatorRegionLocale:
      type: object
      properties:
        locale:
          type: string
        region:
          type: string
    InfoRadiatorSession:
      type: object
      properties:
        patchlineId:
          type: string
        productId:
          type: string
    InfoRadiatorSessionResponse:
      type: object
      properties:
        authenticationType:
          $ref: '#/components/schemas/InfoRadiatorAuthenticationTypeEnum'
        error:
          type: string
        type:
          type: string
    InfoRadiatorVoiceChatHeartbeatMetrics:
      type: object
      properties:
        productsUsingVoice:
          type: array
          items:
            $ref: '#/components/schemas/InfoRadiatorVoiceChatHeartbeatMetrics_PerProductData'
        providerData:
          type: array
          items:
            $ref: '#/components/schemas/InfoRadiatorVoiceChatHeartbeatMetrics_PerProviderData'
    InfoRadiatorVoiceChatHeartbeatMetrics_PerProductData:
      type: object
      properties:
        channelsInUse:
          type: integer
          format: int32
        patchlineId:
          type: string
        productId:
          type: string
        providerName:
          type: string
        target:
          type: string
    InfoRadiatorVoiceChatHeartbeatMetrics_PerProviderData:
      type: object
      properties:
        isLoggedIn:
          type: boolean
        providerName:
          type: string
        target:
          type: string
    InstalledDependency:
      type: object
      properties:
        arguments:
          type: array
          items:
            type: string
        hash:
          type: string
        id:
          type: string
    InstallProgress:
      type: object
    JwtAuthenticatorJWTVerifyResource:
      type: object
      properties:
        key:
          type: object
          additionalProperties:
            type: string
        token:
          type: string
    KeepGameUpToDateResult:
      type: object
      properties:
        dialogDismissed:
          type: boolean
        doNotShowDialogAgain:
          type: boolean
        keepUpToDate:
          type: boolean
        patchlineId:
          type: string
        productId:
          type: string
    KrAccountAccessToken:
      type: object
      properties:
        clientId:
          type: string
        expiry:
          type: integer
          format: int64
        scopes:
          type: array
          items:
            type: string
        token:
          type: string
    KrAccountAccountPromotionSession:
      type: object
      properties:
        url:
          type: string
    KrAccountKrAccountApiSession:
      type: object
      properties:
        sessionToken:
          type: string
    KrAccountKrAccountPluginConfig:
      type: object
      properties:
        accessToken:
          type: string
        krAccountPromotionUrl:
          type: string
        krAccountServiceUrl:
          type: string
    LaunchConfiguration:
      type: object
      properties:
        executable:
          type: string
        workingDirectory:
          type: string
    LeagueRegionElectionResource:
      type: object
      properties:
        availableRegions:
          type: array
          items:
            type: string
        canSelectRegion:
          type: boolean
        multipleRegionsAllowed:
          type: boolean
        regionAssignmentResponseMessage:
          type: string
        selectedRegions:
          type: array
          items:
            type: string
    LifecycleData:
      type: object
      properties:
        data:
          type: object
          additionalProperties:
            type: ''
        lifecycleEventType:
          $ref: '#/components/schemas/LifecycleEventType'
    LifecycleEventType:
      enum:
        - OnCreate
        - OnStart
        - OnRestart
        - OnResume
        - OnPause
        - OnStop
        - OnDestroy
        - OnActivityResult
        - OnNewIntent
        - DidFinishLaunchingWithOptions
        - OpenURL
      type: string
    LifecycleStateAppRepairBinding:
      type: object
      properties:
        state:
          $ref: '#/components/schemas/LifecycleStateAppRepairBindingState'
        subscribers:
          type: object
          additionalProperties:
            type: integer
            format: int32
    LifecycleStateAppRepairBindingState:
      type: object
      properties:
        patchlineId:
          type: string
        productId:
          type: string
        request:
          $ref: '#/components/schemas/AppRepairApplyRequest'
    LifecycleStateHomeBaseCountry:
      type: object
      properties:
        state:
          $ref: '#/components/schemas/HomeBaseCountry'
        subscribers:
          type: object
          additionalProperties:
            type: integer
            format: int32
    LoginPhase:
      enum:
        - unknown
        - pending
        - not_logged_in
        - logged_in
      type: string
    LoginStatus:
      type: object
      properties:
        phase:
          $ref: '#/components/schemas/LoginPhase'
    LoginStatusPhase:
      enum:
        - unknown
        - pending
        - not_logged_in
        - logged_in
      type: string
    LogSeverityLevels:
      enum:
        - Okay
        - Warning
        - Error
        - Always
      type: string
    LolInfo:
      type: object
      properties:
        cpid:
          type: string
        ploc:
          type: string
    LoyaltyV2ExternalProcess:
      type: object
      properties:
        patchlineId:
          type: string
        productId:
          type: string
    LoyaltyV2LoyaltyConfig:
      type: object
      properties:
        backendUrl:
          type: string
        enabled:
          type: boolean
        gameShard:
          type: string
        heartbeatInterval:
          type: number
          format: double
        webRequestInitialRetryDelayInMilliSec:
          type: integer
          format: int64
        webRequestMaxRetryDelayInMilliSec:
          type: integer
          format: int64
        webRequestRetryCount:
          type: integer
          format: int64
        webRequestTimeoutInSec:
          type: integer
          format: int32
    LoyaltyV2PCBangInfo:
      type: object
      properties:
        pcbId:
          type: integer
          format: int64
    LoyaltyV2Session:
      type: object
      properties:
        product:
          type: string
        region:
          type: string
        serviceState:
          type: string
        sessionId:
          type: string
    MailboxAccessToken:
      type: object
      properties:
        clientId:
          type: string
        expiry:
          type: integer
          format: int64
        scopes:
          type: array
          items:
            type: string
        token:
          type: string
    MailboxAffinityV1AffinityInput:
      type: object
      properties:
        hint:
          type: string
        service:
          type: string
    MailboxAffinityV2AffinityProductInput:
      type: object
      properties:
        product:
          type: string
    MailboxAlias:
      type: object
      properties:
        game_name:
          type: string
        tag_line:
          type: string
    MailboxApiAlias:
      type: object
      properties:
        game_name:
          type: string
        tag_line:
          type: string
    MailboxApiAuthorization:
      type: object
      properties:
        accessToken:
          $ref: '#/components/schemas/MailboxRsoAuthAccessToken'
        authenticationType:
          type: string
        claims:
          $ref: '#/components/schemas/MailboxApiIdClaims'
        idToken:
          $ref: '#/components/schemas/MailboxRsoAuthIdToken'
        puuid:
          type: string
    MailboxApiClientDetails:
      type: object
      properties:
        clientId:
          type: string
    MailboxApiHomeBaseCountry:
      type: object
      properties:
        cached_home_base_country:
          type: string
        home_base_country:
          type: string
    MailboxApiIdClaims:
      type: object
      properties:
        acct:
          $ref: '#/components/schemas/MailboxApiAlias'
        acr:
          type: string
        country:
          type: string
        login_country:
          type: string
    MailboxApiLoginCountry:
      type: object
      properties:
        login_country:
          type: string
    MailboxApiUserInfo:
      type: object
      properties:
        acct:
          $ref: '#/components/schemas/MailboxApiAlias'
        country:
          type: string
        email_verified:
          type: boolean
        lol:
          $ref: '#/components/schemas/MailboxApiUserInfoLol'
        lol_account:
          $ref: '#/components/schemas/MailboxApiUserInfoSummoner'
        phone_number_verified:
          type: boolean
        player_plocale:
          type: string
        preferred_username:
          type: string
    MailboxApiUserInfoLol:
      type: object
      properties:
        cpid:
          type: string
        ploc:
          type: string
    MailboxApiUserInfoSummoner:
      type: object
      properties:
        summoner_name:
          type: string
    MailboxAuthorization:
      type: object
      properties:
        accessToken:
          $ref: '#/components/schemas/MailboxAccessToken'
        claims:
          $ref: '#/components/schemas/MailboxIdClaims'
        idToken:
          $ref: '#/components/schemas/MailboxIdToken'
        puuid:
          type: string
    MailboxGapsMailboxUpdated:
      type: object
      properties:
        product:
          type: string
    MailboxIdClaims:
      type: object
      properties:
        acct:
          $ref: '#/components/schemas/MailboxAlias'
        acr:
          type: string
        country:
          type: string
        login_country:
          type: string
    MailboxIdToken:
      type: object
      properties:
        clientId:
          type: string
        expiry:
          type: integer
          format: int64
        nonce:
          type: string
        token:
          type: string
    MailboxMail:
      type: object
      properties:
        createdAt:
          type: integer
          format: int64
        mailId:
          type: string
        mailType:
          $ref: '#/components/schemas/MailboxMailType'
        message:
          type: string
        state:
          $ref: '#/components/schemas/MailboxMailState'
    MailboxMailboxStatusUpdated:
      type: object
      properties:
        lastUpdateReceived:
          type: integer
          format: int64
    MailboxMailState:
      enum:
        - NEW
        - READ
        - ACKNOWLEDGED
      type: string
    MailboxMailType:
      enum:
        - STANDARD
        - ACK_REQUIRED
      type: string
    MailboxPlayerAffinityCachedProductAffinity:
      type: object
      properties:
        affinities:
          type: object
          additionalProperties:
            type: string
        product:
          type: string
    MailboxPlayerAffinityCachedServiceAffinity:
      type: object
      properties:
        affinity:
          type: string
        service:
          type: string
    MailboxPlayerAffinityDataSource:
      enum:
        - localCache
        - serverAuthoritative
      type: string
    MailboxPlayerAffinityPluginConfig:
      type: object
      properties:
        accessToken:
          type: string
        playerAffinityServiceUrl:
          type: string
    MailboxPlayerAffinityPluginStatus:
      type: object
      properties:
        ready:
          type: boolean
    MailboxPlayerAffinityProductToken:
      type: object
      properties:
        affinities:
          type: object
          additionalProperties:
            type: string
        expiry:
          type: integer
          format: int64
        issuedAt:
          type: integer
          format: int64
        product:
          type: string
        puuid:
          type: string
        token:
          type: string
    MailboxPlayerAffinityServiceToken:
      type: object
      properties:
        affinity:
          type: string
        expiry:
          type: integer
          format: int64
        issuedAt:
          type: integer
          format: int64
        puuid:
          type: string
        service:
          type: string
        token:
          type: string
    MailboxPlayerAffinityShardInfo:
      type: object
      properties:
        product:
          type: string
        shard:
          type: string
        zone:
          type: string
    MailboxPlayerAffinityToken:
      type: object
      properties:
        affinity:
          type: string
        expiry:
          type: integer
          format: int64
        issuedAt:
          type: integer
          format: int64
        puuid:
          type: string
        service:
          type: string
        source:
          $ref: '#/components/schemas/MailboxPlayerAffinityDataSource'
        token:
          type: string
    MailboxPlayerAffinityTokenProduct:
      type: object
      properties:
        affinities:
          type: object
          additionalProperties:
            type: string
        expiry:
          type: integer
          format: int64
        issuedAt:
          type: integer
          format: int64
        product:
          type: string
        puuid:
          type: string
        source:
          $ref: '#/components/schemas/MailboxPlayerAffinityDataSource'
        token:
          type: string
    MailboxPluginCallerId_MockCallerId:
      type: object
      properties:
        patchlineId:
          type: string
        productId:
          type: string
    MailboxPluginCallerId_ProductSession:
      type: object
      properties:
        patchlineFullName:
          type: string
        patchlineId:
          type: string
        productId:
          type: string
        version:
          type: string
    MailboxProductAffinityInput:
      type: object
      properties:
        product:
          type: string
    MailboxRequestMailParameters:
      type: object
      properties:
        count:
          type: integer
          format: int64
        includedStates:
          type: array
          items:
            $ref: '#/components/schemas/MailboxMailState'
        startIndex:
          type: integer
          format: int64
        tags:
          type: array
          items:
            type: string
    MailboxRsoAuthAccessToken:
      type: object
      properties:
        clientId:
          type: string
        expiry:
          type: integer
          format: int64
        scopes:
          type: array
          items:
            type: string
        token:
          type: string
    MailboxRsoAuthAuthorizationRequest:
      type: object
      properties:
        claims:
          type: array
          items:
            type: string
        clientId:
          type: string
        prompt:
          type: string
        scope:
          type: array
          items:
            type: string
        trustLevels:
          type: array
          items:
            $ref: '#/components/schemas/MailboxRsoAuthAuthorizationTrustLevel'
    MailboxRsoAuthAuthorizationResponse:
      type: object
      properties:
        authorization:
          $ref: '#/components/schemas/MailboxRsoAuthImplicitAuthorization'
        country:
          type: string
        type:
          $ref: '#/components/schemas/MailboxRsoAuthAuthorizationResponseType'
    MailboxRsoAuthAuthorizationResponseType:
      enum:
        - unknown_authorization_response
        - needs_authentication
        - needs_reauthentication
        - authorized
      type: string
    MailboxRsoAuthAuthorizationTrustLevel:
      enum:
        - always_trusted
        - trusted_device
        - always_verify
      type: string
    MailboxRsoAuthIdToken:
      type: object
      properties:
        clientId:
          type: string
        expiry:
          type: integer
          format: int64
        nonce:
          type: string
        token:
          type: string
    MailboxRsoAuthImplicitAuthorization:
      type: object
      properties:
        accessToken:
          $ref: '#/components/schemas/MailboxRsoAuthAccessToken'
        idToken:
          $ref: '#/components/schemas/MailboxRsoAuthIdToken'
    MailboxRsoAuthReadyState:
      type: object
      properties:
        ready:
          type: boolean
    MailboxRsoAuthUserInfo:
      type: object
      properties:
        userInfo:
          type: string
    MailboxServiceAffinityInput:
      type: object
      properties:
        hint:
          type: string
        service:
          type: string
    MailboxUpdateMailStateRequest:
      type: object
      properties:
        mailId:
          type: string
        state:
          $ref: '#/components/schemas/MailboxMailState'
    MiddlewareManagerPhase:
      enum:
        - NotStarted
        - InProgress
        - Done
      type: string
    MiddlewareManagerState:
      type: object
      properties:
        activeMiddleware:
          type: string
        id:
          type: integer
          format: int32
        middlewareManagerPhase:
          $ref: '#/components/schemas/MiddlewareManagerPhase'
        patchlineId:
          type: string
        productId:
          type: string
    MobileProductRegistryAppUpdateStatus:
      type: object
      properties:
        updateAvailable:
          type: boolean
        updateRequired:
          type: boolean
    MobileProductRegistryConfigType:
      enum:
        - public
        - player
      type: string
    MobileProductRegistryGameVersion:
      type: object
      properties:
        build:
          type: integer
          format: int64
        isGameObsolete:
          type: boolean
    MobileProductRegistryPatchlineMetadata:
      type: object
      properties:
        config_type:
          $ref: '#/components/schemas/MobileProductRegistryConfigType'
        full_name:
          type: string
        id:
          type: string
        platform:
          type: string
        product_id:
          type: string
        supported_versions:
          type: string
    MobileProductRegistrySession:
      type: object
      properties:
        isInternal:
          type: boolean
        patchlineFullName:
          type: string
        patchlineId:
          type: string
        productId:
          type: string
        version:
          type: string
    MobilePushMobilePushRegisterPush:
      type: object
      properties:
        appId:
          type: string
        deviceToken:
          type: string
    MobilePushMobilePushServicePayload:
      type: object
      properties:
        device_token:
          type: string
        locale:
          type: string
    MobilePushMobilePushSubscribeToTopic:
      type: object
      properties:
        topic:
          type: string
    MobilePushRsoAuthAccessToken:
      type: object
      properties:
        expiry:
          type: integer
          format: int64
        scopes:
          type: array
          items:
            type: string
        token:
          type: string
    NameCheckNameValidationResult:
      type: object
      properties:
        errors:
          type: array
          items:
            type: string
    NintendoAccountAuthorization:
      type: object
      properties:
        code:
          type: string
        idToken:
          type: string
    NintendoAccountAuthorizationParameters:
      type: object
      properties:
        scopes:
          type: string
        showUserSelector:
          type: boolean
    NintendoAccountGetNetworkServiceAccountParameters:
      type: object
      properties:
        showUserSelector:
          type: boolean
    NintendoAccountNetworkServiceAccount:
      type: object
      properties:
        idToken:
          type: string
    OnlinePlatform:
      enum:
        - absent
        - unknown
        - riot
        - tencent
        - garena
        - playstation
        - switch
        - xbox
      type: string
    PatchComponent:
      type: object
      properties:
        bundlesUrl:
          type: string
        deleteForeignPaths:
          type: boolean
        dependsOn:
          type: string
        error:
          $ref: '#/components/schemas/PatchError'
        excludedPaths:
          type: array
          items:
            type: string
        id:
          type: string
        installPath:
          type: string
        isPatchingLocked:
          type: boolean
        metadataPath:
          type: string
        preview:
          $ref: '#/components/schemas/PatchPreviewDiff'
        progress:
          $ref: '#/components/schemas/PatchComponentActionProgress'
        requestId:
          type: string
        seedPath:
          type: string
        sieveArtifactVersion:
          type: string
        sieveProductId:
          type: string
        sieveVersionSetId:
          type: string
        state:
          $ref: '#/components/schemas/PatchComponentState'
        storedDesiredComponentState:
          $ref: '#/components/schemas/PatchPatchsieveRelease'
        tags:
          type: array
          items:
            type: string
        url:
          type: string
    PatchComponentActionProgress:
      type: object
      properties:
        bytesToDownload:
          type: integer
          format: int64
        bytesToRead:
          type: integer
          format: int64
        bytesToRepair:
          type: integer
          format: int64
        bytesToWrite:
          type: integer
          format: int64
        downloadedBytes:
          type: integer
          format: int64
        filesToRepair:
          type: integer
          format: int64
        phase:
          $ref: '#/components/schemas/PatchComponentActionProgressPhase'
        progress:
          type: number
          format: double
        readBytes:
          type: integer
          format: int64
        repairedBytes:
          type: integer
          format: int64
        repairedFiles:
          type: integer
          format: int64
        stage:
          type: integer
          format: int64
        writtenBytes:
          type: integer
          format: int64
    PatchComponentActionProgressPhase:
      enum:
        - None
        - Manifest
        - Update
        - Repair
      type: string
    PatchComponentRequest:
      type: object
      properties:
        deleteForeignPaths:
          type: boolean
        dependsOn:
          type: string
        excludedPaths:
          type: array
          items:
            type: string
        id:
          type: string
        installPath:
          type: string
        metadataPath:
          type: string
        params:
          type: object
          additionalProperties:
            type: string
        seedPath:
          type: string
        sieveProductId:
          type: string
        versionSet:
          type: string
    PatchComponentState:
      enum:
        - NotInstalled
        - PendingVerify
        - Verifying
        - CheckingForUpdates
        - Previewing
        - Patching
        - Repairing
        - Seeding
        - OutOfDate
        - UpToDate
      type: string
    PatchConfiguration:
      type: object
      properties:
        cache_path:
          type: string
        cache_size:
          type: integer
          format: int64
    PatchCookie:
      type: object
      properties:
        cookie:
          type: string
        domain:
          type: string
        path:
          type: string
    PatchCookies:
      type: object
      properties:
        cookies:
          type: array
          items:
            $ref: '#/components/schemas/PatchCookie'
        expires_in:
          type: integer
          format: int32
    PatchDebugSetup:
      type: object
      properties:
        componentId:
          type: string
        installId:
          type: string
        installPath:
          type: string
        metadataPath:
          type: string
    PatchEntitlementsToken:
      type: object
      properties:
        accessToken:
          type: string
        token:
          type: string
    PatchError:
      type: object
      properties:
        code:
          $ref: '#/components/schemas/PatchErrorCode'
        locked_file_info:
          $ref: '#/components/schemas/PatchLockedFileInfo'
        message:
          type: string
    PatchErrorCode:
      enum:
        - Unspecified
        - Cancelled
        - NotEnoughDiskSpace
        - AccessDenied
        - FileNotFound
        - CorruptData
        - FileLocked
        - InvalidArgument
        - DownloaderConnection
        - DownloaderClientError
        - DownloaderServerError
        - DownloaderAuthorization
        - DownloadedCorruptData
        - AddressResolutionFailed
      type: string
    PatchingResource:
      type: object
      properties:
        combined_patch_state:
          $ref: '#/components/schemas/CombinedPatchState'
        patch_requested:
          type: boolean
        shards_data:
          type: object
          additionalProperties:
            type: string
        user_cancelled_patching:
          type: boolean
    PatchInstall:
      type: object
      properties:
        excluded_paths:
          type: array
          items:
            type: string
        id:
          type: string
        metadata_path:
          type: string
        path:
          type: string
        requests:
          $ref: '#/components/schemas/PatchRequests'
        seed_path:
          type: string
        status:
          $ref: '#/components/schemas/PatchStatus'
    PatchInstallParams:
      type: object
      properties:
        excluded_paths:
          type: array
          items:
            type: string
        metadata_path:
          type: string
        path:
          type: string
        seed_path:
          type: string
    PatchInstallRequest:
      type: object
      properties:
        components:
          type: array
          items:
            $ref: '#/components/schemas/PatchComponentRequest'
        id:
          type: string
    PatchInstallState:
      type: object
      properties:
        components:
          type: array
          items:
            $ref: '#/components/schemas/PatchComponent'
        id:
          type: string
    PatchLockedFileInfo:
      type: object
      properties:
        process_id:
          type: integer
          format: int64
        process_name:
          type: string
    PatchManifestProgress:
      type: object
      properties:
        bytes_to_download:
          type: integer
          format: int64
        downloaded_bytes:
          type: integer
          format: int64
    PatchPatchComponentMetadata:
      type: object
      properties:
        excludedPaths:
          type: array
          items:
            type: string
        id:
          type: string
        path:
          type: string
        sieveLabels:
          type: object
          additionalProperties:
            type: string
        sieveProductId:
          type: string
        tags:
          type: array
          items:
            type: string
    PatchPatchlineMetadata:
      type: object
      properties:
        patching_metadata:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/PatchPatchSetMetadata'
    PatchPatchRequest:
      type: object
      properties:
        allowedHttpFallbackHostnames:
          type: array
          items:
            type: string
        bundlesUrl:
          type: string
        delete_foreign_paths:
          type: boolean
        headers:
          type: object
          additionalProperties:
            type: string
        max_download_speed:
          type: integer
          format: int32
        repair:
          type: boolean
        stage:
          type: integer
          format: int8
        tags:
          type: array
          items:
            type: string
        temp_path:
          type: string
        url:
          type: string
    PatchPatchSetMetadata:
      type: object
      properties:
        components:
          type: array
          items:
            $ref: '#/components/schemas/PatchPatchComponentMetadata'
    PatchPatchsieveRelease:
      type: object
      properties:
        artifactId:
          type: string
        artifactVersion:
          type: string
        downloadUrl:
          type: string
        releaseId:
          type: string
        requiresScd:
          type: boolean
    PatchPatchsieveReleases:
      type: object
      properties:
        releases:
          type: array
          items:
            $ref: '#/components/schemas/PatchPatchsieveRelease'
    PatchPatchsieveRequest:
      type: object
      properties:
        artifactType:
          type: string
        cpuArch:
          type: string
        extraParams:
          type: object
          additionalProperties:
            type: string
        fromArtifactType:
          type: string
        fromArtifactVersion:
          type: string
        fromCpuArch:
          type: string
        fromPlatform:
          type: string
        platform:
          type: string
        productId:
          type: string
        published:
          type: boolean
        versionSet:
          type: string
    PatchPatchStatus:
      type: object
      properties:
        error:
          $ref: '#/components/schemas/PatchError'
        progress:
          $ref: '#/components/schemas/PatchProgress'
        state:
          $ref: '#/components/schemas/PatchPatchStatusState'
        tags:
          type: array
          items:
            type: string
        url:
          type: string
    PatchPatchStatusState:
      enum:
        - updating
        - out_of_date
        - up_to_date
        - not_installed
        - pending_verify
        - repairing
      type: string
    PatchPhase:
      enum:
        - None
        - Manifest
        - Update
        - Repair
      type: string
    PatchPreviewDiff:
      type: object
      properties:
        cache_read_bytes:
          type: integer
          format: int64
        cache_write_bytes:
          type: integer
          format: int64
        disk_read_bytes:
          type: integer
          format: int64
        disk_size_diff:
          type: integer
          format: int64
        disk_write_bytes:
          type: integer
          format: int64
        network_bytes_compressed:
          type: integer
          format: int64
        new_bytes:
          type: integer
          format: int64
    PatchPreviewRequest:
      type: object
      properties:
        fast:
          type: boolean
        headers:
          type: object
          additionalProperties:
            type: string
        stage:
          type: integer
          format: int8
        tags:
          type: array
          items:
            type: string
        url:
          type: string
    PatchPreviewStatus:
      type: object
      properties:
        diff:
          $ref: '#/components/schemas/PatchPreviewDiff'
        error:
          $ref: '#/components/schemas/PatchError'
        state:
          $ref: '#/components/schemas/PatchPreviewStatusState'
        tags:
          type: array
          items:
            type: string
        url:
          type: string
    PatchPreviewStatusState:
      enum:
        - pending
        - done
        - inconsistent
      type: string
    PatchProgress:
      type: object
      properties:
        manifest:
          $ref: '#/components/schemas/PatchManifestProgress'
        phase:
          $ref: '#/components/schemas/PatchPhase'
        progress:
          type: number
          format: double
        repair:
          $ref: '#/components/schemas/PatchRepairProgress'
        update:
          $ref: '#/components/schemas/PatchUpdateProgress'
    PatchProxyAppUpdateStatus:
      type: object
      properties:
        updateAvailable:
          type: boolean
        updateRequired:
          type: boolean
    PatchProxyClientProductType:
      enum:
        - riot_game
        - thunderdome
        - forge
        - third_party
        - special_event
        - hidden
      type: string
    PatchProxyCombinedPatchState:
      enum:
        - awaiting_headers
        - unknown
        - updating
        - out_of_date
        - up_to_date
        - not_installed
        - bad_install_path
      type: string
    PatchProxyConfigType:
      enum:
        - public
        - player
      type: string
    PatchProxyConfigurationResource:
      type: object
      properties:
        allowed_http_fallback_hostnames:
          type: array
          items:
            type: string
        bundles_url:
          type: string
        delete_foreign_paths:
          type: boolean
        dependencies:
          type: array
          items:
            $ref: '#/components/schemas/PatchProxyDependency'
        dynamic_tags:
          type: array
          items:
            $ref: '#/components/schemas/PatchProxyDynamicTags'
        excluded_paths:
          type: array
          items:
            type: string
        id:
          type: string
        launchable_on_update_fail:
          type: boolean
        patch_notes_url:
          type: string
        patch_url:
          type: string
        secondary_patchlines:
          type: array
          items:
            $ref: '#/components/schemas/PatchProxySecondaryPatchline'
        seed_url:
          type: string
        tags:
          type: array
          items:
            type: string
        version:
          type: string
    PatchProxyConfigurationStatus:
      enum:
        - unknown
        - has_configuration
        - unsupported_region
        - unsupported_shard
        - unsupported_os
        - unsupported_32_bit_os
      type: string
    PatchProxyDependency:
      type: object
      properties:
        args:
          type: array
          items:
            type: string
        elevate:
          type: boolean
        hash:
          type: string
        id:
          type: string
        min_version:
          type: string
        url:
          type: string
        valid_exit_codes:
          type: string
        version:
          type: string
    PatchProxyDependencyState:
      type: object
      properties:
        hash:
          type: string
        phase:
          $ref: '#/components/schemas/ThirdPartyDependencyStatusPhase'
        version:
          type: string
    PatchProxyDynamicTagHeuristics:
      type: object
      properties:
        countries:
          type: array
          items:
            type: string
    PatchProxyDynamicTags:
      type: object
      properties:
        heuristics:
          $ref: '#/components/schemas/PatchProxyDynamicTagHeuristics'
        tags:
          type: array
          items:
            type: string
    PatchProxyError:
      type: object
      properties:
        code:
          type: string
        locked_file_info:
          $ref: '#/components/schemas/PatchProxyLockedFileInfo'
        message:
          type: string
    PatchProxyEventType:
      enum:
        - none
        - startup
        - player_initiated
        - running_product
        - background
      type: string
    PatchProxyHomeBaseCountry:
      type: object
      properties:
        cached_home_base_country:
          type: string
        home_base_country:
          type: string
    PatchProxyInstall:
      type: object
      properties:
        excluded_paths:
          type: array
          items:
            type: string
        id:
          type: string
        metadata_path:
          type: string
        path:
          type: string
    PatchProxyJobInfo:
      type: object
      properties:
        event_type:
          $ref: '#/components/schemas/PatchProxyEventType'
        install_id:
          type: string
        job_status:
          $ref: '#/components/schemas/PatchProxyJobStatus'
        job_type:
          $ref: '#/components/schemas/PatchProxyJobType'
        sequence_in_queue:
          type: integer
          format: int32
    PatchProxyJobStatus:
      enum:
        - queued
        - in_process
        - finished_success
        - finished_failure
      type: string
    PatchProxyJobType:
      enum:
        - none
        - verify
        - repair
        - preview
        - patch
        - seed
      type: string
    PatchProxyLocaleDataResource:
      type: object
      properties:
        available_locales:
          type: array
          items:
            type: string
        default_locale:
          type: string
    PatchProxyLockedFileInfo:
      type: object
      properties:
        process_id:
          type: integer
          format: int64
        process_name:
          type: string
    PatchProxyManifestProgress:
      type: object
      properties:
        bytes_to_download:
          type: integer
          format: int64
        downloaded_bytes:
          type: integer
          format: int64
    PatchProxyPatchingResource:
      type: object
      properties:
        combined_patch_state:
          $ref: '#/components/schemas/PatchProxyCombinedPatchState'
        configuration:
          $ref: '#/components/schemas/PatchProxyConfigurationResource'
        dependency_status:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ThirdPartyDependencyStatus'
        patch_requested:
          type: boolean
        patch_status:
          $ref: '#/components/schemas/PatchProxyPatchStatus'
        repair_code:
          $ref: '#/components/schemas/PatchProxyRepairCode'
        shards_data:
          type: object
          additionalProperties:
            type: string
        user_cancelled_patching:
          type: boolean
    PatchProxyPatchlineResource:
      type: object
      properties:
        alias:
          $ref: '#/components/schemas/PatchProxyProductAlias'
        auto_patching_enabled_by_player:
          type: boolean
        available_platforms:
          type: array
          items:
            type: string
        client_product_type:
          $ref: '#/components/schemas/PatchProxyClientProductType'
        configType:
          $ref: '#/components/schemas/PatchProxyConfigType'
        configuration_status:
          $ref: '#/components/schemas/PatchProxyConfigurationStatus'
        content_paths:
          type: object
          additionalProperties:
            type: string
        default_theme_manifest:
          type: string
        dependencies:
          type: array
          items:
            $ref: '#/components/schemas/PatchProxyDependency'
        dependencyStates:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/PatchProxyDependencyState'
        disallow_32bit_windows:
          type: boolean
        excluded_compat_modes:
          type: array
          items:
            type: string
        full_name:
          type: string
        id:
          type: string
        install_dir:
          type: string
        install_full_path:
          type: string
        install_id:
          type: string
        install_size_bytes:
          type: integer
          format: int64
        launch_disabled:
          type: boolean
        launcher_arguments:
          type: array
          items:
            type: string
        locale_data:
          $ref: '#/components/schemas/PatchProxyLocaleDataResource'
        patch_notes:
          type: string
        patch_status_known:
          type: boolean
        patching_ask_policy:
          type: string
        patching_policy:
          type: string
        path_name:
          type: string
        platform:
          type: string
        primary_executable:
          type: string
        product_install_move_status:
          type: object
        region_data:
          $ref: '#/components/schemas/PatchProxyRegionDataResource'
        release_id:
          type: string
        restart_required:
          type: boolean
        rogue_process_allow_list:
          type: array
          items:
            type: string
        root_dir:
          type: string
        secondary_patchlines:
          type: array
          items:
            $ref: '#/components/schemas/PatchProxySecondaryPatchlineResource'
        settings:
          type: object
        shards_data:
          type: object
          additionalProperties:
            type: string
        should_repair:
          type: boolean
        theme_manifest:
          type: string
        vanguard_dependency:
          type: boolean
    PatchProxyPatchProxyProduct:
      type: object
      properties:
        install_id:
          type: string
    PatchProxyPatchProxyRequest:
      type: object
      properties:
        bundles_url:
          type: string
        deleteForeignPaths:
          type: boolean
        event_type:
          $ref: '#/components/schemas/PatchProxyEventType'
        exclude_foreign_paths:
          type: boolean
        excluded_paths:
          type: array
          items:
            type: string
        id:
          type: string
        job_type:
          $ref: '#/components/schemas/PatchProxyJobType'
        metadata_path:
          type: string
        path:
          type: string
        product:
          $ref: '#/components/schemas/PatchProxyPatchProxyProduct'
        repair:
          type: boolean
        stage:
          type: integer
          format: int8
        tags:
          type: array
          items:
            type: string
        temp_path:
          type: string
        url:
          type: string
    PatchProxyPatchRequestOptions:
      type: object
      properties:
        createShortcut:
          type: boolean
        installPath:
          type: string
    PatchProxyPatchStatus:
      type: object
      properties:
        error:
          $ref: '#/components/schemas/PatchProxyError'
        launchable_on_update_fail:
          type: boolean
        progress:
          $ref: '#/components/schemas/PatchProxyProgress'
        state:
          $ref: '#/components/schemas/PatchProxyPatchStatusState'
        tags:
          type: array
          items:
            type: string
        url:
          type: string
    PatchProxyPatchStatusState:
      enum:
        - updating
        - out_of_date
        - up_to_date
        - not_installed
        - pending_verify
        - repairing
      type: string
    PatchProxyPhase:
      enum:
        - None
        - Manifest
        - Update
        - Repair
      type: string
    PatchProxyPrepareDirectoryPermissionsRequest:
      type: object
      properties:
        paths:
          type: array
          items:
            type: string
    PatchProxyProductAlias:
      type: object
      properties:
        platforms:
          type: array
          items:
            type: string
        product_id:
          type: string
    PatchProxyProductPatchlineResourceV4:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        patchline:
          $ref: '#/components/schemas/PatchProxyPatchlineResource'
    PatchProxyProgress:
      type: object
      properties:
        manifest:
          $ref: '#/components/schemas/PatchProxyManifestProgress'
        phase:
          $ref: '#/components/schemas/PatchProxyPhase'
        progress:
          type: number
          format: double
        repair:
          $ref: '#/components/schemas/PatchProxyRepairProgress'
        update:
          $ref: '#/components/schemas/PatchProxyUpdateProgress'
    PatchProxyRegionDataResource:
      type: object
      properties:
        available_regions:
          type: array
          items:
            type: string
        default_region:
          type: string
    PatchProxyRepairCode:
      enum:
        - default
        - integrity_check_failed
        - immediate_repair
      type: string
    PatchProxyRepairProgress:
      type: object
      properties:
        bytes_to_repair:
          type: integer
          format: int64
        files_to_repair:
          type: integer
          format: int64
        repaired_bytes:
          type: integer
          format: int64
        repaired_files:
          type: integer
          format: int64
    PatchProxySecondaryPatchline:
      type: object
      properties:
        dynamic_tags:
          type: array
          items:
            $ref: '#/components/schemas/PatchProxyDynamicTags'
        id:
          type: string
        path:
          type: string
        tags:
          type: array
          items:
            type: string
        url:
          type: string
    PatchProxySecondaryPatchlineResource:
      type: object
      properties:
        id:
          type: string
        relativePath:
          type: string
    PatchProxyUpdateProgress:
      type: object
      properties:
        bytes_to_download:
          type: integer
          format: int64
        bytes_to_read:
          type: integer
          format: int64
        bytes_to_write:
          type: integer
          format: int64
        downloaded_bytes:
          type: integer
          format: int64
        read_bytes:
          type: integer
          format: int64
        stage:
          type: integer
          format: int8
        written_bytes:
          type: integer
          format: int64
    PatchRegionLocale:
      type: object
      properties:
        locale:
          type: string
        region:
          type: string
    PatchRepairFileInfo:
      type: object
      properties:
        path:
          type: string
        state:
          $ref: '#/components/schemas/PatchRepairFileInfoState'
    PatchRepairFileInfoState:
      enum:
        - marked_for_repair
        - repairing
        - ready
        - marked_for_update
        - updating
        - canceled
      type: string
    PatchRepairProgress:
      type: object
      properties:
        bytes_to_repair:
          type: integer
          format: int64
        files_to_repair:
          type: integer
          format: int64
        repaired_bytes:
          type: integer
          format: int64
        repaired_files:
          type: integer
          format: int64
    PatchRepairRequest:
      type: object
      properties:
        allowed_http_fallback_hostnames:
          type: array
          items:
            type: string
        delete_foreign_paths:
          type: boolean
        files:
          type: array
          items:
            type: string
        headers:
          type: object
          additionalProperties:
            type: string
        manifest_url:
          type: string
        max_download_speed:
          type: integer
          format: int32
    PatchRepairStatus:
      type: object
      properties:
        error:
          $ref: '#/components/schemas/PatchError'
        manifest_url:
          type: string
        repair_progress:
          $ref: '#/components/schemas/PatchRepairProgress'
        state:
          $ref: '#/components/schemas/PatchRepairStatusState'
    PatchRepairStatusState:
      enum:
        - pending
        - in_progress
        - canceled
        - done
      type: string
    PatchRequests:
      type: object
      properties:
        patch:
          $ref: '#/components/schemas/PatchPatchRequest'
        preview:
          $ref: '#/components/schemas/PatchPreviewRequest'
        repair:
          $ref: '#/components/schemas/PatchRepairRequest'
        seed:
          $ref: '#/components/schemas/PatchSeedRequest'
    PatchRequestStatus:
      type: object
      properties:
        fullName:
          type: string
        id:
          type: string
        state:
          $ref: '#/components/schemas/PatchRequestStatusState'
    PatchRequestStatusState:
      enum:
        - Queued
        - InProgress
        - Done
      type: string
    PatchScheduleRepairRequest:
      type: object
      properties:
        files:
          type: array
          items:
            type: string
        headers:
          type: object
          additionalProperties:
            type: string
    PatchSeedRequest:
      type: object
      properties:
        allowedHttpFallbackHostnames:
          type: array
          items:
            type: string
        bundlesUrl:
          type: string
        delete_foreign_paths:
          type: boolean
        headers:
          type: object
          additionalProperties:
            type: string
        max_download_speed:
          type: integer
          format: int32
        stage:
          type: integer
          format: int8
        tags:
          type: array
          items:
            type: string
        url:
          type: string
    PatchSeedStatus:
      type: object
      properties:
        error:
          $ref: '#/components/schemas/PatchError'
        progress:
          $ref: '#/components/schemas/PatchProgress'
        state:
          $ref: '#/components/schemas/PatchSeedStatusState'
        tags:
          type: array
          items:
            type: string
        url:
          type: string
    PatchSeedStatusState:
      enum:
        - seeding
        - out_of_date
        - up_to_date
        - pending_verify
      type: string
    PatchSession:
      type: object
      properties:
        patchlineFullName:
          type: string
        patchlineId:
          type: string
        productId:
          type: string
        version:
          type: string
    PatchStartFullRepairRequest:
      type: object
      properties:
        deleteForeignPaths:
          type: boolean
        headers:
          type: object
          additionalProperties:
            type: string
    PatchStartPartialRepairRequest:
      type: object
      properties:
        deleteForeignPaths:
          type: boolean
        files:
          type: array
          items:
            type: string
        headers:
          type: object
          additionalProperties:
            type: string
    PatchStartPatchingOrSeedingRequest:
      type: object
      properties:
        headers:
          type: object
          additionalProperties:
            type: string
        stage:
          type: integer
          format: int8
        tempPath:
          type: string
    PatchStartPreviewRequest:
      type: object
      properties:
        fast:
          type: boolean
        headers:
          type: object
          additionalProperties:
            type: string
        stage:
          type: integer
          format: int8
    PatchStatus:
      type: object
      properties:
        patch:
          $ref: '#/components/schemas/PatchPatchStatus'
        preview:
          $ref: '#/components/schemas/PatchPreviewStatus'
        repair:
          $ref: '#/components/schemas/PatchRepairStatus'
        seed:
          $ref: '#/components/schemas/PatchSeedStatus'
    PatchUpdateProgress:
      type: object
      properties:
        bytes_to_download:
          type: integer
          format: int64
        bytes_to_read:
          type: integer
          format: int64
        bytes_to_write:
          type: integer
          format: int64
        downloaded_bytes:
          type: integer
          format: int64
        read_bytes:
          type: integer
          format: int64
        stage:
          type: integer
          format: int8
        written_bytes:
          type: integer
          format: int64
    PatchV2Configuration:
      type: object
      properties:
        chunkBatchSize:
          type: integer
          format: int32
        chunkingThreads:
          type: integer
          format: int32
        connections:
          type: integer
          format: int32
        dnsTTL:
          type: integer
          format: int32
        downloadBuffer:
          type: integer
          format: int32
        downloadLimit:
          type: integer
          format: int32
        ipv4Only:
          type: boolean
        maxByteRanges:
          type: integer
          format: int32
        receiveBuffer:
          type: integer
          format: int32
        sliceSize:
          type: integer
          format: int32
        timeout:
          type: integer
          format: int32
    PaymentsIdToken:
      type: object
      properties:
        clientId:
          type: string
        expiry:
          type: integer
          format: int64
        nonce:
          type: string
        token:
          type: string
    PaymentsInitializedPurchase:
      type: object
      properties:
        purchaseStartUrl:
          type: string
    PayMobileCompletedPricePointPurchaseResponse:
      type: object
      properties:
        pricePointId:
          type: string
        virtualAmount:
          type: integer
          format: int32
        virtualBonusAmount:
          type: integer
          format: int32
        virtualCurrencyCode:
          type: string
        virtualCurrencyName:
          type: string
        virtualTotalAmount:
          type: integer
          format: int32
    PayMobileInitializePurchaseResponse:
      type: object
      properties:
        playerFacingId:
          type: string
    PayMobileMobileStoreStatus:
      enum:
        - Success
        - Initialized
        - FailedToInitialize
        - GenericError
        - PermissionDenied
        - PurchaseCancelled
        - PurchaseInProgress
        - PurchaseFailed
        - PurchaseNotConsumed
        - PurchaseConsumed
        - ProductNotAvailable
        - Error
      type: string
    PayMobilePricePoint:
      type: object
      properties:
        productId:
          type: string
        virtualAmount:
          type: integer
          format: int32
        virtualBonusAmount:
          type: integer
          format: int32
    PayMobileProduct:
      type: object
      properties:
        amountInCents:
          type: integer
          format: int32
        currencyCode:
          type: string
        description:
          type: string
        formattedPrice:
          type: string
        productId:
          type: string
        title:
          type: string
        virtualAmount:
          type: integer
          format: int32
        virtualBonusAmount:
          type: integer
          format: int32
    PayMobileProductListResult:
      type: object
      properties:
        products:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/PayMobileProduct'
        status:
          $ref: '#/components/schemas/PayMobileProductListStatus'
    PayMobileProductListStatus:
      enum:
        - Success
        - NotInitialized
        - NoProductsAvailableInRiotCatalog
        - NoMatchingProductsInMobileStore
        - CatalogUnreachable
      type: string
    PayMobileProductSession:
      type: object
      properties:
        patchlineId:
          type: string
        phase:
          type: string
        productId:
          type: string
    PayMobilePurchaseResult:
      type: object
      properties:
        orderId:
          type: string
        productId:
          type: string
        status:
          $ref: '#/components/schemas/PayMobilePurchaseStatus'
        virtualAmount:
          type: integer
          format: int32
        virtualBonusAmount:
          type: integer
          format: int32
        virtualTotalAmount:
          type: integer
          format: int32
    PayMobilePurchaseStatus:
      enum:
        - Ready
        - Initiated
        - InitFailed
        - Processing
        - Fulfilled
        - CAPOrderCreated
        - Cancelled
        - VerificationPending
        - FulfillPending
        - RetriesFailed
        - InvalidPurchaseRequest
        - PurchaseVelocityReached
        - PurchasePending
      type: string
    PayMobilePurchaseTransaction:
      type: object
      properties:
        amountInCents:
          type: integer
          format: int32
        currencyCode:
          type: string
        productId:
          type: string
        purchasedAt:
          type: integer
          format: int64
        purchaseReceipt:
          type: string
        transactionId:
          type: string
    PayMobileSubmitPurchaseResult:
      type: object
      properties:
        details:
          $ref: '#/components/schemas/PayMobileSubmitPurchaseResultDetails'
        status:
          $ref: '#/components/schemas/PayMobileSubmitPurchaseResultStatus'
    PayMobileSubmitPurchaseResultDetails:
      type: object
      properties:
        capOrderId:
          type: string
        pricePointId:
          type: string
        purchaseType:
          type: string
        virtualAmount:
          type: integer
          format: int32
        virtualBonusAmount:
          type: integer
          format: int32
        virtualCurrencyCode:
          type: string
        virtualCurrencyName:
          type: string
        virtualTotalAmount:
          type: integer
          format: int32
    PayMobileSubmitPurchaseResultStatus:
      enum:
        - PmcTransient
        - GatewayTransient
        - FulfillmentTransient
        - InvalidRequest
        - Error
        - Success
        - MissingTransaction
      type: string
    PayMobileTelemetryContext:
      type: object
      properties:
        durationMs:
          type: integer
          format: int32
        endpointApi:
          type: string
        iapStatus:
          $ref: '#/components/schemas/PayMobileMobileStoreStatus'
        orderId:
          type: string
        paymentMethodId:
          type: string
        pricePointId:
          type: string
        productListStatus:
          $ref: '#/components/schemas/PayMobileProductListStatus'
        purchaseStatus:
          $ref: '#/components/schemas/PayMobilePurchaseStatus'
        result:
          $ref: '#/components/schemas/PayMobileTelemetryResult'
    PayMobileTelemetryResult:
      enum:
        - SUCCESS
        - ERROR
      type: string
    PlatformUiAccessToken:
      type: object
      properties:
        expiry:
          type: integer
          format: int64
        scopes:
          type: array
          items:
            type: string
        token:
          type: string
    PlatformUiAliasesV1Alias:
      type: object
      properties:
        active:
          type: boolean
        created_datetime:
          type: integer
          format: int64
        game_name:
          type: string
        summoner:
          type: boolean
        tag_line:
          type: string
    PlatformUiAliasesV1AliasInput:
      type: object
      properties:
        gameName:
          type: string
        tagLine:
          type: string
    PlatformUiAliasesV1AliasList:
      type: object
      properties:
        aliases:
          type: array
          items:
            $ref: '#/components/schemas/PlatformUiAliasesV1Alias'
    PlatformUiAliasesV1AliasValidationReason:
      enum:
        - no_error
        - name_change_forbidden
        - name_not_available
        - rate_limited
      type: string
    PlatformUiAliasesV1RequiredResponse:
      type: object
      properties:
        isAliasChangeRequired:
          type: boolean
        isAliasMissing:
          type: boolean
    PlatformUiAliasesV1StatusResponse:
      type: object
      properties:
        alias:
          $ref: '#/components/schemas/PlatformUiAliasesV1Alias'
        errorCode:
          $ref: '#/components/schemas/PlatformUiAliasesV1AliasValidationReason'
        errorMessage:
          type: string
        isSuccess:
          type: boolean
    PlatformUiAuthenticationResponse:
      type: object
      properties:
        country:
          type: string
        error:
          type: string
        healup:
          $ref: '#/components/schemas/PlatformUiHealupResponseDetails'
        multifactor:
          $ref: '#/components/schemas/PlatformUiMultifactorResponseDetails'
        signup:
          $ref: '#/components/schemas/PlatformUiSignupResponseDetails'
        success:
          $ref: '#/components/schemas/PlatformUiSuccessResponseDetails'
        type:
          $ref: '#/components/schemas/PlatformUiResponseType'
    PlatformUicode:
      enum:
        - RateLimited
        - FetchProductIdFailure
        - InvalidCDNPath
        - LoginStrategyMissing
        - ConfigAuthMethodMissing
        - ConfigAuthPayloadMissing
        - InvalidLoginState
        - CreateSessionFailure
        - UpdateSessionFailure
        - DeleteSessionFailure
        - AuthenticationFailure
        - FetchCurrentAuthenticationFailure
        - InvalidAuthenticationState
        - SignupFailure
        - TooYoung
        - AcceptEulaFailure
        - PlatformConsentFailure
        - GenerateTaglineFailure
        - CreateRiotIDFailure
        - SingletonMissing
      type: string
    PlatformUiEligibilityResponse:
      type: object
      properties:
        errorCode:
          $ref: '#/components/schemas/PlatformUiAliasesV1AliasValidationReason'
        errorMessage:
          type: string
        isSuccess:
          type: boolean
        isTagLineCustomizable:
          type: boolean
    PlatformUierrorState:
      enum:
        - ConnectionTimeout
        - RateLimited
        - RequirementsNotMet
        - UserCancelled
        - PendingConsent
        - PendingForget
        - InternalError
      type: string
    PlatformUiGenerateTaglineInput:
      type: object
      properties:
        game_name:
          type: string
    PlatformUiGenerateTaglineResponse:
      type: object
      properties:
        errorCode:
          $ref: '#/components/schemas/PlatformUiAliasesV1AliasValidationReason'
        errorMessage:
          type: string
        isSuccess:
          type: boolean
        tag_line:
          type: string
    PlatformUiHealupResponseDetails:
      type: object
      properties:
        auth_method:
          type: string
        required_fields:
          type: array
          items:
            type: string
        required_fields_hints:
          type: object
          additionalProperties:
            type: ''
    PlatformUiIdToken:
      type: object
      properties:
        expiry:
          type: integer
          format: int64
        token:
          type: string
    PlatformUiInitiateLoginSessionRequest:
      type: object
      properties:
        loginStrategy:
          $ref: '#/components/schemas/PlatformUiLoginStrategyType'
        requireRiotID:
          type: boolean
        scopes:
          type: array
          items:
            type: string
    PlatformUiLoginStrategyType:
      enum:
        - riot_identity
        - google
        - game_center
        - facebook
        - apple
        - nintendo
        - xbox
        - playstation
      type: string
    PlatformUiMultifactorResponseDetails:
      type: object
      properties:
        email:
          type: string
        method:
          type: string
        methods:
          type: array
          items:
            type: string
        mode:
          type: string
    PlatformUiPlatformUIError:
      type: object
      properties:
        code:
          $ref: '#/components/schemas/PlatformUierrorState'
        recoverable:
          type: boolean
    PlatformUiPlatformUIState:
      type: object
      properties:
        error:
          $ref: '#/components/schemas/PlatformUiPlatformUIError'
        status:
          $ref: '#/components/schemas/PlatformUistatus'
        view:
          type: string
    PlatformUiPlayerSessionState:
      type: object
      properties:
        accessToken:
          $ref: '#/components/schemas/PlatformUiAccessToken'
        actionRequired:
          type: boolean
        config:
          $ref: '#/components/schemas/PlatformUiInitiateLoginSessionRequest'
        errorCode:
          type: string
        idToken:
          $ref: '#/components/schemas/PlatformUiIdToken'
        loginCountry:
          type: string
        loginState:
          $ref: '#/components/schemas/PlatformUiPlayerSessionStateType'
        suggestedActions:
          type: array
          items:
            $ref: '#/components/schemas/PlatformUiSuggestedAction'
        userInfo:
          type: object
          additionalProperties:
            type: ''
    PlatformUiPlayerSessionStateType:
      enum:
        - PendingInitialization
        - Initializing
        - PendingClientId
        - PendingCreateAuthorization
        - PendingPlatformAuthorizationConsent
        - PendingProviderCredentials
        - PendingAuthentication
        - PendingSignup
        - PendingHealup
        - LoginTokenExchange
        - PendingForget
        - PendingConsent
        - PendingEulaData
        - PendingEulaAcceptance
        - PendingRiotID
        - Authorized
        - Error
      type: string
    PlatformUiResponseType:
      enum:
        - auth
        - healup
        - signup
        - success
        - error
      type: string
    PlatformUiSignupCodeLinking:
      type: object
      properties:
        direct_url:
          type: string
        manual_url:
          type: string
        short_code:
          type: string
        short_url:
          type: string
        status_url:
          type: string
        uuid:
          type: string
    PlatformUiSignupLinkDetails:
      type: object
      properties:
        auth_method:
          type: string
        code_linking:
          $ref: '#/components/schemas/PlatformUiSignupCodeLinking'
        options:
          type: array
          items:
            type: string
        suggested:
          type: array
          items:
            type: string
    PlatformUiSignupResponseDetails:
      type: object
      properties:
        auth_method:
          type: string
        link:
          $ref: '#/components/schemas/PlatformUiSignupLinkDetails'
        required_fields:
          type: array
          items:
            type: string
        required_fields_hints:
          type: object
          additionalProperties:
            type: ''
    PlatformUistatus:
      enum:
        - Destroyed
        - Initializing
        - Ready
        - Authorizing
        - Error
        - ReadyToPlay
      type: string
    PlatformUiSuccessResponseDetails:
      type: object
      properties:
        linked:
          type: string
        login_token:
          type: string
        redirect_url:
          type: string
    PlatformUiSuggestedAction:
      type: object
      properties:
        description:
          type: string
        endpoint:
          type: string
        method:
          type: string
    PlatformUiUserInfo:
      type: object
      properties:
        userInfo:
          type: string
    PlatformUiWebLinkingStatus:
      enum:
        - NEW
        - PENDING
        - EXPIRED
        - COMPLETED
      type: string
    PlatformUiWebLinkingStatusResponse:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/PlatformUiWebLinkingStatus'
        ttl:
          type: integer
          format: int32
    PlatformUser:
      type: object
      properties:
        id:
          type: string
        platform:
          $ref: '#/components/schemas/OnlinePlatform'
    PlayerAccountAccessToken:
      type: object
      properties:
        clientId:
          type: string
        expiry:
          type: integer
          format: int64
        scopes:
          type: array
          items:
            type: string
        token:
          type: string
    PlayerAccountAliasesV1Alias:
      type: object
      properties:
        active:
          type: boolean
        created_datetime:
          type: integer
          format: int64
        game_name:
          type: string
        summoner:
          type: boolean
        tag_line:
          type: string
    PlayerAccountAliasesV1AliasInput:
      type: object
      properties:
        gameName:
          type: string
        tagLine:
          type: string
    PlayerAccountAliasesV1AliasList:
      type: object
      properties:
        aliases:
          type: array
          items:
            $ref: '#/components/schemas/PlayerAccountAliasesV1Alias'
    PlayerAccountAliasesV1AliasValidationReason:
      enum:
        - no_error
        - name_change_forbidden
        - name_not_available
        - rate_limited
      type: string
    PlayerAccountAliasesV1RequiredResponse:
      type: object
      properties:
        isAliasChangeRequired:
          type: boolean
        isAliasMissing:
          type: boolean
    PlayerAccountAliasesV1StatusResponse:
      type: object
      properties:
        alias:
          $ref: '#/components/schemas/PlayerAccountAliasesV1Alias'
        errorCode:
          $ref: '#/components/schemas/PlayerAccountAliasesV1AliasValidationReason'
        errorMessage:
          type: string
        isSuccess:
          type: boolean
    PlayerAccountAuthHint:
      type: object
      properties:
        context:
          type: object
          additionalProperties:
            type: ''
        required:
          type: boolean
        type:
          $ref: '#/components/schemas/PlayerAccountAuthHintType'
    PlayerAccountAuthHintType:
      enum:
        - email_verification
        - password_reset
        - parental_consent
        - ambiguous_username
        - alias_change_required
      type: string
    PlayerAccountAuthorization:
      type: object
      properties:
        currentAccountId:
          type: integer
          format: int64
        currentPlatformId:
          type: string
        subject:
          type: string
    PlayerAccountAuthorizationUpdateRequest:
      type: object
      properties:
        claims:
          type: array
          items:
            type: string
        prompt:
          type: string
        scope:
          type: array
          items:
            type: string
        trustLevels:
          type: array
          items:
            $ref: '#/components/schemas/PlayerAccountRSOAuthorizationTrustLevel'
    PlayerAccountConfigV3ReadyState:
      type: object
      properties:
        ready:
          type: boolean
    PlayerAccountEligibilityResponse:
      type: object
      properties:
        errorCode:
          $ref: '#/components/schemas/PlayerAccountAliasesV1AliasValidationReason'
        errorMessage:
          type: string
        isSuccess:
          type: boolean
        isTagLineCustomizable:
          type: boolean
    PlayerAccountGenerateTaglineInput:
      type: object
      properties:
        game_name:
          type: string
    PlayerAccountGenerateTaglineResponse:
      type: object
      properties:
        errorCode:
          $ref: '#/components/schemas/PlayerAccountAliasesV1AliasValidationReason'
        errorMessage:
          type: string
        isSuccess:
          type: boolean
        tag_line:
          type: string
    PlayerAccountIdToken:
      type: object
      properties:
        clientId:
          type: string
        expiry:
          type: integer
          format: int64
        nonce:
          type: string
        token:
          type: string
    PlayerAccountPlatformUser:
      type: object
      properties:
        id:
          type: string
        platform:
          type: string
    PlayerAccountPlayerAccountPluginConfig:
      type: object
      properties:
        accessToken:
          type: string
        playerAccountServiceUrl:
          type: string
        promotionBlockTimeDays:
          type: integer
          format: int64
    PlayerAccountPromotionV1AccountDetails:
      type: object
      properties:
        birth_date:
          type: string
        email_address:
          type: string
        newsletter:
          type: boolean
        password:
          type: string
        tou_agree:
          type: boolean
        username:
          type: string
    PlayerAccountPromotionV1AccountPromotionResponse:
      type: object
      properties:
        fields:
          $ref: '#/components/schemas/PlayerAccountPromotionV1AccountPromotionValidationFailures'
        message:
          type: string
        success:
          type: boolean
    PlayerAccountPromotionV1AccountPromotionValidationFailures:
      type: object
      properties:
        birth_date:
          type: array
          items:
            type: string
        email_address:
          type: array
          items:
            type: string
        locale:
          type: array
          items:
            type: string
        newsletter:
          type: array
          items:
            type: string
        password:
          type: array
          items:
            type: string
        tou_agree:
          type: array
          items:
            type: string
        username:
          type: array
          items:
            type: string
    PlayerAccountPromotionV1BlockedPuuid:
      type: object
      properties:
        blockExpiryDate:
          type: integer
          format: int64
        puuid:
          type: string
    PlayerAccountPromotionV1BlockListResponse:
      type: object
      properties:
        blockList:
          type: array
          items:
            $ref: '#/components/schemas/PlayerAccountPromotionV1BlockedPuuid'
    PlayerAccountPromotionV1EligibilityCheckResponse:
      type: object
      properties:
        errorCode:
          type: integer
          format: int32
        errorMessage:
          type: string
        isEligible:
          type: boolean
        isTooYoung:
          type: boolean
    PlayerAccountPromotionV1UpdateableFieldsResponse:
      type: object
      properties:
        fields:
          type: array
          items:
            type: string
    PlayerAccountRegionLocale:
      type: object
      properties:
        locale:
          type: string
        region:
          type: string
    PlayerAccountRegionsV1EligibilityCheckResponse:
      type: object
      properties:
        canSelectRegion:
          type: boolean
        multipleRegionsAllowed:
          type: boolean
        selectedRegions:
          type: array
          items:
            type: string
    PlayerAccountRegionsV1RegionAssignmentResponse:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/PlayerAccountRegionsV1RegionAssignmentResponseMessage'
        success:
          type: boolean
    PlayerAccountRegionsV1RegionAssignmentResponseMessage:
      enum:
        - LOGIN_REQUIRED
        - SERVER_ERROR
        - AUTH_REFRESH_FAILED
        - REGION_ALREADY_ASSIGNED
        - REGION_EXISTS
        - REGION_NOT_ALLOWED
        - BAD_ENTITY_PARAMETER
        - NO_ERROR
      type: string
    PlayerAccountRSOAuthorizationTrustLevel:
      enum:
        - always_trusted
        - trusted_device
        - always_verify
      type: string
    PlayerAccountVngV1HomeBaseCountry:
      type: object
      properties:
        cached_home_base_country:
          type: string
        home_base_country:
          type: string
    PlayerAccountVngV1RegionLocale:
      type: object
      properties:
        locale:
          type: string
        region:
          type: string
    PlayerAccountVngV1StatusResponse:
      type: object
      properties:
        action_required:
          type: boolean
        action_url:
          type: string
        action_url_raw:
          type: string
    PlayerAccountVngV1WebUrlRequest:
      type: object
      properties:
        locale:
          type: string
        redirect_uri:
          type: string
    PlayerAccountVngV1WebUrlResponse:
      type: object
      properties:
        web_url:
          type: string
    PlayerAffinityAccessToken:
      type: object
      properties:
        clientId:
          type: string
        expiry:
          type: integer
          format: int64
        scopes:
          type: array
          items:
            type: string
        token:
          type: string
    PlayerAffinityAffinityV1AffinityInput:
      type: object
      properties:
        hint:
          type: string
        service:
          type: string
    PlayerAffinityAffinityV2AffinityProductInput:
      type: object
      properties:
        product:
          type: string
    PlayerAffinityAlias:
      type: object
      properties:
        game_name:
          type: string
        tag_line:
          type: string
    PlayerAffinityAuthorization:
      type: object
      properties:
        accessToken:
          $ref: '#/components/schemas/PlayerAffinityAccessToken'
        claims:
          $ref: '#/components/schemas/PlayerAffinityIdClaims'
        idToken:
          $ref: '#/components/schemas/PlayerAffinityIdToken'
        puuid:
          type: string
    PlayerAffinityDataSource:
      enum:
        - localCache
        - serverAuthoritative
      type: string
    PlayerAffinityIdClaims:
      type: object
      properties:
        acct:
          $ref: '#/components/schemas/PlayerAffinityAlias'
        acr:
          type: string
        country:
          type: string
        login_country:
          type: string
    PlayerAffinityIdToken:
      type: object
      properties:
        clientId:
          type: string
        expiry:
          type: integer
          format: int64
        nonce:
          type: string
        token:
          type: string
    PlayerAffinityPlayerAffinityCachedProductAffinity:
      type: object
      properties:
        affinities:
          type: object
          additionalProperties:
            type: string
        product:
          type: string
    PlayerAffinityPlayerAffinityCachedServiceAffinity:
      type: object
      properties:
        affinity:
          type: string
        service:
          type: string
    PlayerAffinityPlayerAffinityDataSource:
      enum:
        - localCache
        - serverAuthoritative
      type: string
    PlayerAffinityPlayerAffinityPluginConfig:
      type: object
      properties:
        accessToken:
          type: string
        playerAffinityServiceUrl:
          type: string
    PlayerAffinityPlayerAffinityPluginStatus:
      type: object
      properties:
        ready:
          type: boolean
    PlayerAffinityPlayerAffinityProductToken:
      type: object
      properties:
        affinities:
          type: object
          additionalProperties:
            type: string
        expiry:
          type: integer
          format: int64
        issuedAt:
          type: integer
          format: int64
        product:
          type: string
        puuid:
          type: string
        token:
          type: string
    PlayerAffinityPlayerAffinityServiceToken:
      type: object
      properties:
        affinity:
          type: string
        expiry:
          type: integer
          format: int64
        issuedAt:
          type: integer
          format: int64
        puuid:
          type: string
        service:
          type: string
        token:
          type: string
    PlayerAffinityPlayerAffinityShardInfo:
      type: object
      properties:
        product:
          type: string
        shard:
          type: string
        zone:
          type: string
    PlayerAffinityPlayerAffinityToken:
      type: object
      properties:
        affinity:
          type: string
        expiry:
          type: integer
          format: int64
        issuedAt:
          type: integer
          format: int64
        puuid:
          type: string
        service:
          type: string
        source:
          $ref: '#/components/schemas/PlayerAffinityPlayerAffinityDataSource'
        token:
          type: string
    PlayerAffinityPlayerAffinityTokenProduct:
      type: object
      properties:
        affinities:
          type: object
          additionalProperties:
            type: string
        expiry:
          type: integer
          format: int64
        issuedAt:
          type: integer
          format: int64
        product:
          type: string
        puuid:
          type: string
        source:
          $ref: '#/components/schemas/PlayerAffinityPlayerAffinityDataSource'
        token:
          type: string
    PlayerAffinityProductAffinityInput:
      type: object
      properties:
        product:
          type: string
    PlayerAffinityProductToken:
      type: object
      properties:
        affinities:
          type: object
          additionalProperties:
            type: string
        product:
          type: string
        source:
          $ref: '#/components/schemas/PlayerAffinityDataSource'
    PlayerAffinityServiceAffinityInput:
      type: object
      properties:
        hint:
          type: string
        service:
          type: string
    PlayerPreferencesPlayerPreferencesData:
      type: object
      properties:
        data:
          type: string
        type:
          type: string
    PlayerPreferencesRegionLocale:
      type: object
      properties:
        region:
          type: string
    PlayerProductsState:
      enum:
        - LoggedOut
        - WaitingForProducts
        - Complete
      type: string
    PlayerReportingAuthorization:
      type: object
      properties:
        puuid:
          type: string
    PlayerReportingGapsMailboxUpdated:
      type: object
      properties:
        product:
          type: string
    PlayerReportingLocalizedReporterFeedbackMessage:
      type: object
      properties:
        category:
          type: string
        locale:
          type: string
        message:
          type: string
        title:
          type: string
    PlayerReportingMail:
      type: object
      properties:
        createdAt:
          type: integer
          format: int64
        mailId:
          type: string
        mailType:
          $ref: '#/components/schemas/PlayerReportingMailType'
        message:
          type: string
        state:
          $ref: '#/components/schemas/PlayerReportingMailState'
    PlayerReportingMailboxStatusUpdated:
      type: object
      properties:
        lastUpdateReceived:
          type: integer
          format: int64
    PlayerReportingMailState:
      enum:
        - NEW
        - READ
        - ACKNOWLEDGED
      type: string
    PlayerReportingMailType:
      enum:
        - STANDARD
        - ACK_REQUIRED
      type: string
    PlayerReportingPlayerAffinityInput:
      type: object
      properties:
        hint:
          type: string
        service:
          type: string
    PlayerReportingPlayerAffinityStatus:
      type: object
      properties:
        ready:
          type: boolean
    PlayerReportingPlayerAffinityToken:
      type: object
      properties:
        affinity:
          type: string
    PlayerReportingPlayerReport:
      type: object
      properties:
        categories:
          type: array
          items:
            type: string
        comment:
          type: string
        location:
          type: string
        match_token:
          type: string
        offender_puuid:
          type: string
    PlayerReportingPlayerReportV2:
      type: object
      properties:
        categories:
          type: array
          items:
            type: string
        comment:
          type: string
        location:
          type: string
        offenderId:
          type: string
        token:
          type: string
        tokenType:
          type: string
    PlayerReportingRegionLocale:
      type: object
      properties:
        locale:
          type: string
        region:
          type: string
    PlayerReportingReporterFeedback:
      type: object
      properties:
        category:
          type: string
        messageId:
          type: string
    PlayerReportingReporterFeedbackAcknowledgedEvent:
      type: object
      properties:
        messageId:
          type: string
        product:
          type: string
        puuid:
          type: string
        reportCategory:
          type: string
        success:
          type: boolean
    PlayerReportingReporterFeedbackDto:
      type: object
      properties:
        category:
          type: string
    PlayerReportingReporterFeedbackReceivedEvent:
      type: object
      properties:
        messageId:
          type: string
        product:
          type: string
        puuid:
          type: string
        reportCategory:
          type: string
        success:
          type: boolean
    PlayerReportingRequestMailParameters:
      type: object
      properties:
        count:
          type: integer
          format: int64
        includedStates:
          type: array
          items:
            $ref: '#/components/schemas/PlayerReportingMailState'
        startIndex:
          type: integer
          format: int64
        tags:
          type: array
          items:
            type: string
    PlayerReportingUpdateMailStateRequest:
      type: object
      properties:
        mailId:
          type: string
        state:
          $ref: '#/components/schemas/PlayerReportingMailState'
    PlayerSessionLifecycleAcceptance:
      enum:
        - WaitingForAllServiceData
        - AcceptanceRequired
        - Accepted
      type: string
    PlayerSessionLifecycleAccessToken:
      type: object
      properties:
        expiry:
          type: integer
          format: int64
        scopes:
          type: array
          items:
            type: string
        token:
          type: string
    PlayerSessionLifecycleAuthenticateGameCenterInput:
      type: object
      properties:
        gamecenter:
          $ref: '#/components/schemas/PlayerSessionLifecycleGameCenterInput'
        language:
          type: string
        remember:
          type: boolean
    PlayerSessionLifecycleAuthenticateNintendoInput:
      type: object
      properties:
        language:
          type: string
        nintendo:
          $ref: '#/components/schemas/PlayerSessionLifecycleNintendoInput'
        remember:
          type: boolean
    PlayerSessionLifecycleAuthenticatePlaystationInput:
      type: object
      properties:
        language:
          type: string
        playstation:
          $ref: '#/components/schemas/PlayerSessionLifecyclePlaystationInput'
        remember:
          type: boolean
    PlayerSessionLifecycleAuthenticateXboxInput:
      type: object
      properties:
        language:
          type: string
        remember:
          type: boolean
        xbox:
          $ref: '#/components/schemas/PlayerSessionLifecycleXboxInput'
    PlayerSessionLifecycleAuthenticationResponse:
      type: object
      properties:
        country:
          type: string
        error:
          type: string
        healup:
          $ref: '#/components/schemas/PlayerSessionLifecycleHealupResponseDetails'
        multifactor:
          $ref: '#/components/schemas/PlayerSessionLifecycleMultifactorResponseDetails'
        signup:
          $ref: '#/components/schemas/PlayerSessionLifecycleSignupResponseDetails'
        success:
          $ref: '#/components/schemas/PlayerSessionLifecycleSuccessResponseDetails'
        type:
          $ref: '#/components/schemas/PlayerSessionLifecycleResponseType'
    PlayerSessionLifecycleAuthenticationTypeEnum:
      enum:
        - SSOAuth
        - RiotAuth
        - None
      type: string
    PlayerSessionLifecycleAuthMethodConfig:
      type: object
      properties:
        clientId:
          type: string
        method:
          type: string
        mode:
          type: string
        scopes:
          type: array
          items:
            type: string
        status:
          type: string
    PlayerSessionLifecycleAuthorizationRequest:
      type: object
      properties:
        authenticationType:
          $ref: '#/components/schemas/PlayerSessionLifecycleAuthenticationTypeEnum'
        claims:
          type: array
          items:
            type: string
        clientId:
          type: string
        prompt:
          type: string
        scope:
          type: array
          items:
            type: string
        trustLevels:
          type: array
          items:
            $ref: '#/components/schemas/PlayerSessionLifecycleRSOAuthorizationTrustLevel'
    PlayerSessionLifecycleAuthorizationResponse:
      type: object
      properties:
        authorization:
          $ref: '#/components/schemas/PlayerSessionLifecycleImplicitAuthorization'
        country:
          type: string
        type:
          $ref: '#/components/schemas/PlayerSessionLifecycleAuthorizationResponseType'
    PlayerSessionLifecycleAuthorizationResponseType:
      enum:
        - unknown_authorization_response
        - needs_authentication
        - needs_reauthentication
        - authorized
      type: string
    PlayerSessionLifecycleEntitlementsToken:
      type: object
      properties:
        entitlements:
          type: array
          items:
            type: string
        expiry:
          type: integer
          format: int64
        token:
          type: string
    PlayerSessionLifecycleGameCenterInput:
      type: object
      properties:
        bundle_id:
          type: string
        player_id:
          type: string
        public_key_url:
          type: string
        salt:
          type: string
        signature:
          type: string
        timestamp:
          type: string
    PlayerSessionLifecycleHealupResponseDetails:
      type: object
      properties:
        auth_method:
          type: string
        required_fields:
          type: array
          items:
            type: string
        required_fields_hints:
          type: object
          additionalProperties:
            type: ''
    PlayerSessionLifecycleIdToken:
      type: object
      properties:
        expiry:
          type: integer
          format: int64
        token:
          type: string
    PlayerSessionLifecycleImplicitAuthorization:
      type: object
      properties:
        accessToken:
          $ref: '#/components/schemas/PlayerSessionLifecycleAccessToken'
        idToken:
          $ref: '#/components/schemas/PlayerSessionLifecycleIdToken'
    PlayerSessionLifecycleInitiateLoginSessionRequest:
      type: object
      properties:
        loginStrategy:
          $ref: '#/components/schemas/PlayerSessionLifecycleLoginStrategyType'
        persistLogin:
          type: boolean
        requireRiotID:
          type: boolean
        scopes:
          type: array
          items:
            type: string
    PlayerSessionLifecycleLoginStrategyType:
      enum:
        - riot_identity
        - google
        - game_center
        - facebook
        - apple
        - nintendo
        - xbox
        - playstation
      type: string
    PlayerSessionLifecycleMultifactorDetails:
      type: object
      properties:
        email:
          type: string
        method:
          $ref: '#/components/schemas/PlayerSessionLifecycleMultifactorMethod'
    PlayerSessionLifecycleMultifactorMethod:
      enum:
        - method_not_set
        - email
        - authenticator
        - sms
        - push
      type: string
    PlayerSessionLifecycleMultifactorResponseDetails:
      type: object
      properties:
        email:
          type: string
        method:
          type: string
        methods:
          type: array
          items:
            type: string
        mode:
          type: string
    PlayerSessionLifecycleNintendoAccountAuthorization:
      type: object
      properties:
        code:
          type: string
        idToken:
          type: string
    PlayerSessionLifecycleNintendoAccountAuthorizationParameters:
      type: object
      properties:
        scopes:
          type: string
        showUserSelector:
          type: boolean
    PlayerSessionLifecycleNintendoAccountGetNetworkServiceAccountParameters:
      type: object
      properties:
        showUserSelector:
          type: boolean
    PlayerSessionLifecycleNintendoAccountNetworkServiceAccount:
      type: object
      properties:
        idToken:
          type: string
    PlayerSessionLifecycleNintendoInput:
      type: object
      properties:
        authorization_code:
          type: string
        id_token:
          type: string
        nsa_token:
          type: string
    PlayerSessionLifecyclePlayerAffinityProductToken:
      type: object
      properties:
        affinities:
          type: object
          additionalProperties:
            type: string
        expiry:
          type: integer
          format: int64
        issuedAt:
          type: integer
          format: int64
        product:
          type: string
        puuid:
          type: string
        token:
          type: string
    PlayerSessionLifecyclePlayerSessionState:
      type: object
      properties:
        accessToken:
          $ref: '#/components/schemas/PlayerSessionLifecycleAccessToken'
        actionRequired:
          type: boolean
        config:
          $ref: '#/components/schemas/PlayerSessionLifecycleInitiateLoginSessionRequest'
        errorCode:
          type: string
        idToken:
          $ref: '#/components/schemas/PlayerSessionLifecycleIdToken'
        loginCountry:
          type: string
        loginState:
          $ref: '#/components/schemas/PlayerSessionLifecyclePlayerSessionStateType'
        suggestedActions:
          type: array
          items:
            $ref: '#/components/schemas/PlayerSessionLifecycleSuggestedAction'
        userInfo:
          type: object
          additionalProperties:
            type: ''
    PlayerSessionLifecyclePlayerSessionStateType:
      enum:
        - PendingInitialization
        - Initializing
        - PendingClientId
        - PendingCreateAuthorization
        - PendingPlatformAuthorizationConsent
        - PendingProviderCredentials
        - PendingAuthentication
        - PendingSignup
        - PendingHealup
        - LoginTokenExchange
        - PendingForget
        - PendingConsent
        - PendingEulaData
        - PendingEulaAcceptance
        - PendingRiotID
        - Authorized
        - Error
      type: string
    PlayerSessionLifecyclePlaystationAccountAuthorization:
      type: object
      properties:
        authorization_code:
          type: string
        environment:
          type: string
    PlayerSessionLifecyclePlaystationAccountAuthorizationParameters:
      type: object
      properties:
        clientID:
          type: string
        scopes:
          type: array
          items:
            type: string
    PlayerSessionLifecyclePlaystationInput:
      type: object
      properties:
        authorization_code:
          type: string
        environment:
          type: string
    PlayerSessionLifecyclePluginConfigResponse:
      type: object
      properties:
        methods:
          type: array
          items:
            $ref: '#/components/schemas/PlayerSessionLifecycleAuthMethodConfig'
        service_url:
          type: string
    PlayerSessionLifecycleReadyState:
      type: object
      properties:
        ready:
          type: boolean
    PlayerSessionLifecycleResponseType:
      enum:
        - auth
        - healup
        - signup
        - success
        - error
      type: string
    PlayerSessionLifecycleRSOAuthorizationTrustLevel:
      enum:
        - always_trusted
        - trusted_device
        - always_verify
      type: string
    PlayerSessionLifecycleSessionLoginToken:
      type: object
      properties:
        authentication_type:
          $ref: '#/components/schemas/PlayerSessionLifecycleAuthenticationTypeEnum'
        code_verifier:
          type: string
        login_token:
          type: string
        persist_login:
          type: boolean
    PlayerSessionLifecycleSessionResponse:
      type: object
      properties:
        authenticationType:
          $ref: '#/components/schemas/PlayerSessionLifecycleAuthenticationTypeEnum'
        country:
          type: string
        multifactor:
          $ref: '#/components/schemas/PlayerSessionLifecycleMultifactorDetails'
        persistLogin:
          type: boolean
        state:
          $ref: '#/components/schemas/PlayerSessionLifecycleSessionState'
        type:
          $ref: '#/components/schemas/PlayerSessionLifecycleSessionResponseType'
    PlayerSessionLifecycleSessionResponseType:
      enum:
        - unknown_authentication_response
        - needs_credentials
        - needs_password
        - needs_multifactor_verification
        - authenticated
        - error
      type: string
    PlayerSessionLifecycleSessionState:
      enum:
        - Created
        - Updated
        - Destroyed
      type: string
    PlayerSessionLifecycleSignupLinkDetails:
      type: object
      properties:
        auth_method:
          type: string
        options:
          type: array
          items:
            type: string
        suggested:
          type: array
          items:
            type: string
    PlayerSessionLifecycleSignupResponseDetails:
      type: object
      properties:
        auth_method:
          type: string
        link:
          $ref: '#/components/schemas/PlayerSessionLifecycleSignupLinkDetails'
        required_fields:
          type: array
          items:
            type: string
        required_fields_hints:
          type: object
          additionalProperties:
            type: ''
    PlayerSessionLifecycleSuccessResponseDetails:
      type: object
      properties:
        linked:
          type: string
        login_token:
          type: string
        redirect_url:
          type: string
    PlayerSessionLifecycleSuggestedAction:
      type: object
      properties:
        description:
          type: string
        endpoint:
          type: string
        method:
          type: string
    PlayerSessionLifecycleUserInfo:
      type: object
      properties:
        userInfo:
          type: string
    PlayerSessionLifecycleXboxAccountAuthorization:
      type: object
      properties:
        user_hash:
          type: string
        xsts_token:
          type: string
    PlayerSessionLifecycleXboxAccountAuthorizationParameters:
      type: object
      properties:
        authenticatorUrl:
          type: string
        showUserSelector:
          type: boolean
    PlayerSessionLifecycleXboxInput:
      type: object
      properties:
        user_hash:
          type: string
        xsts_token:
          type: string
    PlayRestrictionsPlayRestrictionV1Data:
      type: object
      properties:
        chat_enabled:
          type: boolean
        play_restriction_setting:
          $ref: '#/components/schemas/PlayRestrictionsPlayRestrictionV1Settings'
    PlayRestrictionsPlayRestrictionV1Settings:
      enum:
        - none
        - platform_only
      type: string
    PlayRestrictionsPluginCallerId_MockCallerId:
      type: object
      properties:
        patchlineId:
          type: string
        productId:
          type: string
    PlayRestrictionsPluginCallerId_ProductSession:
      type: object
      properties:
        patchlineFullName:
          type: string
        patchlineId:
          type: string
        productId:
          type: string
        version:
          type: string
    PlaystationAccountAuthorization:
      type: object
      properties:
        authorization_code:
          type: string
        environment:
          type: string
    PlaystationAccountAuthorizationParameters:
      type: object
      properties:
        clientID:
          type: string
        scopes:
          type: array
          items:
            type: string
    PluginDescriptionResource:
      type: object
      properties:
        name:
          type: string
        pluginDependencies:
          type: array
          items:
            type: string
        riotMeta:
          $ref: '#/components/schemas/PluginMetadataResource'
    PluginLcdsEvent:
      type: object
      properties:
        body:
          type: object
        clientId:
          type: string
        subtopic:
          type: string
        typeName:
          type: string
    PluginLcdsResponse:
      type: object
      properties:
        body:
          type: object
        typeName:
          type: string
    PluginManagerResource:
      type: object
      properties:
        state:
          $ref: '#/components/schemas/PluginManagerState'
    PluginManagerState:
      enum:
        - NotReady
        - PluginsInitialized
      type: string
    PluginMetadataResource:
      type: object
      properties:
        app:
          type: string
        feature:
          type: string
        globalAssetBundles:
          type: array
          items:
            type: string
        hasBundledAssets:
          type: boolean
        implements:
          type: object
          additionalProperties:
            type: string
        perLocaleAssetBundles:
          type: object
          additionalProperties:
            type: object
        subtype:
          type: string
        threading:
          $ref: '#/components/schemas/PluginThreadingModel'
        type:
          type: string
    PluginRegionLocaleChangedEvent:
      type: object
      properties:
        locale:
          type: string
        region:
          type: string
    PluginResource:
      type: object
      properties:
        app:
          type: string
        assetBundleNames:
          type: array
          items:
            type: string
        dependencies:
          type: array
          items:
            $ref: '#/components/schemas/PluginResourceContract'
        dynLibFileName:
          type: string
        dynLibPath:
          type: string
        externalUri:
          type: string
        feature:
          type: string
        fullName:
          type: string
        implementedContracts:
          type: array
          items:
            $ref: '#/components/schemas/PluginResourceContract'
        isDynamicLibraryInited:
          type: boolean
        isDynamicLibraryLoaded:
          type: boolean
        mountedAssetBundles:
          type: object
          additionalProperties:
            type: string
        orderDynamicLibraryInited:
          type: integer
          format: int32
        orderDynamicLibraryLoaded:
          type: integer
          format: int32
        orderWADFileMounted:
          type: integer
          format: int32
        shortName:
          type: string
        subtype:
          type: string
        supertype:
          type: string
        threadingModel:
          type: string
    PluginResourceContract:
      type: object
      properties:
        fullName:
          type: string
    PluginResourceEvent:
      type: object
      properties:
        data:
          type: object
        eventType:
          $ref: '#/components/schemas/PluginResourceEventType'
        uri:
          type: string
    PluginResourceEventType:
      enum:
        - Create
        - Update
        - Delete
      type: string
    PluginServiceProxyResponse:
      type: object
      properties:
        error:
          type: string
        methodName:
          type: string
        payload:
          type: string
        serviceName:
          type: string
        status:
          type: string
        uuid:
          type: string
    PluginState:
      type: object
      properties:
        restartRequired:
          type: boolean
    PluginThreadingModel:
      enum:
        - dedicated
        - sequential
        - concurrent
        - parallel
      type: string
    PreparePermissionsRequest:
      type: object
      properties:
        paths:
          type: array
          items:
            type: string
    PrimeGamingPrimeGamingLoginResponse:
      type: object
      properties:
        amazonAccessToken:
          type: string
        status:
          $ref: '#/components/schemas/PrimeGamingPrimeGamingLoginStatus'
    PrimeGamingPrimeGamingLoginStatus:
      enum:
        - logged_out
        - logging_in
        - logged_in
        - logging_out
        - error
      type: string
    PrimeGamingPrimeGamingSupportStatus:
      type: object
      properties:
        details:
          type: string
        supported:
          type: boolean
    PrivacyPrivacySettings:
      type: object
      properties:
        canRequestTrackingPermission:
          type: boolean
        canUseTracking:
          type: boolean
        state:
          $ref: '#/components/schemas/PrivacyTrackingPermissionRequestState'
    PrivacyTrackingPermissionRequestState:
      enum:
        - Unrequested
        - Requesting
        - Completed
      type: string
    ProcessControlProcess:
      type: object
      properties:
        pid:
          type: integer
          format: int32
        restart-countdown-seconds:
          type: number
          format: float
        status:
          type: string
    ProductIntegrationAppImmediateRepairRequest:
      type: object
      properties:
        files:
          type: array
          items:
            type: string
        sessionId:
          type: string
    ProductIntegrationAppRepairApplyRequest:
      type: object
      properties:
        repairCode:
          $ref: '#/components/schemas/ProductIntegrationRepairCode'
        sessionId:
          type: string
    ProductIntegrationAppUpdateApplyRequest:
      type: object
      properties:
        sessionId:
          type: string
    ProductIntegrationAppUpdateStatus:
      type: object
      properties:
        updateAvailable:
          type: boolean
        updateRequired:
          type: boolean
    ProductIntegrationDebugAppUpdateStatus:
      type: object
      properties:
        patchlineId:
          type: string
        productId:
          type: string
        updateAvailable:
          type: boolean
        updateRequired:
          type: boolean
    ProductIntegrationDepsAppImmediateRepairRequest:
      type: object
      properties:
        files:
          type: array
          items:
            type: string
        sessionId:
          type: string
    ProductIntegrationDepsAppRepairApplyRequest:
      type: object
      properties:
        repairCode:
          $ref: '#/components/schemas/ProductIntegrationDepsRepairCode'
        sessionId:
          type: string
    ProductIntegrationDepsAppUpdateApplyRequest:
      type: object
      properties:
        sessionId:
          type: string
    ProductIntegrationDepsAppUpdateStatus:
      type: object
      properties:
        updateAvailable:
          type: boolean
        updateRequired:
          type: boolean
    ProductIntegrationDepsRepairCode:
      enum:
        - default
        - integrity_check_failed
        - immediate_repair
      type: string
    ProductIntegrationProductIntegrationAppImmediateRepairRequestBody:
      type: object
      properties:
        files:
          type: array
          items:
            type: string
    ProductIntegrationProductIntegrationAppImmediateRepairResponseBody:
      type: object
      properties:
        path:
          type: string
    ProductIntegrationProductIntegrationAppRepairBody:
      type: object
      properties:
        repairCode:
          $ref: '#/components/schemas/ProductIntegrationRepairCode'
    ProductIntegrationProductIntegrationAppUpdateStatus:
      type: object
      properties:
        updateAvailable:
          type: boolean
        updateRequired:
          type: boolean
    ProductIntegrationProductSession:
      type: object
      properties:
        patchlineFullName:
          type: string
        patchlineId:
          type: string
        productId:
          type: string
        version:
          type: string
    ProductIntegrationRepairCode:
      enum:
        - default
        - integrity_check_failed
        - immediate_repair
      type: string
    ProductLauncherAgeRestriction:
      type: object
      properties:
        productId:
          type: string
        restricted:
          type: boolean
    ProductLauncherBuildInfo:
      type: object
      properties:
        patchline:
          type: string
    ProductLauncherDataStoreDataPaths:
      type: object
      properties:
        userDataRoot:
          type: string
    ProductLauncherDataStoreDefaultProduct:
      type: object
      properties:
        arguments:
          type: array
          items:
            type: string
        executable:
          type: string
        id:
          type: string
        relative_path:
          type: string
    ProductLauncherDataStorePartnerProduct:
      type: object
      properties:
        arguments:
          type: array
          items:
            type: string
        executable:
          type: string
        id:
          type: string
        relative_path:
          type: string
    ProductLauncherDetachedSession:
      type: object
      properties:
        patchlineId:
          type: string
        pid:
          type: integer
          format: int32
        productId:
          type: string
    ProductLauncherLaunchConfiguration:
      type: object
      properties:
        arguments:
          type: array
          items:
            type: string
        executable:
          type: string
        locale:
          type: string
        voiceLocale:
          type: string
        workingDirectory:
          type: string
    ProductLauncherPatchlineResource:
      type: object
      properties:
        disallow_32bit_windows:
          type: boolean
        excluded_compat_modes:
          type: array
          items:
            type: string
        full_name:
          type: string
        install_full_path:
          type: string
        launch_disabled:
          type: boolean
        launcher_arguments:
          type: array
          items:
            type: string
        primary_executable:
          type: string
        release_id:
          type: string
        rogue_process_allow_list:
          type: array
          items:
            type: string
    ProductLauncherProductPatchlineResource:
      type: object
      properties:
        patchline:
          $ref: '#/components/schemas/ProductLauncherPatchlineResource'
    ProductLauncherRogueProcessResult:
      enum:
        - DidNotTerminate
        - FailedToTerminate
        - ProcessTerminated
        - ProcessWentAway
        - ProcessWentAwayDuringTerminate
      type: string
    ProductLauncherSession:
      type: object
      properties:
        exitCode:
          type: integer
          format: int64
        exitReason:
          type: string
        isInternal:
          type: boolean
        launchConfiguration:
          $ref: '#/components/schemas/ProductLauncherLaunchConfiguration'
        patchlineFullName:
          type: string
        patchlineId:
          type: string
        productId:
          type: string
        userAgent:
          type: string
        version:
          type: string
    ProductLauncherSessionHeartbeat:
      type: object
      properties:
        sessionTTL:
          type: integer
          format: int32
    ProductLauncherVngStatusResponse:
      type: object
      properties:
        action_required:
          type: boolean
    ProductLocalizationConfigType:
      enum:
        - public
        - player
      type: string
    ProductLocalizationContentCookies:
      type: object
      properties:
        content_id:
          type: string
        content_path:
          type: string
        cookies:
          type: array
          items:
            $ref: '#/components/schemas/ProductLocalizationCookie'
    ProductLocalizationCookie:
      type: object
      properties:
        domain:
          type: string
        expires:
          type: integer
          format: int64
        httponly:
          type: boolean
        name:
          type: string
        path:
          type: string
        secure:
          type: boolean
        url:
          type: string
        value:
          type: string
    ProductLocalizationPatchlineMetadata:
      type: object
      properties:
        config_type:
          $ref: '#/components/schemas/ProductLocalizationConfigType'
        content_cookies:
          type: array
          items:
            $ref: '#/components/schemas/ProductLocalizationContentCookies'
        content_paths:
          type: object
          additionalProperties:
            type: string
        full_name:
          type: string
        id:
          type: string
        product_id:
          type: string
    ProductLocalizationProductLocalizationData:
      type: object
      properties:
        cookies:
          type: array
          items:
            $ref: '#/components/schemas/ProductLocalizationCookie'
        translations_data:
          type: array
          items:
            $ref: '#/components/schemas/ProductLocalizationTranslationsData'
    ProductLocalizationProductMetadata:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        patchlines:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ProductLocalizationPatchlineMetadata'
    ProductLocalizationProductMetadataMap:
      type: object
      properties:
        products:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ProductLocalizationProductMetadata'
    ProductLocalizationTranslateRequest:
      type: object
      properties:
        blocking:
          type: boolean
        keys:
          type: array
          items:
            type: string
        locale:
          type: string
        patchline:
          type: string
        product_id:
          type: string
    ProductLocalizationTranslateResponse:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/ProductLocalizationTranslateResult'
    ProductLocalizationTranslateResult:
      type: object
      properties:
        found:
          type: boolean
        key:
          type: string
        product_id:
          type: string
        value:
          type: string
    ProductLocalizationTranslationsData:
      type: object
      properties:
        etag:
          type: string
        last_query_id:
          type: integer
          format: int32
        latest_response_id:
          type: integer
          format: int32
        locale:
          type: string
        response_code:
          type: integer
          format: int32
        translations:
          type: object
          additionalProperties:
            type: string
    ProductMetadataAppStoreUpdateInfo:
      type: object
      properties:
        appId:
          type: string
        appUrl:
          type: string
    ProductMetadataClientProductType:
      enum:
        - riot_game
        - thunderdome
        - forge
        - third_party
        - special_event
        - hidden
      type: string
    ProductMetadataConfigType:
      enum:
        - public
        - player
      type: string
    ProductMetadataConfigurationStatus:
      enum:
        - unknown
        - has_configuration
        - unsupported_region
        - unsupported_shard
        - unsupported_os
        - unsupported_32_bit_os
      type: string
    ProductMetadataContentCookies:
      type: object
      properties:
        content_id:
          type: string
        content_path:
          type: string
        cookies:
          type: array
          items:
            $ref: '#/components/schemas/ProductMetadataCookie'
    ProductMetadataCookie:
      type: object
      properties:
        domain:
          type: string
        expires:
          type: integer
          format: int64
        httponly:
          type: boolean
        name:
          type: string
        path:
          type: string
        secure:
          type: boolean
        url:
          type: string
        value:
          type: string
    ProductMetadataCookieVector:
      type: object
      properties:
        cookies:
          type: array
          items:
            $ref: '#/components/schemas/ProductMetadataCookie'
    ProductMetadataDebugClientConfigSource:
      type: object
      properties:
        parseRequired:
          type: boolean
        patchlines:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ProductMetadataPatchlineMetadata'
        products:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ProductMetadataProductDefinition'
        rawConfig:
          type: object
          additionalProperties:
            type: ''
    ProductMetadataDependency:
      type: object
      properties:
        args:
          type: array
          items:
            type: string
        elevate:
          type: boolean
        hash:
          type: string
        id:
          type: string
        min_version:
          type: string
        url:
          type: string
        valid_exit_codes:
          type: string
        version:
          type: string
    ProductMetadataDynamicTagHeuristics:
      type: object
      properties:
        countries:
          type: array
          items:
            type: string
    ProductMetadataDynamicTags:
      type: object
      properties:
        heuristics:
          $ref: '#/components/schemas/ProductMetadataDynamicTagHeuristics'
        tags:
          type: array
          items:
            type: string
    ProductMetadataInstallId:
      type: object
      properties:
        installId:
          type: string
    ProductMetadataLocaleDataResource:
      type: object
      properties:
        available_locales:
          type: array
          items:
            type: string
        default_locale:
          type: string
    ProductMetadataLoginCountry:
      type: object
      properties:
        login_country:
          type: string
    ProductMetadataPatchComponentMetadata:
      type: object
      properties:
        excludedPaths:
          type: array
          items:
            type: string
        id:
          type: string
        path:
          type: string
        sieveLabels:
          type: object
          additionalProperties:
            type: string
        sieveProductId:
          type: string
        tags:
          type: array
          items:
            type: string
    ProductMetadataPatchlineConfigurationMetadata:
      type: object
      properties:
        allowed_http_fallback_hostnames:
          type: array
          items:
            type: string
        app_store_update_info:
          $ref: '#/components/schemas/ProductMetadataAppStoreUpdateInfo'
        arguments:
          type: array
          items:
            type: string
        bundles_url:
          type: string
        delete_foreign_paths:
          type: boolean
        dependencies:
          type: array
          items:
            $ref: '#/components/schemas/ProductMetadataDependency'
        disallow_32bit_windows:
          type: boolean
        dynamic_tags:
          type: array
          items:
            $ref: '#/components/schemas/ProductMetadataDynamicTags'
        excluded_compat_modes:
          type: array
          items:
            type: string
        excluded_paths:
          type: array
          items:
            type: string
        id:
          type: string
        launch_disabled:
          type: boolean
        launchable_on_update_fail:
          type: boolean
        patch_notes_url:
          type: string
        patch_url:
          type: string
        patching:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ProductMetadataPatchSetMetadata'
        region_data:
          $ref: '#/components/schemas/ProductMetadataRegionDataResource'
        secondary_patchlines:
          type: array
          items:
            $ref: '#/components/schemas/ProductMetadataSecondaryPatchlineMetadata'
        seed_url:
          type: string
        tags:
          type: array
          items:
            type: string
        version:
          type: string
    ProductMetadataPatchlineMetadata:
      type: object
      properties:
        alias:
          $ref: '#/components/schemas/ProductMetadataProductAlias'
        allowed_http_fallback_hostnames:
          type: array
          items:
            type: string
        app_store_update_info:
          $ref: '#/components/schemas/ProductMetadataAppStoreUpdateInfo'
        available_platforms:
          type: array
          items:
            type: string
        bundles_url:
          type: string
        client_product_type:
          $ref: '#/components/schemas/ProductMetadataClientProductType'
        config_type:
          $ref: '#/components/schemas/ProductMetadataConfigType'
        configuration:
          type: string
        configuration_status:
          $ref: '#/components/schemas/ProductMetadataConfigurationStatus'
        content_cookies:
          type: array
          items:
            $ref: '#/components/schemas/ProductMetadataContentCookies'
        content_paths:
          type: object
          additionalProperties:
            type: string
        default_theme_manifest:
          type: string
        delete_foreign_paths:
          type: boolean
        dependencies:
          type: array
          items:
            $ref: '#/components/schemas/ProductMetadataDependency'
        disallow_32bit_windows:
          type: boolean
        dynamic_tags:
          type: array
          items:
            $ref: '#/components/schemas/ProductMetadataDynamicTags'
        excluded_compat_modes:
          type: array
          items:
            type: string
        excluded_paths:
          type: array
          items:
            type: string
        full_name:
          type: string
        had_install_settings_on_init:
          type: boolean
        icon_path:
          type: string
        id:
          type: string
        install_dir:
          type: string
        install_id:
          type: string
        install_size_bytes:
          type: integer
          format: int64
        launch_disabled:
          type: boolean
        launchable_on_update_fail:
          type: boolean
        launcher_arguments:
          type: array
          items:
            type: string
        locale_data:
          $ref: '#/components/schemas/ProductMetadataLocaleDataResource'
        matching_shards_data:
          type: object
          additionalProperties:
            type: string
        parent_patchline_id:
          type: string
        patch_notes:
          type: string
        patch_notes_url:
          type: string
        patch_url:
          type: string
        patching_metadata:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ProductMetadataPatchSetMetadata'
        path_name:
          type: string
        platform:
          type: string
        primary_executable:
          type: string
        product_id:
          type: string
        region_data:
          $ref: '#/components/schemas/ProductMetadataRegionDataResource'
        rogue_process_checklist:
          type: array
          items:
            type: string
        rogue_process_whitelist:
          type: array
          items:
            type: string
        rso_client_id:
          type: string
        rso_scopes:
          type: array
          items:
            type: string
        secondary_patchlines:
          type: array
          items:
            $ref: '#/components/schemas/ProductMetadataSecondaryPatchlineMetadata'
        seed_url:
          type: string
        shards_data:
          type: array
          items:
            $ref: '#/components/schemas/ProductMetadataShardsDataResource'
        supported_versions:
          type: string
        tags:
          type: array
          items:
            type: string
        theme_manifest:
          type: string
        version:
          type: string
    ProductMetadataPatchSetMetadata:
      type: object
      properties:
        components:
          type: array
          items:
            $ref: '#/components/schemas/ProductMetadataPatchComponentMetadata'
    ProductMetadataPlayerAffinityDataSource:
      enum:
        - localCache
        - serverAuthoritative
      type: string
    ProductMetadataPlayerAffinityPluginStatus:
      type: object
      properties:
        ready:
          type: boolean
    ProductMetadataPlayerAffinityProductToken:
      type: object
      properties:
        affinities:
          type: object
          additionalProperties:
            type: string
        product:
          type: string
        source:
          $ref: '#/components/schemas/ProductMetadataPlayerAffinityDataSource'
    ProductMetadataProductAlias:
      type: object
      properties:
        platforms:
          type: array
          items:
            type: string
        product_id:
          type: string
    ProductMetadataProductDefinition:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        patchlines:
          type: array
          items:
            type: string
    ProductMetadataProductDefinitionMap:
      type: object
      properties:
        productDefinitions:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ProductMetadataProductDefinition'
    ProductMetadataProductMetadata:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        patchlines:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ProductMetadataPatchlineMetadata'
    ProductMetadataProductMetadataMap:
      type: object
      properties:
        products:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ProductMetadataProductMetadata'
    ProductMetadataPublishState:
      enum:
        - NotPublished
        - Published
      type: string
    ProductMetadataRegionDataResource:
      type: object
      properties:
        available_regions:
          type: array
          items:
            type: string
        default_region:
          type: string
    ProductMetadataRegionLocale:
      type: object
      properties:
        locale:
          type: string
        region:
          type: string
    ProductMetadataScdCookie:
      type: object
      properties:
        cookie:
          type: string
        domain:
          type: string
        path:
          type: string
    ProductMetadataScdCookieVector:
      type: object
      properties:
        cookies:
          type: array
          items:
            $ref: '#/components/schemas/ProductMetadataScdCookie'
    ProductMetadataScdEnabled:
      enum:
        - Off
        - On
      type: string
    ProductMetadataSecondaryPatchlineMap:
      type: object
      properties:
        secondaryPatchlines:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ProductMetadataSecondaryPatchlineMetadata'
    ProductMetadataSecondaryPatchlineMetadata:
      type: object
      properties:
        allowed_http_fallback_hostnames:
          type: array
          items:
            type: string
        bundles_url:
          type: string
        dynamic_tags:
          type: array
          items:
            $ref: '#/components/schemas/ProductMetadataDynamicTags'
        excluded_paths:
          type: array
          items:
            type: string
        id:
          type: string
        path:
          type: string
        tags:
          type: array
          items:
            type: string
        url:
          type: string
    ProductMetadataShardsDataResource:
      type: object
      properties:
        game_shard_zone:
          type: string
        valid_shards:
          type: array
          items:
            type: string
    ProductPatchline:
      type: object
      properties:
        patchlineId:
          type: string
        productId:
          type: string
    ProductPatchlineInfo:
      type: object
      properties:
        patchlineId:
          type: string
        productId:
          type: string
        willAutoLaunch:
          type: boolean
    ProductRegistryContentCookies:
      type: object
      properties:
        content_id:
          type: string
        content_path:
          type: string
        cookies:
          type: array
          items:
            $ref: '#/components/schemas/ProductRegistryCookie'
    ProductRegistryCookie:
      type: object
      properties:
        domain:
          type: string
        expires:
          type: integer
          format: int64
        httponly:
          type: boolean
        name:
          type: string
        path:
          type: string
        secure:
          type: boolean
        url:
          type: string
        value:
          type: string
    ProductRegistryPatchline:
      type: object
      properties:
        auto_patching_enabled_by_player:
          type: boolean
        configuration_status:
          $ref: '#/components/schemas/ConfigurationStatus'
        full_name:
          type: string
        id:
          type: string
        install_full_path:
          type: string
        install_id:
          type: string
        launch_disabled:
          type: boolean
        launcher_component_id:
          type: string
        patching_ask_policy:
          type: string
        patching_policy:
          type: string
        primary_executable:
          type: string
        restart_required:
          type: boolean
        root_dir:
          type: string
        vanguard_dependency:
          type: boolean
    ProductRegistryProduct:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        patchlines:
          type: array
          items:
            $ref: '#/components/schemas/ProductRegistryPatchline'
    ProductRegistryProductPatchline:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        patchline:
          $ref: '#/components/schemas/ProductRegistryPatchline'
    ProductSession:
      type: object
      properties:
        exitCode:
          type: integer
          format: int64
        exitReason:
          type: string
        isInternal:
          type: boolean
        launchConfiguration:
          $ref: '#/components/schemas/LaunchConfiguration'
        patchlineId:
          type: string
        productId:
          type: string
    ProductSessionHeartbeatInfo:
      type: object
      properties:
        phase:
          $ref: '#/components/schemas/ProductSessionProductPhase'
        sessionTTL:
          type: integer
          format: int32
    ProductSessionLaunchConfiguration:
      type: object
      properties:
        arguments:
          type: array
          items:
            type: string
        executable:
          type: string
        locale:
          type: string
        voiceLocale:
          type: string
        workingDirectory:
          type: string
    ProductSessionProductPhase:
      enum:
        - None
        - Pending
        - Idle
        - Gameplay
      type: string
    ProductSessionSession:
      type: object
      properties:
        exitCode:
          type: integer
          format: int64
        exitReason:
          $ref: '#/components/schemas/ProductSessionTerminationReason'
        isInternal:
          type: boolean
        launchConfiguration:
          $ref: '#/components/schemas/ProductSessionLaunchConfiguration'
        patchlineFullName:
          type: string
        patchlineId:
          type: string
        phase:
          $ref: '#/components/schemas/ProductSessionProductPhase'
        productId:
          type: string
        version:
          type: string
    ProductSessionSessionHeartbeat:
      type: object
      properties:
        sessionTTL:
          type: integer
          format: int32
    ProductSessionTerminationReason:
      enum:
        - StillRunning
        - Interrupt
        - Exit
        - Timeout
        - Unknown
      type: string
    PublicProductsState:
      enum:
        - WaitingForProducts
        - Complete
      type: string
    PublishingContentData:
      type: object
      properties:
        contentGroups:
          type: array
          items:
            $ref: '#/components/schemas/PublishingContentMultigameContentGroup'
        items:
          type: array
          items:
            $ref: '#/components/schemas/PublishingContentNewsItem'
    PublishingContentLinks:
      type: object
      properties:
        first:
          type: string
        last:
          type: string
        next:
          type: string
        prev:
          type: string
        self:
          type: string
    PublishingContentMetadata:
      type: object
      properties:
        dateUpdated:
          type: string
        from:
          type: integer
          format: int32
        locale:
          type: string
        multigameContentGroupId:
          type: string
        multigamePromoChannelId:
          type: string
        to:
          type: integer
          format: int32
        totalItems:
          type: integer
          format: int32
        totalPages:
          type: integer
          format: int32
    PublishingContentMultigameContentGroup:
      type: object
      properties:
        icon:
          type: string
        id:
          type: string
        title:
          type: string
    PublishingContentNewsFeed:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/PublishingContentData'
        links:
          $ref: '#/components/schemas/PublishingContentLinks'
        metadata:
          $ref: '#/components/schemas/PublishingContentMetadata'
    PublishingContentNewsFeedRequest:
      type: object
      properties:
        from:
          type: integer
          format: int32
        locale:
          type: string
        multigameContentGroupId:
          type: string
        multigamePromoChannelId:
          type: string
    PublishingContentNewsItem:
      type: object
      properties:
        action:
          $ref: '#/components/schemas/PublishingContentNewsItemAction'
        category:
          $ref: '#/components/schemas/PublishingContentNewsItemCategory'
        cms:
          $ref: '#/components/schemas/PublishingContentNewsItemCms'
        description:
          type: string
        featureImage:
          $ref: '#/components/schemas/PublishingContentNewsItemFeatureImage'
        headline:
          type: string
        id:
          type: string
        product:
          $ref: '#/components/schemas/PublishingContentNewsItemProduct'
        publishedAt:
          type: string
        renderOptions:
          $ref: '#/components/schemas/PublishingContentNewsItemRenderOptions'
        renderType:
          type: string
        sendMobilePushNotification:
          type: boolean
        updatedAt:
          type: string
        videoLengthInSeconds:
          type: integer
          format: int32
    PublishingContentNewsItemAction:
      type: object
      properties:
        type:
          type: string
        url:
          type: string
        youtubeId:
          type: string
    PublishingContentNewsItemCategory:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
    PublishingContentNewsItemCms:
      type: object
      properties:
        contentType:
          type: string
        locale:
          type: string
        stack:
          type: string
        version:
          type: integer
          format: int32
    PublishingContentNewsItemFeatureImage:
      type: object
      properties:
        labelColor:
          type: string
        primaryColor:
          type: string
        secondaryColor:
          type: string
        url:
          type: string
    PublishingContentNewsItemProduct:
      type: object
      properties:
        icon:
          type: string
        id:
          type: string
    PublishingContentNewsItemRenderOptions:
      type: object
      properties:
        size:
          type: string
    RegionAssignmentResponse:
      type: object
      properties:
        message:
          type: string
        success:
          type: boolean
    RegionLocale:
      type: object
      properties:
        locale:
          type: string
        region:
          type: string
        webLanguage:
          type: string
        webRegion:
          type: string
    RegisterWatchPathRequest:
      type: object
      properties:
        path:
          type: string
    RemotingHelpFormat:
      enum:
        - Full
        - Epytext
        - Brief
        - Console
      type: string
      description: Help format for remoting functions and types.
    RemotingPrivilege:
      enum:
        - None
        - User
        - Admin
        - Local
      type: string
      description: Well-known privilege levels for bindable functions.
    RemotingSerializedFormat:
      enum:
        - JSON
        - YAML
        - MsgPack
      type: string
      description: Serialization format for remoting requests and results.
    RepairCode:
      enum:
        - default
        - integrity_check_failed
        - immediate_repair
      type: string
    RestrictionLaunchRestrictions:
      type: object
      properties:
        productId:
          type: string
        reason:
          type: string
        restrictionData:
          $ref: '#/components/schemas/RestrictionrestrictionData'
        scope:
          type: string
        type:
          type: string
    RestrictionrestrictionData:
      type: object
      properties:
        expirationMillis:
          type: integer
          format: int64
    RestrictionRestrictions:
      type: object
      properties:
        reason:
          type: string
        restrictionData:
          $ref: '#/components/schemas/RestrictionrestrictionData'
        scope:
          type: string
        type:
          type: string
    RiotClientAuthApiAlias:
      type: object
      properties:
        game_name:
          type: string
        tag_line:
          type: string
    RiotClientAuthApiAuthorization:
      type: object
      properties:
        accessToken:
          $ref: '#/components/schemas/RiotClientAuthRsoAuthAccessToken'
        authenticationType:
          type: string
        claims:
          $ref: '#/components/schemas/RiotClientAuthApiIdClaims'
        idToken:
          $ref: '#/components/schemas/RiotClientAuthRsoAuthIdToken'
        puuid:
          type: string
    RiotClientAuthApiClientDetails:
      type: object
      properties:
        clientId:
          type: string
    RiotClientAuthApiHomeBaseCountry:
      type: object
      properties:
        cached_home_base_country:
          type: string
        home_base_country:
          type: string
    RiotClientAuthApiIdClaims:
      type: object
      properties:
        acct:
          $ref: '#/components/schemas/RiotClientAuthApiAlias'
        acr:
          type: string
        country:
          type: string
        login_country:
          type: string
    RiotClientAuthApiLoginCountry:
      type: object
      properties:
        login_country:
          type: string
    RiotClientAuthApiUserInfo:
      type: object
      properties:
        acct:
          $ref: '#/components/schemas/RiotClientAuthApiAlias'
        country:
          type: string
        email_verified:
          type: boolean
        lol:
          $ref: '#/components/schemas/RiotClientAuthApiUserInfoLol'
        lol_account:
          $ref: '#/components/schemas/RiotClientAuthApiUserInfoSummoner'
        phone_number_verified:
          type: boolean
        player_plocale:
          type: string
        preferred_username:
          type: string
    RiotClientAuthApiUserInfoLol:
      type: object
      properties:
        cpid:
          type: string
        ploc:
          type: string
    RiotClientAuthApiUserInfoSummoner:
      type: object
      properties:
        summoner_name:
          type: string
    RiotClientAuthRsoAuthAccessToken:
      type: object
      properties:
        clientId:
          type: string
        expiry:
          type: integer
          format: int64
        scopes:
          type: array
          items:
            type: string
        token:
          type: string
    RiotClientAuthRsoAuthAuthorizationRequest:
      type: object
      properties:
        claims:
          type: array
          items:
            type: string
        clientId:
          type: string
        prompt:
          type: string
        scope:
          type: array
          items:
            type: string
        trustLevels:
          type: array
          items:
            $ref: '#/components/schemas/RiotClientAuthRsoAuthAuthorizationTrustLevel'
    RiotClientAuthRsoAuthAuthorizationResponse:
      type: object
      properties:
        authorization:
          $ref: '#/components/schemas/RiotClientAuthRsoAuthImplicitAuthorization'
        country:
          type: string
        type:
          $ref: '#/components/schemas/RiotClientAuthRsoAuthAuthorizationResponseType'
    RiotClientAuthRsoAuthAuthorizationResponseType:
      enum:
        - unknown_authorization_response
        - needs_authentication
        - needs_reauthentication
        - authorized
      type: string
    RiotClientAuthRsoAuthAuthorizationTrustLevel:
      enum:
        - always_trusted
        - trusted_device
        - always_verify
      type: string
    RiotClientAuthRsoAuthIdToken:
      type: object
      properties:
        clientId:
          type: string
        expiry:
          type: integer
          format: int64
        nonce:
          type: string
        token:
          type: string
    RiotClientAuthRsoAuthImplicitAuthorization:
      type: object
      properties:
        accessToken:
          $ref: '#/components/schemas/RiotClientAuthRsoAuthAccessToken'
        idToken:
          $ref: '#/components/schemas/RiotClientAuthRsoAuthIdToken'
    RiotClientAuthRsoAuthReadyState:
      type: object
      properties:
        ready:
          type: boolean
    RiotClientAuthRsoAuthUserInfo:
      type: object
      properties:
        userInfo:
          type: string
    RiotClientLifecycleStateBoundState:
      type: object
      properties:
        state:
          type: object
        subscribers:
          type: object
          additionalProperties:
            type: integer
            format: int32
    RiotClientLifecycleStatePlayerAffinityProductToken:
      type: object
      properties:
        state:
          $ref: '#/components/schemas/PlayerAffinityProductToken'
        subscribers:
          type: object
          additionalProperties:
            type: integer
            format: int32
    RiotClientLifecycleStateRegionLocale:
      type: object
      properties:
        locale:
          type: string
        region:
          type: string
    RiotLoginAuthenticationMethod:
      enum:
        - Riot
        - Google
        - GameCenter
        - Facebook
        - Apple
        - QQ
        - Wechat
        - Wegame
      type: string
    RiotLoginAuthorizationRequest:
      type: object
      properties:
        clientId:
          type: string
        prompt:
          type: string
        scope:
          type: array
          items:
            type: string
        trustLevels:
          type: array
          items:
            $ref: '#/components/schemas/RiotLoginRSOAuthorizationTrustLevel'
    RiotLoginAuthorizationResponse:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/RiotLoginAuthorizationResponseType'
    RiotLoginAuthorizationResponseType:
      enum:
        - needs_authentication
        - authorized
      type: string
    RiotLoginLoginPhase:
      enum:
        - unknown
        - pending
        - not_logged_in
        - logged_in
      type: string
    RiotLoginLoginResult:
      type: object
      properties:
        additionalFields:
          type: object
          additionalProperties:
            type: ''
        error:
          type: string
        isLoginSuccessful:
          type: boolean
        loginType:
          $ref: '#/components/schemas/RiotLoginLoginTypeEnum'
        rsoSignOnAttemptEvent:
          $ref: '#/components/schemas/RiotLoginRSOSignOnAttemptEvent'
    RiotLoginLoginStatus:
      type: object
      properties:
        persist:
          type: boolean
        phase:
          $ref: '#/components/schemas/RiotLoginLoginPhase'
    RiotLoginLoginTypeEnum:
      enum:
        - Invalid
        - NoLongLivedSession
        - LongLivedSessionRejected
        - LongLivedSessionAccepted
      type: string
    RiotLoginOutcome:
      enum:
        - Success
        - PrivateSettingsMissing
        - PrivateSettingsEmpty
        - RegionLocaleMissing
        - RegionMismatch
        - RegionDataMissing
        - NoLoginSessionCookies
        - SetPersistedLoginFailed
        - AuthRequestFailed
        - AuthResultNotAuthorized
      type: string
    RiotLoginPlatformUser:
      type: object
      properties:
        id:
          type: string
        platform:
          type: string
    RiotLoginProduct:
      type: object
      properties:
        patchline:
          type: string
        productId:
          type: string
    RiotLoginReadyState:
      type: object
      properties:
        ready:
          type: boolean
    RiotLoginRSOAuthorizationTrustLevel:
      enum:
        - always_trusted
        - trusted_device
        - always_verify
      type: string
    RiotLoginRSOSignOnAttemptEvent:
      type: object
      properties:
        authenticationMethod:
          $ref: '#/components/schemas/RiotLoginAuthenticationMethod'
        errorCode:
          type: string
        errorDescription:
          type: string
        errorName:
          type: string
        outcome:
          $ref: '#/components/schemas/RiotLoginOutcome'
        product:
          $ref: '#/components/schemas/RiotLoginProduct'
        signOnAttemptNumber:
          type: integer
          format: int32
        storedSessionState:
          $ref: '#/components/schemas/RiotLoginStoredSessionState'
    RiotLoginSessionResponse:
      type: object
      properties:
        error:
          type: string
        persistLogin:
          type: boolean
        type:
          $ref: '#/components/schemas/RiotLoginSessionResponseType'
    RiotLoginSessionResponseType:
      enum:
        - unknown_authentication_response
        - needs_credentials
        - needs_multifactor_verification
        - authenticated
        - error
      type: string
    RiotLoginStoredSessionState:
      enum:
        - Accepted
        - Rejected
        - Absent
      type: string
    RiotMessagingServiceAccessToken:
      type: object
      properties:
        expiry:
          type: integer
          format: int64
        token:
          type: string
    RiotMessagingServiceAcknowledgeBody:
      type: object
      properties:
        id:
          type: string
    RiotMessagingServiceEntitlementsToken:
      type: object
      properties:
        accessToken:
          type: string
        entitlements:
          type: array
          items:
            type: string
        issuer:
          type: string
        subject:
          type: string
        token:
          type: string
    RiotMessagingServiceMessage:
      type: object
      properties:
        ackRequired:
          type: boolean
        id:
          type: string
        payload:
          type: string
        resource:
          type: string
        service:
          type: string
        timestamp:
          type: integer
          format: int64
        version:
          type: string
    RiotMessagingServicePlayerServiceAffinityInput:
      type: object
      properties:
        hint:
          type: string
        service:
          type: string
    RiotMessagingServicePlayerServiceAffinityToken:
      type: object
      properties:
        affinity:
          type: string
        expiry:
          type: integer
          format: int64
        issuedAt:
          type: integer
          format: int64
        puuid:
          type: string
        service:
          type: string
        token:
          type: string
    RiotMessagingServiceSession:
      type: object
      properties:
        state:
          $ref: '#/components/schemas/RiotMessagingServiceState'
        token:
          type: string
        tokenType:
          $ref: '#/components/schemas/RiotMessagingServiceTokenType'
    RiotMessagingServiceState:
      enum:
        - Disconnecting
        - Disconnected
        - Connecting
        - SwitchingServers
        - Connected
      type: string
    RiotMessagingServiceTokenType:
      enum:
        - Unavailable
        - Access
        - Identity
      type: string
    RiotStatusBuildInfo:
      type: object
      properties:
        patchline:
          type: string
    RiotStatusConfigType:
      enum:
        - public
        - player
      type: string
    RiotStatusCookie:
      type: object
      properties:
        domain:
          type: string
        expires:
          type: integer
          format: int64
        httponly:
          type: boolean
        name:
          type: string
        path:
          type: string
        secure:
          type: boolean
        url:
          type: string
        value:
          type: string
    RiotStatusPatchlineMetadata:
      type: object
      properties:
        config_type:
          $ref: '#/components/schemas/RiotStatusConfigType'
        content_paths:
          type: object
          additionalProperties:
            type: string
        full_name:
          type: string
        id:
          type: string
        product_id:
          type: string
    RiotStatusProductMetadata:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        patchlines:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/RiotStatusPatchlineMetadata'
    RiotStatusProductMetadataMap:
      type: object
      properties:
        products:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/RiotStatusProductMetadata'
    RmsMessage:
      type: object
      properties:
        ackRequired:
          type: boolean
        id:
          type: string
        payload:
          type: string
        resource:
          type: string
        service:
          type: string
        timestamp:
          type: integer
          format: int64
        version:
          type: string
    RnetLifecycleLeagueRegionElectionResource:
      type: object
      properties:
        availableRegions:
          type: array
          items:
            type: string
        canSelectRegion:
          type: boolean
        multipleRegionsAllowed:
          type: boolean
        regionAssignmentResponseMessage:
          type: string
        selectedRegions:
          type: array
          items:
            type: string
    RnetLifecycleProductContext:
      type: object
      properties:
        patchlineId:
          type: string
        productId:
          type: string
        willAutoLaunch:
          type: boolean
    RnetLifecycleRegionAssignmentResponse:
      type: object
      properties:
        message:
          type: string
        success:
          type: boolean
    RnetLifecycleUxCommand:
      type: object
      properties:
        action:
          type: string
        parameters:
          type: object
        showUxIfHidden:
          type: boolean
    RnetPftExternalSurveyData:
      type: object
      properties:
        url:
          type: string
    RnetPftInternalSurveyData:
      type: object
      properties:
        questions:
          type: array
          items:
            $ref: '#/components/schemas/RnetPftSurveyQuestion'
    RnetPftSurvey:
      type: object
      properties:
        actions:
          type: array
          items:
            $ref: '#/components/schemas/RnetPftSurveyAction'
        caption:
          type: string
        display:
          type: string
        external-survey-data:
          $ref: '#/components/schemas/RnetPftExternalSurveyData'
        id:
          type: string
        internal-survey-data:
          $ref: '#/components/schemas/RnetPftInternalSurveyData'
        product-id:
          type: string
        survey-id:
          type: string
        title:
          type: string
        type:
          $ref: '#/components/schemas/RnetPftSurveyType'
    RnetPftSurveyAction:
      type: object
      properties:
        action:
          $ref: '#/components/schemas/RnetPftSurveyActionType'
        metadata:
          type: object
        timestamp:
          type: string
    RnetPftSurveyActionType:
      enum:
        - CREATE
        - EXPAND
        - SUBMIT
        - POPOUT
        - UPDATE
        - CLOSE
      type: string
    RnetPftSurveyQuestion:
      type: object
      properties:
        id:
          type: string
        response:
          type: string
        text:
          type: string
        type:
          $ref: '#/components/schemas/RnetPftSurveyQuestionType'
    RnetPftSurveyQuestionType:
      enum:
        - FREE_RESPONSE
        - LIKERT
      type: string
    RnetPftSurveyRequest:
      type: object
      properties:
        event-type:
          type: string
        metadata:
          type: object
        product-id:
          type: string
    RnetPftSurveyRequestResult:
      type: object
      properties:
        id:
          type: string
    RnetPftSurveyType:
      enum:
        - external
        - internal
      type: string
    RnetProductRegistryAppImmediateRepairRequest:
      type: object
      properties:
        files:
          type: array
          items:
            type: string
        sessionId:
          type: string
    RnetProductRegistryAppRepairApplyRequest:
      type: object
      properties:
        repairCode:
          $ref: '#/components/schemas/RnetProductRegistryRepairCode'
        sessionId:
          type: string
    RnetProductRegistryAppUpdateApplyRequest:
      type: object
      properties:
        sessionId:
          type: string
    RnetProductRegistryAppUpdateStatus:
      type: object
      properties:
        updateAvailable:
          type: boolean
        updateRequired:
          type: boolean
    RnetProductRegistryAuthorization:
      type: object
      properties:
        currentAccountId:
          type: integer
          format: int64
        currentPlatformId:
          type: string
        subject:
          type: string
    RnetProductRegistryAvailableDiskSpaceRequest:
      type: object
      properties:
        path:
          type: string
    RnetProductRegistryBackgroundPatchingState:
      enum:
        - Unknown
        - Disabled
        - Enabled
        - Priority
      type: string
    RnetProductRegistryClientProductType:
      enum:
        - riot_game
        - thunderdome
        - forge
        - third_party
        - special_event
        - hidden
      type: string
    RnetProductRegistryCombinedPatchState:
      enum:
        - awaiting_headers
        - unknown
        - updating
        - out_of_date
        - up_to_date
        - not_installed
        - bad_install_path
      type: string
    RnetProductRegistryConfigType:
      enum:
        - public
        - player
      type: string
    RnetProductRegistryConfigurationResource:
      type: object
      properties:
        allowed_http_fallback_hostnames:
          type: array
          items:
            type: string
        bundles_url:
          type: string
        delete_foreign_paths:
          type: boolean
        dependencies:
          type: array
          items:
            $ref: '#/components/schemas/RnetProductRegistryDependency'
        dynamic_tags:
          type: array
          items:
            $ref: '#/components/schemas/RnetProductRegistryDynamicTags'
        excluded_paths:
          type: array
          items:
            type: string
        id:
          type: string
        launchable_on_update_fail:
          type: boolean
        patch_notes_url:
          type: string
        patch_url:
          type: string
        secondary_patchlines:
          type: array
          items:
            $ref: '#/components/schemas/RnetProductRegistrySecondaryPatchline'
        seed_url:
          type: string
        tags:
          type: array
          items:
            type: string
        version:
          type: string
    RnetProductRegistryConfigurationStatus:
      enum:
        - unknown
        - has_configuration
        - unsupported_region
        - unsupported_shard
        - unsupported_os
        - unsupported_32_bit_os
      type: string
    RnetProductRegistryCookie:
      type: object
      properties:
        cookie:
          type: string
        domain:
          type: string
        path:
          type: string
    RnetProductRegistryCookies:
      type: object
      properties:
        cookies:
          type: array
          items:
            $ref: '#/components/schemas/RnetProductRegistryCookie'
        expires_in:
          type: integer
          format: int32
    RnetProductRegistryCreateShortcutsRequest:
      type: object
      properties:
        paths:
          type: array
          items:
            type: string
    RnetProductRegistryDependency:
      type: object
      properties:
        args:
          type: array
          items:
            type: string
        elevate:
          type: boolean
        hash:
          type: string
        id:
          type: string
        min_version:
          type: string
        url:
          type: string
        valid_exit_codes:
          type: string
        version:
          type: string
    RnetProductRegistryDependencyState:
      type: object
      properties:
        hash:
          type: string
        phase:
          $ref: '#/components/schemas/ThirdPartyDependencyStatusPhase'
        version:
          type: string
    RnetProductRegistryDirectorySizeRequest:
      type: object
      properties:
        path:
          type: string
    RnetProductRegistryDynamicTagHeuristics:
      type: object
      properties:
        countries:
          type: array
          items:
            type: string
    RnetProductRegistryDynamicTags:
      type: object
      properties:
        heuristics:
          $ref: '#/components/schemas/RnetProductRegistryDynamicTagHeuristics'
        tags:
          type: array
          items:
            type: string
    RnetProductRegistryError:
      type: object
      properties:
        code:
          type: string
        locked_file_info:
          $ref: '#/components/schemas/RnetProductRegistryLockedFileInfo'
        message:
          type: string
    RnetProductRegistryHomeBaseCountry:
      type: object
      properties:
        cached_home_base_country:
          type: string
        home_base_country:
          type: string
    RnetProductRegistryInstall:
      type: object
      properties:
        excluded_paths:
          type: array
          items:
            type: string
        id:
          type: string
        metadata_path:
          type: string
        path:
          type: string
    RnetProductRegistryInstallState:
      enum:
        - unknown
        - installed
        - not_installed
      type: string
    RnetProductRegistryLifecycleStateAppRepairBinding:
      type: object
      properties:
        state:
          $ref: '#/components/schemas/RnetProductRegistryLifecycleStateAppRepairBindingState'
        subscribers:
          type: object
          additionalProperties:
            type: integer
            format: int32
    RnetProductRegistryLifecycleStateAppRepairBindingState:
      type: object
      properties:
        patchlineId:
          type: string
        productId:
          type: string
        request:
          $ref: '#/components/schemas/RnetProductRegistryAppRepairApplyRequest'
    RnetProductRegistryLifecycleStateHomeBaseCountry:
      type: object
      properties:
        state:
          $ref: '#/components/schemas/RnetProductRegistryHomeBaseCountry'
        subscribers:
          type: object
          additionalProperties:
            type: integer
            format: int32
    RnetProductRegistryLifecycleStatePlayerAffinityProductToken:
      type: object
      properties:
        state:
          $ref: '#/components/schemas/RnetProductRegistryPlayerAffinityProductToken'
        subscribers:
          type: object
          additionalProperties:
            type: integer
            format: int32
    RnetProductRegistryLifecycleStateRegionLocale:
      type: object
      properties:
        state:
          $ref: '#/components/schemas/RnetProductRegistryRegionLocale'
        subscribers:
          type: object
          additionalProperties:
            type: integer
            format: int32
    RnetProductRegistryLocaleDataResource:
      type: object
      properties:
        available_locales:
          type: array
          items:
            type: string
        default_locale:
          type: string
    RnetProductRegistryLockedFileInfo:
      type: object
      properties:
        process_id:
          type: integer
          format: int64
        process_name:
          type: string
    RnetProductRegistryManifestProgress:
      type: object
      properties:
        bytes_to_download:
          type: integer
          format: int64
        downloaded_bytes:
          type: integer
          format: int64
    RnetProductRegistryMoveInstallOptions:
      type: object
      properties:
        new_path:
          type: string
    RnetProductRegistryMoveInstallStatus:
      type: object
      properties:
        error_message:
          type: string
        phase:
          $ref: '#/components/schemas/RnetProductRegistryMoveInstallStatusPhase'
        progress:
          type: number
          format: double
    RnetProductRegistryMoveInstallStatusPhase:
      enum:
        - Waiting
        - InProgress
        - Cancelling
        - Succeeded
        - Cancelled
        - Failed
        - Corrupted
        - Unstarted
      type: string
    RnetProductRegistryPatchingResource:
      type: object
      properties:
        combined_patch_state:
          $ref: '#/components/schemas/RnetProductRegistryCombinedPatchState'
        dependency_status:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ThirdPartyDependencyStatus'
        patch_requested:
          type: boolean
        patch_status:
          $ref: '#/components/schemas/RnetProductRegistryPatchStatus'
        repair_code:
          $ref: '#/components/schemas/RnetProductRegistryRepairCode'
        shards_data:
          type: object
          additionalProperties:
            type: string
        user_cancelled_patching:
          type: boolean
    RnetProductRegistryPatchline:
      type: object
      properties:
        alias:
          $ref: '#/components/schemas/RnetProductRegistryProductAlias'
        auto_patching_enabled_by_player:
          type: boolean
        available_platforms:
          type: array
          items:
            type: string
        client_product_type:
          $ref: '#/components/schemas/RnetProductRegistryClientProductType'
        configType:
          $ref: '#/components/schemas/RnetProductRegistryConfigType'
        configuration_status:
          $ref: '#/components/schemas/RnetProductRegistryConfigurationStatus'
        content_cookies:
          type: array
          items:
            $ref: '#/components/schemas/ProductRegistryContentCookies'
        content_paths:
          type: object
          additionalProperties:
            type: string
        default_theme_manifest:
          type: string
        dependencies:
          type: array
          items:
            $ref: '#/components/schemas/RnetProductRegistryDependency'
        dependencyStates:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/RnetProductRegistryDependencyState'
        disallow_32bit_windows:
          type: boolean
        excluded_compat_modes:
          type: array
          items:
            type: string
        full_name:
          type: string
        id:
          type: string
        install_dir:
          type: string
        install_full_path:
          type: string
        install_id:
          type: string
        install_size_bytes:
          type: integer
          format: int64
        launch_disabled:
          type: boolean
        launcher_arguments:
          type: array
          items:
            type: string
        locale_data:
          $ref: '#/components/schemas/RnetProductRegistryLocaleDataResource'
        patch_notes:
          type: string
        patch_status_known:
          type: boolean
        patching_ask_policy:
          type: string
        patching_policy:
          type: string
        path_name:
          type: string
        platform:
          type: string
        primary_executable:
          type: string
        product_install_move_status:
          type: object
        region_data:
          $ref: '#/components/schemas/RnetProductRegistryRegionDataResource'
        release_id:
          type: string
        restart_required:
          type: boolean
        rogue_process_allow_list:
          type: array
          items:
            type: string
        root_dir:
          type: string
        secondary_patchlines:
          type: array
          items:
            $ref: '#/components/schemas/RnetProductRegistrySecondaryPatchlineResource'
        settings:
          type: object
        shards_data:
          type: object
          additionalProperties:
            type: string
        theme_manifest:
          type: string
        vanguard_dependency:
          type: boolean
    RnetProductRegistryPatchlineMetadata:
      type: object
      properties:
        alias:
          $ref: '#/components/schemas/RnetProductRegistryProductAlias'
        allowed_http_fallback_hostnames:
          type: array
          items:
            type: string
        available_platforms:
          type: array
          items:
            type: string
        bundles_url:
          type: string
        client_product_type:
          $ref: '#/components/schemas/RnetProductRegistryClientProductType'
        config_type:
          $ref: '#/components/schemas/RnetProductRegistryConfigType'
        configuration:
          type: string
        configuration_status:
          $ref: '#/components/schemas/RnetProductRegistryConfigurationStatus'
        content_cookies:
          type: array
          items:
            $ref: '#/components/schemas/ProductRegistryContentCookies'
        content_paths:
          type: object
          additionalProperties:
            type: string
        default_theme_manifest:
          type: string
        delete_foreign_paths:
          type: boolean
        dependencies:
          type: array
          items:
            $ref: '#/components/schemas/RnetProductRegistryDependency'
        disallow_32bit_windows:
          type: boolean
        dynamic_tags:
          type: array
          items:
            $ref: '#/components/schemas/RnetProductRegistryDynamicTags'
        excluded_compat_modes:
          type: array
          items:
            type: string
        excluded_paths:
          type: array
          items:
            type: string
        full_name:
          type: string
        had_install_settings_on_init:
          type: boolean
        icon_path:
          type: string
        id:
          type: string
        install_dir:
          type: string
        install_id:
          type: string
        install_size_bytes:
          type: integer
          format: int64
        launch_disabled:
          type: boolean
        launchable_on_update_fail:
          type: boolean
        launcher_arguments:
          type: array
          items:
            type: string
        locale_data:
          $ref: '#/components/schemas/RnetProductRegistryLocaleDataResource'
        matching_shards_data:
          type: object
          additionalProperties:
            type: string
        parent_patchline_id:
          type: string
        patch_notes:
          type: string
        patch_notes_url:
          type: string
        patch_url:
          type: string
        path_name:
          type: string
        platform:
          type: string
        primary_executable:
          type: string
        product_id:
          type: string
        region_data:
          $ref: '#/components/schemas/RnetProductRegistryRegionDataResource'
        rogue_process_allow_list:
          type: array
          items:
            type: string
        rso_client_id:
          type: string
        rso_scopes:
          type: array
          items:
            type: string
        secondary_patchlines:
          type: array
          items:
            $ref: '#/components/schemas/RnetProductRegistrySecondaryPatchlineMetadata'
        seed_url:
          type: string
        shards_data:
          type: array
          items:
            $ref: '#/components/schemas/RnetProductRegistryShardsDataResource'
        supported_versions:
          type: string
        tags:
          type: array
          items:
            type: string
        theme_manifest:
          type: string
        version:
          type: string
    RnetProductRegistryPatchlineUpdate:
      type: object
      properties:
        install_path:
          type: string
        patching_ask_policy:
          type: string
        patching_policy:
          type: string
    RnetProductRegistryPatchRequest:
      type: object
      properties:
        allowedHttpFallbackHostnames:
          type: array
          items:
            type: string
        bundlesUrl:
          type: string
        delete_foreign_paths:
          type: boolean
        headers:
          type: object
          additionalProperties:
            type: string
        repair:
          type: boolean
        tags:
          type: array
          items:
            type: string
        temp_path:
          type: string
        url:
          type: string
    RnetProductRegistryPatchRequestOptions:
      type: object
      properties:
        createShortcut:
          type: boolean
        installPath:
          type: string
    RnetProductRegistryPatchStatus:
      type: object
      properties:
        error:
          $ref: '#/components/schemas/RnetProductRegistryError'
        launchable_on_update_fail:
          type: boolean
        progress:
          $ref: '#/components/schemas/RnetProductRegistryProgress'
        state:
          $ref: '#/components/schemas/RnetProductRegistryPatchStatusState'
        tags:
          type: array
          items:
            type: string
        url:
          type: string
    RnetProductRegistryPatchStatusState:
      enum:
        - updating
        - out_of_date
        - up_to_date
        - not_installed
        - pending_verify
        - repairing
      type: string
    RnetProductRegistryPhase:
      enum:
        - None
        - Manifest
        - Update
        - Repair
      type: string
    RnetProductRegistryPlayerAffinityProductToken:
      type: object
      properties:
        affinities:
          type: object
          additionalProperties:
            type: string
        product:
          type: string
    RnetProductRegistryPlayerProductsState:
      enum:
        - LoggedOut
        - WaitingForProducts
        - Complete
      type: string
    RnetProductRegistryPluginState:
      type: object
      properties:
        available:
          type: string
        enabled:
          type: boolean
        progress:
          $ref: '#/components/schemas/ThirdPartyDependencyStatus'
        restartRequired:
          type: boolean
        status:
          $ref: '#/components/schemas/RnetProductRegistryUpToDateStatus'
        version:
          type: string
    RnetProductRegistryPrepareDirectoryPermissionsRequest:
      type: object
      properties:
        paths:
          type: array
          items:
            type: string
    RnetProductRegistryPreviewDiff:
      type: object
      properties:
        cache_read_bytes:
          type: integer
          format: int64
        cache_write_bytes:
          type: integer
          format: int64
        disk_read_bytes:
          type: integer
          format: int64
        disk_size_diff:
          type: integer
          format: int64
        disk_write_bytes:
          type: integer
          format: int64
        network_bytes_compressed:
          type: integer
          format: int64
        new_bytes:
          type: integer
          format: int64
    RnetProductRegistryPreviewRequest:
      type: object
      properties:
        fast:
          type: boolean
        headers:
          type: object
          additionalProperties:
            type: string
        stage:
          type: integer
          format: int8
        tags:
          type: array
          items:
            type: string
        url:
          type: string
    RnetProductRegistryPreviewStatus:
      type: object
      properties:
        diff:
          $ref: '#/components/schemas/RnetProductRegistryPreviewDiff'
        error:
          $ref: '#/components/schemas/RnetProductRegistryError'
        state:
          $ref: '#/components/schemas/RnetProductRegistryPreviewStatusState'
        tags:
          type: array
          items:
            type: string
        url:
          type: string
    RnetProductRegistryPreviewStatusState:
      enum:
        - pending
        - done
        - inconsistent
      type: string
    RnetProductRegistryProductAlias:
      type: object
      properties:
        platforms:
          type: array
          items:
            type: string
        product_id:
          type: string
    RnetProductRegistryProductDefinition:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        patchlines:
          type: array
          items:
            type: string
    RnetProductRegistryProductDefinitionMap:
      type: object
      properties:
        productDefinitions:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/RnetProductRegistryProductDefinition'
    RnetProductRegistryProductInstallStateResource:
      type: object
      properties:
        has_installed_patchline:
          type: boolean
        id:
          type: string
        patchline_install_states:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/RnetProductRegistryInstallState'
    RnetProductRegistryProductMetadata:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        patchlines:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/RnetProductRegistryPatchlineMetadata'
    RnetProductRegistryProductMetadataMap:
      type: object
      properties:
        products:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/RnetProductRegistryProductMetadata'
    RnetProductRegistryProductPatchlineKey:
      type: object
      properties:
        patchlineId:
          type: string
        productId:
          type: string
    RnetProductRegistryProductPatchlineResourceV4:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        patchline:
          $ref: '#/components/schemas/RnetProductRegistryPatchline'
    RnetProductRegistryProductSession:
      type: object
      properties:
        patchlineId:
          type: string
        phase:
          type: string
        productId:
          type: string
    RnetProductRegistryProductV4:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        patchlines:
          type: array
          items:
            $ref: '#/components/schemas/RnetProductRegistryPatchline'
    RnetProductRegistryProgress:
      type: object
      properties:
        manifest:
          $ref: '#/components/schemas/RnetProductRegistryManifestProgress'
        phase:
          $ref: '#/components/schemas/RnetProductRegistryPhase'
        progress:
          type: number
          format: double
        repair:
          $ref: '#/components/schemas/RnetProductRegistryRepairProgress'
        update:
          $ref: '#/components/schemas/RnetProductRegistryUpdateProgress'
    RnetProductRegistryPublicProductsState:
      enum:
        - WaitingForProducts
        - Complete
      type: string
    RnetProductRegistryPublishState:
      enum:
        - NotPublished
        - Published
      type: string
    RnetProductRegistryRegionDataResource:
      type: object
      properties:
        available_regions:
          type: array
          items:
            type: string
        default_region:
          type: string
    RnetProductRegistryRegionLocale:
      type: object
      properties:
        locale:
          type: string
        region:
          type: string
    RnetProductRegistryRegisterWatchPathsRequest:
      type: object
      properties:
        path:
          type: string
    RnetProductRegistryRepairCode:
      enum:
        - default
        - integrity_check_failed
        - immediate_repair
      type: string
    RnetProductRegistryRepairProgress:
      type: object
      properties:
        bytes_to_repair:
          type: integer
          format: int64
        files_to_repair:
          type: integer
          format: int64
        repaired_bytes:
          type: integer
          format: int64
        repaired_files:
          type: integer
          format: int64
    RnetProductRegistryScdCookie:
      type: object
      properties:
        cookie:
          type: string
        domain:
          type: string
        path:
          type: string
    RnetProductRegistryScdCookies:
      type: object
      properties:
        cookies:
          type: array
          items:
            $ref: '#/components/schemas/RnetProductRegistryScdCookie'
        expires_in:
          type: integer
          format: int32
    RnetProductRegistrySecondaryPatchline:
      type: object
      properties:
        dynamic_tags:
          type: array
          items:
            $ref: '#/components/schemas/RnetProductRegistryDynamicTags'
        id:
          type: string
        path:
          type: string
        tags:
          type: array
          items:
            type: string
        url:
          type: string
    RnetProductRegistrySecondaryPatchlineMetadata:
      type: object
      properties:
        excluded_paths:
          type: array
          items:
            type: string
        id:
          type: string
        path:
          type: string
        tags:
          type: array
          items:
            type: string
        url:
          type: string
    RnetProductRegistrySecondaryPatchlineResource:
      type: object
      properties:
        id:
          type: string
        relativePath:
          type: string
    RnetProductRegistryShardsDataResource:
      type: object
      properties:
        game_shard_zone:
          type: string
        valid_shards:
          type: array
          items:
            type: string
    RnetProductRegistryUpdateProgress:
      type: object
      properties:
        bytes_to_download:
          type: integer
          format: int64
        bytes_to_read:
          type: integer
          format: int64
        bytes_to_write:
          type: integer
          format: int64
        downloaded_bytes:
          type: integer
          format: int64
        read_bytes:
          type: integer
          format: int64
        stage:
          type: integer
          format: int8
        written_bytes:
          type: integer
          format: int64
    RnetProductRegistryUpToDateStatus:
      enum:
        - UpToDate
        - Updating
        - UpdateAvailable
      type: string
    RnetSanitizerContainsSanitizedRequest:
      type: object
      properties:
        aggressiveScan:
          type: boolean
        level:
          type: integer
          format: int32
        text:
          type: string
    RnetSanitizerContainsSanitizedResponse:
      type: object
      properties:
        contains:
          type: boolean
    RnetSanitizerSanitizeRequest:
      type: object
      properties:
        aggressiveScan:
          type: boolean
        level:
          type: integer
          format: int32
        text:
          type: string
        texts:
          type: array
          items:
            type: string
    RnetSanitizerSanitizeResponse:
      type: object
      properties:
        modified:
          type: boolean
        text:
          type: string
        texts:
          type: array
          items:
            type: string
    RnetSanitizerSanitizerStatus:
      type: object
      properties:
        breakingCharsCount:
          type: integer
          format: int32
        filteredWordCountsByLevel:
          type: object
          additionalProperties:
            type: integer
            format: int32
        locale:
          type: string
        projectedCharsCount:
          type: integer
          format: int32
        ready:
          type: boolean
        region:
          type: string
        whitelistedWordCountsByLevel:
          type: object
          additionalProperties:
            type: integer
            format: int32
    RnetSelfUpdateBuildInfo:
      type: object
      properties:
        patchlineVisibleName:
          type: string
    RnetSelfUpdateInstall:
      type: object
      properties:
        metadata_path:
          type: string
        path:
          type: string
        seed_path:
          type: string
    RnetSelfUpdateManifestProgress:
      type: object
      properties:
        bytes_to_download:
          type: integer
          format: int64
        downloaded_bytes:
          type: integer
          format: int64
    RnetSelfUpdatePatchError:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
    RnetSelfUpdatePhase:
      enum:
        - None
        - Manifest
        - Update
        - Repair
        - Seed
      type: string
    RnetSelfUpdateProgress:
      type: object
      properties:
        manifest:
          $ref: '#/components/schemas/RnetSelfUpdateManifestProgress'
        phase:
          $ref: '#/components/schemas/RnetSelfUpdatePhase'
        progress:
          type: number
          format: double
        seed:
          $ref: '#/components/schemas/RnetSelfUpdateSeedProgress'
    RnetSelfUpdateRelease:
      type: object
      properties:
        error:
          $ref: '#/components/schemas/RnetSelfUpdateReleaseError'
        is_critical:
          type: boolean
        state:
          $ref: '#/components/schemas/RnetSelfUpdateReleaseState'
        url:
          type: string
    RnetSelfUpdateReleaseError:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
    RnetSelfUpdateReleaseState:
      enum:
        - updating
        - ready
        - failed
      type: string
    RnetSelfUpdateSeedProgress:
      type: object
      properties:
        bytes_to_download:
          type: integer
          format: int64
        downloaded_bytes:
          type: integer
          format: int64
    RnetSelfUpdateSeedRequest:
      type: object
      properties:
        headers:
          type: object
          additionalProperties:
            type: string
        url:
          type: string
    RnetSelfUpdateSeedStatus:
      type: object
      properties:
        error:
          $ref: '#/components/schemas/RnetSelfUpdatePatchError'
        progress:
          $ref: '#/components/schemas/RnetSelfUpdateProgress'
        state:
          $ref: '#/components/schemas/RnetSelfUpdateSeedStatusState'
        url:
          type: string
    RnetSelfUpdateSeedStatusState:
      enum:
        - seeding
        - up_to_date
        - out_of_date
        - pending_verify
      type: string
    RnetSelfUpdateStatus:
      type: object
      properties:
        release:
          $ref: '#/components/schemas/RnetSelfUpdateRelease'
    RsoAuthAccessToken:
      type: object
      properties:
        expiry:
          type: integer
          format: int64
        scopes:
          type: array
          items:
            type: string
        token:
          type: string
    RsoAuthAuthenticationTypeEnum:
      enum:
        - SSOAuth
        - RiotAuth
        - None
      type: string
    RsoAuthAuthError:
      type: object
      properties:
        error:
          type: string
        errorDescription:
          type: string
    RsoAuthAuthHint:
      type: object
      properties:
        context:
          type: object
          additionalProperties:
            type: ''
        required:
          type: boolean
        type:
          $ref: '#/components/schemas/RsoAuthAuthHintType'
    RsoAuthAuthHintType:
      enum:
        - email_verification
        - password_reset
        - parental_consent
        - ambiguous_username
        - alias_change_required
      type: string
    RsoAuthAuthorization:
      type: object
      properties:
        currentAccountId:
          type: integer
          format: int64
        currentPlatformId:
          type: string
        subject:
          type: string
    RsoAuthAuthorizationCode:
      type: object
      properties:
        code:
          type: string
        code_verifier:
          type: string
    RsoAuthAuthorizationKey:
      type: object
      properties:
        key:
          type: string
    RsoAuthAuthorizationKeyRequest:
      type: object
      properties:
        client_id:
          type: string
        prompt:
          type: string
        scopes:
          type: array
          items:
            type: string
    RsoAuthAuthorizationRequest:
      type: object
      properties:
        authenticationType:
          $ref: '#/components/schemas/RsoAuthAuthenticationTypeEnum'
        claims:
          type: array
          items:
            type: string
        clientId:
          type: string
        keepAlive:
          type: boolean
        prompt:
          type: string
        scope:
          type: array
          items:
            type: string
        trustLevels:
          type: array
          items:
            $ref: '#/components/schemas/RsoAuthRSOAuthorizationTrustLevel'
    RsoAuthAuthorizationResponse:
      type: object
      properties:
        authorization:
          $ref: '#/components/schemas/RsoAuthImplicitAuthorization'
        country:
          type: string
        type:
          $ref: '#/components/schemas/RsoAuthAuthorizationResponseType'
    RsoAuthAuthorizationResponseType:
      enum:
        - needs_authentication
        - needs_reauthentication
        - authorized
      type: string
    RsoAuthAuthorizationUpdateRequest:
      type: object
      properties:
        claims:
          type: array
          items:
            type: string
        prompt:
          type: string
        scope:
          type: array
          items:
            type: string
        trustLevels:
          type: array
          items:
            $ref: '#/components/schemas/RsoAuthRSOAuthorizationTrustLevel'
    RsoAuthConfigV3AMRValuesSupported:
      type: object
      properties:
        values:
          type: array
          items:
            $ref: '#/components/schemas/RsoAuthLoginAMR'
    RsoAuthConfigV3OpenIdConfiguration:
      type: object
      properties:
        config:
          type: object
          additionalProperties:
            type: ''
    RsoAuthConfigV3PartnerAuthConfig:
      type: object
      properties:
        config:
          type: object
          additionalProperties:
            type: ''
    RsoAuthConfigV3ReadyState:
      type: object
      properties:
        ready:
          type: boolean
    RsoAuthDeviceId:
      type: object
      properties:
        collectorServerName:
          type: string
        frameUrl:
          type: string
        installId:
          type: string
        merchantId:
          type: string
        sessionId:
          type: string
    RsoAuthenticatorAuthConfigResponse:
      type: object
      properties:
        methods:
          type: array
          items:
            $ref: '#/components/schemas/RsoAuthenticatorV1AuthMethodConfig'
    RsoAuthenticatorAuthenticationTypeEnum:
      enum:
        - SSOAuth
      type: string
    RsoAuthenticatorHttpCookie:
      type: object
      properties:
        domain:
          type: string
        expiryTime:
          type: integer
          format: int64
        hostOnly:
          type: boolean
        httpOnly:
          type: boolean
        name:
          type: string
        path:
          type: string
        persistent:
          type: boolean
        secureOnly:
          type: boolean
        value:
          type: string
    RsoAuthenticatorPlatformUser:
      type: object
      properties:
        id:
          type: string
        platform:
          type: string
    RsoAuthenticatorPluginConfigResponse:
      type: object
      properties:
        methods:
          type: array
          items:
            $ref: '#/components/schemas/RsoAuthenticatorV1AuthMethodConfig'
        service_url:
          type: string
    RsoAuthenticatorReadyState:
      type: object
      properties:
        ready:
          type: boolean
    RsoAuthenticatorRegionLocale:
      type: object
      properties:
        locale:
          type: string
        region:
          type: string
    RsoAuthenticatorRsoAuthAccessToken:
      type: object
      properties:
        expiry:
          type: integer
          format: int64
        scopes:
          type: array
          items:
            type: string
        token:
          type: string
    RsoAuthenticatorRsoAuthAuthorizationRequest:
      type: object
      properties:
        clientId:
          type: string
        keepAlive:
          type: boolean
        prompt:
          type: string
        scope:
          type: array
          items:
            type: string
        trustLevels:
          type: array
          items:
            $ref: '#/components/schemas/RsoAuthenticatorRSOAuthorizationTrustLevel'
    RsoAuthenticatorRsoAuthAuthorizationResponse:
      type: object
      properties:
        authorization:
          $ref: '#/components/schemas/RsoAuthenticatorRsoAuthImplicitAuthorization'
        country:
          type: string
        type:
          $ref: '#/components/schemas/RsoAuthenticatorRsoAuthAuthorizationResponseType'
    RsoAuthenticatorRsoAuthAuthorizationResponseType:
      enum:
        - needs_authentication
        - needs_reauthentication
        - authorized
      type: string
    RsoAuthenticatorRsoAuthIdToken:
      type: object
      properties:
        expiry:
          type: integer
          format: int64
        token:
          type: string
    RsoAuthenticatorRsoAuthImplicitAuthorization:
      type: object
      properties:
        accessToken:
          $ref: '#/components/schemas/RsoAuthenticatorRsoAuthAccessToken'
        idToken:
          $ref: '#/components/schemas/RsoAuthenticatorRsoAuthIdToken'
    RsoAuthenticatorRSOAuthorizationTrustLevel:
      enum:
        - always_trusted
        - trusted_device
        - always_verify
      type: string
    RsoAuthenticatorRsoAuthSessionLoginToken:
      type: object
      properties:
        authentication_type:
          $ref: '#/components/schemas/RsoAuthenticatorAuthenticationTypeEnum'
        code_verifier:
          type: string
        login_token:
          type: string
        persist_login:
          type: boolean
    RsoAuthenticatorV1AuthenticateCodeInput:
      type: object
      properties:
        code:
          type: string
        language:
          type: string
        remember:
          type: boolean
    RsoAuthenticatorV1AuthenticateFacebookInput:
      type: object
      properties:
        facebook:
          $ref: '#/components/schemas/RsoAuthenticatorV1FacebookInput'
        language:
          type: string
        remember:
          type: boolean
    RsoAuthenticatorV1AuthenticateGameCenterInput:
      type: object
      properties:
        gamecenter:
          $ref: '#/components/schemas/RsoAuthenticatorV1GameCenterInput'
        language:
          type: string
        remember:
          type: boolean
    RsoAuthenticatorV1AuthenticateMultifactorInput:
      type: object
      properties:
        language:
          type: string
        multifactor:
          $ref: '#/components/schemas/RsoAuthenticatorV1MultifactorInput'
        remember:
          type: boolean
    RsoAuthenticatorV1AuthenticateNintendoInput:
      type: object
      properties:
        language:
          type: string
        nintendo:
          $ref: '#/components/schemas/RsoAuthenticatorV1NintendoInput'
        remember:
          type: boolean
    RsoAuthenticatorV1AuthenticateOpenIdConnectInput:
      type: object
      properties:
        language:
          type: string
        open_id:
          $ref: '#/components/schemas/RsoAuthenticatorV1OpenIdConnectInput'
        remember:
          type: boolean
    RsoAuthenticatorV1AuthenticatePlaystationInput:
      type: object
      properties:
        language:
          type: string
        playstation:
          $ref: '#/components/schemas/RsoAuthenticatorV1PlaystationInput'
        remember:
          type: boolean
    RsoAuthenticatorV1AuthenticateRiotIdentityInput:
      type: object
      properties:
        language:
          type: string
        remember:
          type: boolean
        riot_identity:
          $ref: '#/components/schemas/RsoAuthenticatorV1RiotIdentityInput'
    RsoAuthenticatorV1AuthenticateXboxInput:
      type: object
      properties:
        language:
          type: string
        remember:
          type: boolean
        xbox:
          $ref: '#/components/schemas/RsoAuthenticatorV1XboxInput'
    RsoAuthenticatorV1AuthenticationRedirectInput:
      type: object
      properties:
        language:
          type: string
        redirect_uri:
          type: string
    RsoAuthenticatorV1AuthenticationRequest:
      type: object
      properties:
        apple:
          $ref: '#/components/schemas/RsoAuthenticatorV1OpenIdConnectInput'
        clientId:
          type: string
        code:
          $ref: '#/components/schemas/RsoAuthenticatorV1CodeExchangeInput'
        facebook:
          $ref: '#/components/schemas/RsoAuthenticatorV1FacebookInput'
        gamecenter:
          $ref: '#/components/schemas/RsoAuthenticatorV1GameCenterInput'
        google:
          $ref: '#/components/schemas/RsoAuthenticatorV1OpenIdConnectInput'
        language:
          type: string
        multifactor:
          $ref: '#/components/schemas/RsoAuthenticatorV1MultifactorInput'
        nintendo:
          $ref: '#/components/schemas/RsoAuthenticatorV1NintendoInput'
        platform:
          type: string
        playstation:
          $ref: '#/components/schemas/RsoAuthenticatorV1PlaystationInput'
        remember:
          type: boolean
        riot_identity:
          $ref: '#/components/schemas/RsoAuthenticatorV1RiotIdentityInput'
        rso:
          $ref: '#/components/schemas/RsoAuthenticatorV1AuthenticationRsoInput'
        sdkVersion:
          type: string
        type:
          $ref: '#/components/schemas/RsoAuthenticatorV1ResponseType'
        xbox:
          $ref: '#/components/schemas/RsoAuthenticatorV1XboxInput'
    RsoAuthenticatorV1AuthenticationResponse:
      type: object
      properties:
        country:
          type: string
        error:
          type: string
        healup:
          $ref: '#/components/schemas/RsoAuthenticatorV1HealupResponseDetails'
        multifactor:
          $ref: '#/components/schemas/RsoAuthenticatorV1MultifactorResponseDetails'
        signup:
          $ref: '#/components/schemas/RsoAuthenticatorV1SignupResponseDetails'
        success:
          $ref: '#/components/schemas/RsoAuthenticatorV1SuccessResponseDetails'
        type:
          $ref: '#/components/schemas/RsoAuthenticatorV1ResponseType'
    RsoAuthenticatorV1AuthenticationRsoInput:
      type: object
      properties:
        access_token:
          type: string
        authentication_redirect_uri:
          type: string
        client_id:
          type: string
        id_token:
          type: string
    RsoAuthenticatorV1AuthMethodConfig:
      type: object
      properties:
        clientId:
          type: string
        method:
          type: string
        mode:
          type: string
        scopes:
          type: array
          items:
            type: string
        status:
          type: string
    RsoAuthenticatorV1CodeExchangeInput:
      type: object
      properties:
        code:
          type: string
        code_verifier:
          type: string
    RsoAuthenticatorV1DisplayMode:
      enum:
        - page
        - touch
      type: string
    RsoAuthenticatorV1FacebookInput:
      type: object
      properties:
        access_token:
          type: string
        app_id:
          type: string
        id_token:
          type: string
    RsoAuthenticatorV1GameCenterInput:
      type: object
      properties:
        bundle_id:
          type: string
        player_id:
          type: string
        public_key_url:
          type: string
        salt:
          type: string
        signature:
          type: string
        timestamp:
          type: string
    RsoAuthenticatorV1HealupResponseDetails:
      type: object
      properties:
        auth_method:
          type: string
        required_fields:
          type: array
          items:
            type: string
        required_fields_hints:
          type: object
          additionalProperties:
            type: ''
    RsoAuthenticatorV1LoginRequest:
      type: object
      properties:
        authentication_type:
          $ref: '#/components/schemas/RsoAuthenticatorAuthenticationTypeEnum'
        login_token:
          type: string
    RsoAuthenticatorV1MultifactorInput:
      type: object
      properties:
        action:
          type: string
        otp:
          type: string
        rememberDevice:
          type: boolean
    RsoAuthenticatorV1MultifactorResponseDetails:
      type: object
      properties:
        email:
          type: string
        method:
          type: string
        methods:
          type: array
          items:
            type: string
        mode:
          type: string
    RsoAuthenticatorV1MultifactorResponseType:
      enum:
        - method_not_set
        - email
        - authenticator
        - sms
        - push
      type: string
    RsoAuthenticatorV1NintendoInput:
      type: object
      properties:
        authorization_code:
          type: string
        id_token:
          type: string
        nsa_token:
          type: string
    RsoAuthenticatorV1OpenIdConnectInput:
      type: object
      properties:
        id_token:
          type: string
    RsoAuthenticatorV1PlaystationInput:
      type: object
      properties:
        authorization_code:
          type: string
        environment:
          type: string
    RsoAuthenticatorV1ResendLinkRequest:
      type: object
      properties:
        multifactor:
          $ref: '#/components/schemas/RsoAuthenticatorV1MultifactorInput'
        type:
          $ref: '#/components/schemas/RsoAuthenticatorV1ResponseType'
    RsoAuthenticatorV1ResponseType:
      enum:
        - auth
        - healup
        - signup
        - multifactor
        - success
        - error
      type: string
    RsoAuthenticatorV1RiotIdentityInput:
      type: object
      properties:
        password:
          type: string
        region:
          type: string
        username:
          type: string
    RsoAuthenticatorV1SignupCodeLinking:
      type: object
      properties:
        direct_url:
          type: string
        manual_url:
          type: string
        short_code:
          type: string
        short_url:
          type: string
        status_url:
          type: string
        uuid:
          type: string
    RsoAuthenticatorV1SignupLinkDetails:
      type: object
      properties:
        auth_method:
          type: string
        code_linking:
          $ref: '#/components/schemas/RsoAuthenticatorV1SignupCodeLinking'
        options:
          type: array
          items:
            type: string
        suggested:
          type: array
          items:
            type: string
    RsoAuthenticatorV1SignupLinkRequest:
      type: object
      properties:
        apple:
          $ref: '#/components/schemas/RsoAuthenticatorV1OpenIdConnectInput'
        code:
          $ref: '#/components/schemas/RsoAuthenticatorV1CodeExchangeInput'
        facebook:
          $ref: '#/components/schemas/RsoAuthenticatorV1FacebookInput'
        gamecenter:
          $ref: '#/components/schemas/RsoAuthenticatorV1GameCenterInput'
        google:
          $ref: '#/components/schemas/RsoAuthenticatorV1OpenIdConnectInput'
        nintendo:
          $ref: '#/components/schemas/RsoAuthenticatorV1NintendoInput'
        riot_identity:
          $ref: '#/components/schemas/RsoAuthenticatorV1RiotIdentityInput'
        type:
          $ref: '#/components/schemas/RsoAuthenticatorV1ResponseType'
    RsoAuthenticatorV1SignupResponseDetails:
      type: object
      properties:
        auth_method:
          type: string
        link:
          $ref: '#/components/schemas/RsoAuthenticatorV1SignupLinkDetails'
        required_fields:
          type: array
          items:
            type: string
        required_fields_hints:
          type: object
          additionalProperties:
            type: ''
    RsoAuthenticatorV1SuccessResponseDetails:
      type: object
      properties:
        linked:
          type: string
        login_token:
          type: string
        redirect_url:
          type: string
    RsoAuthenticatorV1WebAuthenticationMethod:
      enum:
        - none
        - apple
        - google
        - facebook
      type: string
    RsoAuthenticatorV1WebAuthenticationUrlRequest:
      type: object
      properties:
        authentication_callback_uri:
          type: string
        display:
          $ref: '#/components/schemas/RsoAuthenticatorV1DisplayMode'
        locale:
          type: string
        method:
          $ref: '#/components/schemas/RsoAuthenticatorV1WebAuthenticationMethod'
        product_id:
          type: string
        redirect_uri:
          type: string
        remember:
          type: boolean
        riot_theme:
          type: string
    RsoAuthenticatorV1WebLinkingStatus:
      enum:
        - NEW
        - PENDING
        - EXPIRED
        - COMPLETED
      type: string
    RsoAuthenticatorV1WebLinkingStatusResponse:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/RsoAuthenticatorV1WebLinkingStatus'
        ttl:
          type: integer
          format: int32
    RsoAuthenticatorV1XboxInput:
      type: object
      properties:
        user_hash:
          type: string
        xsts_token:
          type: string
    RsoAuthEntitlementsToken:
      type: object
      properties:
        entitlements:
          type: array
          items:
            type: string
        expiry:
          type: integer
          format: int64
        token:
          type: string
    RsoAuthGameCenterAuthCredentials:
      type: object
      properties:
        bundleId:
          type: string
        playerId:
          type: string
        publicKeyUrl:
          type: string
        salt:
          type: string
        signature:
          type: string
        timestamp:
          type: string
    RsoAuthGarenaPartnerCredentials:
      type: object
      properties:
        token:
          type: string
    RsoAuthGoogleAuthCredentials:
      type: object
      properties:
        idToken:
          type: string
    RsoAuthHttpCookie:
      type: object
      properties:
        domain:
          type: string
        hostOnly:
          type: boolean
        httpOnly:
          type: boolean
        name:
          type: string
        path:
          type: string
        persistent:
          type: boolean
        secureOnly:
          type: boolean
        value:
          type: string
    RsoAuthHttpCookieJar:
      type: object
      properties:
        cookies:
          type: array
          items:
            $ref: '#/components/schemas/RsoAuthHttpCookie'
    RsoAuthIdToken:
      type: object
      properties:
        expiry:
          type: integer
          format: int64
        token:
          type: string
    RsoAuthImplicitAuthorization:
      type: object
      properties:
        accessToken:
          $ref: '#/components/schemas/RsoAuthAccessToken'
        idToken:
          $ref: '#/components/schemas/RsoAuthIdToken'
    RsoAuthLoginAMR:
      enum:
        - cookie
        - password
        - captcha
        - mfa
        - signup
        - google_auth
        - game_center
        - facebook
        - apple
        - msdk_qq
        - msdk_wechat
        - wegame
        - tencent
        - garena
      type: string
    RsoAuthLogoutReason:
      enum:
        - generic
        - tokens_expired
      type: string
    RsoAuthMSDKQQPartnerCredentials:
      type: object
      properties:
        appId:
          type: string
        msdkKey:
          type: string
        openId:
          type: string
        openKey:
          type: string
    RsoAuthMSDKWeChatPartnerCredentials:
      type: object
      properties:
        accessToken:
          type: string
        appId:
          type: string
        msdkKey:
          type: string
        openId:
          type: string
    RsoAuthMultifactorDetails:
      type: object
      properties:
        email:
          type: string
        method:
          $ref: '#/components/schemas/RsoAuthMultifactorMethod'
        methods:
          type: array
          items:
            type: string
        mfaVersion:
          type: string
        multiFactorCodeLength:
          type: integer
          format: int64
    RsoAuthMultifactorMethod:
      enum:
        - method_not_set
        - email
        - authenticator
        - sms
        - push
      type: string
    RsoAuthPartnerCredentials:
      type: object
      properties:
        game_center:
          $ref: '#/components/schemas/RsoAuthGameCenterAuthCredentials'
        garena:
          $ref: '#/components/schemas/RsoAuthGarenaPartnerCredentials'
        google_auth:
          $ref: '#/components/schemas/RsoAuthGoogleAuthCredentials'
        msdk_qq:
          $ref: '#/components/schemas/RsoAuthMSDKQQPartnerCredentials'
        msdk_wechat:
          $ref: '#/components/schemas/RsoAuthMSDKWeChatPartnerCredentials'
        tencent:
          $ref: '#/components/schemas/RsoAuthTencentPartnerCredentials'
        wegame:
          $ref: '#/components/schemas/RsoAuthWeGamePartnerCredentials'
    RsoAuthPublicClientConfig:
      type: object
      properties:
        clientId:
          type: string
        url:
          type: string
    RsoAuthRSOAuthorizationSubmission:
      type: object
      properties:
        acr_values:
          type: string
        claims:
          type: string
        client_id:
          type: string
        code_challenge:
          type: string
        code_challenge_method:
          type: string
        nonce:
          type: string
        redirect_uri:
          type: string
        response_type:
          type: string
        scope:
          type: string
    RsoAuthRSOAuthorizationTrustLevel:
      enum:
        - always_trusted
        - trusted_device
        - always_verify
      type: string
    RsoAuthRSOCredentialSubmission:
      type: object
      properties:
        language:
          type: string
        password:
          type: string
        region:
          type: string
        remember:
          type: boolean
        type:
          type: string
        username:
          type: string
    RsoAuthRSOJWTConfig:
      type: object
      properties:
        token:
          type: string
    RsoAuthRSOOTPSubmission:
      type: object
      properties:
        code:
          type: string
        rememberDevice:
          type: boolean
        retry:
          type: boolean
        type:
          type: string
    RsoAuthRSOPartnerCredentialsSubmission:
      type: object
      properties:
        credentials:
          $ref: '#/components/schemas/RsoAuthPartnerCredentials'
        locale:
          type: string
        remember:
          type: boolean
        type:
          type: string
    RsoAuthRSOPlayerCredentials:
      type: object
      properties:
        password:
          type: string
        platformId:
          type: string
        username:
          type: string
    RsoAuthRSOReauthenticationSubmission:
      type: object
      properties:
        password:
          type: string
        type:
          type: string
    RsoAuthSessionCredentials:
      type: object
      properties:
        password:
          type: string
        persistLogin:
          type: boolean
        region:
          type: string
        username:
          type: string
    RsoAuthSessionLoginToken:
      type: object
      properties:
        authentication_type:
          $ref: '#/components/schemas/RsoAuthAuthenticationTypeEnum'
        code_verifier:
          type: string
        login_token:
          type: string
        persist_login:
          type: boolean
    RsoAuthSessionMultifactor:
      type: object
      properties:
        code:
          type: string
        retry:
          type: boolean
        trustDevice:
          type: boolean
    RsoAuthSessionReauthentication:
      type: object
      properties:
        password:
          type: string
    RsoAuthSessionResponse:
      type: object
      properties:
        authenticationType:
          $ref: '#/components/schemas/RsoAuthAuthenticationTypeEnum'
        country:
          type: string
        error:
          type: string
        multifactor:
          $ref: '#/components/schemas/RsoAuthMultifactorDetails'
        persistLogin:
          type: boolean
        securityProfile:
          type: string
        type:
          $ref: '#/components/schemas/RsoAuthSessionResponseType'
    RsoAuthSessionResponseType:
      enum:
        - unknown_authentication_response
        - needs_credentials
        - needs_password
        - needs_multifactor_verification
        - authenticated
        - error
      type: string
    RsoAuthSessionSignup:
      type: object
      properties:
        locale:
          type: string
        token:
          type: string
    RsoAuthStatusMessage:
      type: object
      properties:
        code:
          type: string
        isError:
          type: boolean
        message:
          type: string
    RsoAuthTencentPartnerCredentials:
      type: object
      properties:
        accountType:
          type: string
        appId:
          type: string
        cltkey:
          type: string
        cltkeyLength:
          type: string
        gameSignatureLength:
          type: string
        szGameSignature:
          type: string
        uId:
          type: string
    RsoAuthUserInfo:
      type: object
      properties:
        userInfo:
          type: string
    RsoAuthWeGamePartnerCredentials:
      type: object
      properties:
        railGameId:
          type: string
        railId:
          type: string
        railSessionTicket:
          type: string
    RsoMobileUiAcceptance:
      enum:
        - WaitingForAllServiceData
        - AcceptanceRequired
        - Accepted
      type: string
    RsoMobileUiAccountDeletionV1AccountDeletionUIStatus:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/RsoMobileUiAccountDeletionV1AccountDeletionUIStatusType'
    RsoMobileUiAccountDeletionV1AccountDeletionUIStatusType:
      enum:
        - uninitialized
        - started
        - external
        - visible
        - completed
        - cancelled
        - error
        - shutdown
      type: string
    RsoMobileUiAccountDeletionV1HomeBaseCountry:
      type: object
      properties:
        cached_home_base_country:
          type: string
        home_base_country:
          type: string
    RsoMobileUiAccountPromotionStatus:
      type: object
      properties:
        error_description:
          type: string
        type:
          $ref: '#/components/schemas/RsoMobileUiAccountPromotionStatusType'
    RsoMobileUiAccountPromotionStatusType:
      enum:
        - uninitialized
        - initialized
        - promoted
        - cancelled
        - error
      type: string
    RsoMobileUiAuthenticationMethod:
      enum:
        - Riot
        - Google
        - GameCenter
        - Facebook
        - Apple
        - QQ
        - Wechat
        - Wegame
      type: string
    RsoMobileUiAuthenticationRedirectRequest:
      type: object
      properties:
        language:
          type: string
        redirect_uri:
          type: string
    RsoMobileUiAuthMethodConfig:
      type: object
      properties:
        clientId:
          type: string
        method:
          type: string
        mode:
          type: string
        scopes:
          type: array
          items:
            type: string
        status:
          type: string
    RsoMobileUiConfigReadinessEnum:
      enum:
        - NotReady
        - Ready
      type: string
    RsoMobileUiConfigStatus:
      type: object
      properties:
        readiness:
          $ref: '#/components/schemas/RsoMobileUiConfigReadinessEnum'
    RsoMobileUiEULAUIInitiate:
      type: object
      properties:
        accept:
          type: string
        allowDecline:
          type: boolean
        decline:
          type: string
        message:
          type: string
        privacyPolicy:
          type: string
        privacyPolicyUri:
          type: string
        termsOfUse:
          type: string
        termsOfUseUri:
          type: string
        title:
          type: string
    RsoMobileUiEULAUIStatus:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/RsoMobileUiEULAUIStatusType'
    RsoMobileUiEULAUIStatusType:
      enum:
        - uninitialized
        - visible
        - accepted
        - declined
        - error
      type: string
    RsoMobileUiEULAUIV2Agreement:
      type: object
      properties:
        isAccepted:
          type: boolean
    RsoMobileUiEULAUIV2Config:
      type: object
      properties:
        privacyNoticeUrl:
          type: string
        termsOfServiceContent:
          type: string
    RsoMobileUiEULAUIV2Status:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/RsoMobileUiEULAUIV2StatusType'
    RsoMobileUiEULAUIV2StatusType:
      enum:
        - uninitialized
        - visible
        - accepted
        - acceptanceRequired
        - declined
        - error
      type: string
    RsoMobileUiFederatedAuthState:
      type: object
      properties:
        error:
          type: string
        type:
          $ref: '#/components/schemas/RsoMobileUiFederatedAuthStateType'
    RsoMobileUiFederatedAuthStateType:
      enum:
        - none
        - success
        - failure
        - cancelled
      type: string
    RsoMobileUiFederatedLoginRequest:
      type: object
      properties:
        facebookUseClassicLogin:
          type: boolean
        forceUseWebView:
          type: boolean
        strategy:
          $ref: '#/components/schemas/RsoMobileUiLoginStrategyType'
    RsoMobileUiGameOutOfDateUIInitiate:
      type: object
      properties:
        appId:
          type: string
        appUrl:
          type: string
    RsoMobileUiIOSEventInfo:
      type: object
      properties:
        optionsAnnotation:
          type: string
        sourceApplication:
          type: string
        url:
          type: string
    RsoMobileUiKrAccountPromotionSession:
      type: object
      properties:
        url:
          type: string
    RsoMobileUiLoginInitiateRequest:
      type: object
      properties:
        facebookUseClassicLogin:
          type: boolean
        forceUseWebView:
          type: boolean
        scope:
          type: array
          items:
            type: string
        strategy:
          $ref: '#/components/schemas/RsoMobileUiLoginStrategyType'
        trustLevels:
          type: array
          items:
            $ref: '#/components/schemas/RsoMobileUiRSOAuthorizationTrustLevel'
    RsoMobileUiLoginStatus:
      type: object
      properties:
        error_description:
          type: string
        federated_error_code:
          type: integer
          format: int32
        ready:
          type: boolean
        strategy:
          $ref: '#/components/schemas/RsoMobileUiLoginStrategyType'
        type:
          $ref: '#/components/schemas/RsoMobileUiLoginStatusType'
    RsoMobileUiLoginStatusType:
      enum:
        - uninitialized
        - initialized
        - authenticating
        - cancelled
        - success
        - error
      type: string
    RsoMobileUiLoginStrategyInfo:
      type: object
      properties:
        appInstalled:
          type: boolean
        forceUseWebView:
          type: boolean
        strategy:
          $ref: '#/components/schemas/RsoMobileUiLoginStrategyType'
    RsoMobileUiLoginStrategyType:
      enum:
        - riot
        - google_auth
        - game_center
        - facebook
        - apple
        - msdk_qq
        - msdk_wechat
        - qq
        - wechat
        - wegame
      type: string
    RsoMobileUiLoginTypeEnum:
      enum:
        - Invalid
        - NoLongLivedSession
        - LongLivedSessionRejected
        - LongLivedSessionAccepted
      type: string
    RsoMobileUiLoginV1Request:
      type: object
      properties:
        options:
          type: object
          additionalProperties:
            type: ''
        parameters:
          type: object
          additionalProperties:
            type: ''
        requestId:
          type: integer
          format: int32
        uri:
          type: string
    RsoMobileUiOutcome:
      enum:
        - Success
        - PrivateSettingsMissing
        - PrivateSettingsEmpty
        - RegionLocaleMissing
        - RegionMismatch
        - RegionDataMissing
        - NoLoginSessionCookies
        - SetPersistedLoginFailed
        - AuthRequestFailed
        - AuthResultNotAuthorized
      type: string
    RsoMobileUiPlatformUser:
      type: object
      properties:
        id:
          type: string
        platform:
          type: string
    RsoMobileUiPluginConfigResponse:
      type: object
      properties:
        methods:
          type: array
          items:
            $ref: '#/components/schemas/RsoMobileUiAuthMethodConfig'
        service_url:
          type: string
    RsoMobileUiProduct:
      type: object
      properties:
        patchline:
          type: string
        productId:
          type: string
    RsoMobileUiRegionElectionV1EligibilityResponse:
      type: object
      properties:
        canSelectRegion:
          type: boolean
        multipleRegionsAllowed:
          type: boolean
        selectedRegions:
          type: array
          items:
            type: string
    RsoMobileUiRegionElectionV1InitiateRequest:
      type: object
      properties:
        regionHint:
          type: string
    RsoMobileUiRegionElectionV1RegionElection:
      type: object
      properties:
        isSuccess:
          type: boolean
        message:
          $ref: '#/components/schemas/RsoMobileUiRegionsV1RegionAssignmentResponseMessage'
        productId:
          type: string
        regionHint:
          type: string
        selectedRegion:
          type: string
    RsoMobileUiRegionElectionV1UpdateRequest:
      type: object
      properties:
        region:
          type: string
    RsoMobileUiRegionsV1EligibilityCheckResponse:
      type: object
      properties:
        canSelectRegion:
          type: boolean
        multipleRegionsAllowed:
          type: boolean
        selectedRegions:
          type: array
          items:
            type: string
    RsoMobileUiRegionsV1RegionAssignmentResponse:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/RsoMobileUiRegionsV1RegionAssignmentResponseMessage'
        success:
          type: boolean
    RsoMobileUiRegionsV1RegionAssignmentResponseMessage:
      enum:
        - LOGIN_REQUIRED
        - SERVER_ERROR
        - AUTH_REFRESH_FAILED
        - REGION_ALREADY_ASSIGNED
        - REGION_EXISTS
        - BAD_ENTITY_PARAMETER
        - NO_ERROR
      type: string
    RsoMobileUiRsoAuthAccessToken:
      type: object
      properties:
        expiry:
          type: integer
          format: int64
        scopes:
          type: array
          items:
            type: string
        token:
          type: string
    RsoMobileUiRsoAuthAuthorizationRequest:
      type: object
      properties:
        clientId:
          type: string
        scope:
          type: array
          items:
            type: string
        trustLevels:
          type: array
          items:
            $ref: '#/components/schemas/RsoMobileUiRSOAuthorizationTrustLevel'
    RsoMobileUiRsoAuthAuthorizationResponse:
      type: object
      properties:
        authorization:
          $ref: '#/components/schemas/RsoMobileUiRsoAuthImplicitAuthorization'
        country:
          type: string
        type:
          $ref: '#/components/schemas/RsoMobileUiRsoAuthAuthorizationResponseType'
    RsoMobileUiRsoAuthAuthorizationResponseType:
      enum:
        - needs_authentication
        - needs_reauthentication
        - authorized
      type: string
    RsoMobileUiRsoAuthenticatorAuthenticateCodeInput:
      type: object
      properties:
        code:
          type: string
        language:
          type: string
        remember:
          type: boolean
    RsoMobileUiRsoAuthenticatorAuthenticateFacebookInput:
      type: object
      properties:
        facebook:
          $ref: '#/components/schemas/RsoMobileUiRsoAuthenticatorFacebookInput'
        language:
          type: string
        remember:
          type: boolean
    RsoMobileUiRsoAuthenticatorAuthenticateGameCenterInput:
      type: object
      properties:
        gamecenter:
          $ref: '#/components/schemas/RsoMobileUiRsoAuthenticatorGameCenterInput'
        language:
          type: string
        remember:
          type: boolean
    RsoMobileUiRsoAuthenticatorAuthenticateMultifactorInput:
      type: object
      properties:
        language:
          type: string
        multifactor:
          $ref: '#/components/schemas/RsoMobileUiRsoAuthenticatorMultifactorInput'
        remember:
          type: boolean
    RsoMobileUiRsoAuthenticatorAuthenticateOpenIdConnectInput:
      type: object
      properties:
        language:
          type: string
        open_id:
          $ref: '#/components/schemas/RsoMobileUiRsoAuthenticatorOpenIdConnectInput'
        remember:
          type: boolean
    RsoMobileUiRsoAuthenticatorAuthenticateRiotIdentityInput:
      type: object
      properties:
        language:
          type: string
        remember:
          type: boolean
        riot_identity:
          $ref: '#/components/schemas/RsoMobileUiRsoAuthenticatorRiotIdentityInput'
    RsoMobileUiRsoAuthenticatorAuthenticationResponse:
      type: object
      properties:
        country:
          type: string
        error:
          type: string
        healup:
          $ref: '#/components/schemas/RsoMobileUiRsoAuthenticatorHealupResponseDetails'
        multifactor:
          $ref: '#/components/schemas/RsoMobileUiRsoAuthenticatorMultifactorResponseDetails'
        signup:
          $ref: '#/components/schemas/RsoMobileUiRsoAuthenticatorSignupResponseDetails'
        success:
          $ref: '#/components/schemas/RsoMobileUiRsoAuthenticatorSuccessResponseDetails'
        type:
          $ref: '#/components/schemas/RsoMobileUiRsoAuthenticatorResponseType'
    RsoMobileUiRsoAuthenticatorDisplayMode:
      enum:
        - page
        - touch
      type: string
    RsoMobileUiRsoAuthenticatorFacebookInput:
      type: object
      properties:
        access_token:
          type: string
        app_id:
          type: string
        id_token:
          type: string
    RsoMobileUiRsoAuthenticatorGameCenterInput:
      type: object
      properties:
        bundle_id:
          type: string
        player_id:
          type: string
        public_key_url:
          type: string
        salt:
          type: string
        signature:
          type: string
        timestamp:
          type: string
    RsoMobileUiRsoAuthenticatorHealupResponseDetails:
      type: object
      properties:
        auth_method:
          type: string
        required_fields:
          type: array
          items:
            type: string
        required_fields_hints:
          type: object
          additionalProperties:
            type: ''
    RsoMobileUiRsoAuthenticatorMultifactorInput:
      type: object
      properties:
        action:
          type: string
        otp:
          type: string
        rememberDevice:
          type: boolean
    RsoMobileUiRsoAuthenticatorMultifactorResponseDetails:
      type: object
      properties:
        email:
          type: string
        method:
          type: string
        methods:
          type: array
          items:
            type: string
        mode:
          type: string
    RsoMobileUiRsoAuthenticatorOpenIdConnectInput:
      type: object
      properties:
        id_token:
          type: string
    RsoMobileUiRsoAuthenticatorResponseType:
      enum:
        - auth
        - healup
        - signup
        - multifactor
        - success
        - error
      type: string
    RsoMobileUiRsoAuthenticatorRiotIdentityInput:
      type: object
      properties:
        password:
          type: string
        region:
          type: string
        username:
          type: string
    RsoMobileUiRsoAuthenticatorSignupLinkDetails:
      type: object
      properties:
        auth_method:
          type: string
        options:
          type: array
          items:
            type: string
        suggested:
          type: array
          items:
            type: string
    RsoMobileUiRsoAuthenticatorSignupResponseDetails:
      type: object
      properties:
        auth_method:
          type: string
        link:
          $ref: '#/components/schemas/RsoMobileUiRsoAuthenticatorSignupLinkDetails'
        required_fields:
          type: array
          items:
            type: string
        required_fields_hints:
          type: object
          additionalProperties:
            type: ''
    RsoMobileUiRsoAuthenticatorSuccessResponseDetails:
      type: object
      properties:
        linked:
          type: string
        login_token:
          type: string
        redirect_url:
          type: string
    RsoMobileUiRsoAuthenticatorWebAuthenticationMethod:
      enum:
        - none
        - apple
        - google
        - facebook
      type: string
    RsoMobileUiRsoAuthenticatorWebAuthenticationUrlRequest:
      type: object
      properties:
        authentication_callback_uri:
          type: string
        display:
          $ref: '#/components/schemas/RsoMobileUiRsoAuthenticatorDisplayMode'
        locale:
          type: string
        method:
          $ref: '#/components/schemas/RsoMobileUiRsoAuthenticatorWebAuthenticationMethod'
    RsoMobileUiRsoAuthIdToken:
      type: object
      properties:
        expiry:
          type: integer
          format: int64
        token:
          type: string
    RsoMobileUiRsoAuthImplicitAuthorization:
      type: object
      properties:
        accessToken:
          $ref: '#/components/schemas/RsoMobileUiRsoAuthAccessToken'
        idToken:
          $ref: '#/components/schemas/RsoMobileUiRsoAuthIdToken'
    RsoMobileUiRsoAuthMultifactorDetails:
      type: object
      properties:
        email:
          type: string
        method:
          $ref: '#/components/schemas/RsoMobileUiRsoAuthMultifactorMethod'
    RsoMobileUiRsoAuthMultifactorMethod:
      enum:
        - method_not_set
        - email
        - authenticator
        - sms
        - push
      type: string
    RsoMobileUiRsoAuthOpenIdConfiguration:
      type: object
      properties:
        config:
          type: object
          additionalProperties:
            type: ''
    RsoMobileUiRSOAuthorizationTrustLevel:
      enum:
        - always_trusted
        - trusted_device
        - always_verify
      type: string
    RsoMobileUiRsoAuthSessionLoginToken:
      type: object
      properties:
        code_verifier:
          type: string
        login_token:
          type: string
        persist_login:
          type: boolean
    RsoMobileUiRsoAuthSessionResponse:
      type: object
      properties:
        country:
          type: string
        error:
          type: string
        multifactor:
          $ref: '#/components/schemas/RsoMobileUiRsoAuthMultifactorDetails'
        persistLogin:
          type: boolean
        state:
          $ref: '#/components/schemas/RsoMobileUiRsoAuthSessionState'
        type:
          $ref: '#/components/schemas/RsoMobileUiRsoAuthSessionResponseType'
    RsoMobileUiRsoAuthSessionResponseType:
      enum:
        - unknown_authentication_response
        - needs_credentials
        - needs_password
        - needs_multifactor_verification
        - authenticated
        - error
      type: string
    RsoMobileUiRsoAuthSessionState:
      enum:
        - Created
        - Updated
        - Destroyed
      type: string
    RsoMobileUiRSOSignOnAttemptEvent:
      type: object
      properties:
        authenticationMethod:
          $ref: '#/components/schemas/RsoMobileUiAuthenticationMethod'
        errorCode:
          type: string
        errorDescription:
          type: string
        errorName:
          type: string
        outcome:
          $ref: '#/components/schemas/RsoMobileUiOutcome'
        product:
          $ref: '#/components/schemas/RsoMobileUiProduct'
        signOnAttemptNumber:
          type: integer
          format: int32
        storedSessionState:
          $ref: '#/components/schemas/RsoMobileUiStoredSessionState'
    RsoMobileUiStoredSessionState:
      enum:
        - Accepted
        - Rejected
        - Absent
      type: string
    RsoMobileUiUIAccountPromotionFieldResponse:
      type: object
      properties:
        fields:
          type: array
          items:
            type: string
    RsoMobileUiUIAccountPromotionResponse:
      type: object
      properties:
        fields:
          type: object
          additionalProperties:
            type: ''
        message:
          type: string
        success:
          type: boolean
    RsoMobileUiUIAuthorization:
      type: object
      properties:
        currentAccountId:
          type: integer
          format: int64
        currentPlatformId:
          type: string
        subject:
          type: string
    RsoMobileUiUIEligibilityCheckResponse:
      type: object
      properties:
        errorCode:
          type: integer
          format: int32
        errorMessage:
          type: string
        isEligible:
          type: boolean
        isTooYoung:
          type: boolean
    RsoMobileUiUIMSDKQQPartnerCredentials:
      type: object
      properties:
        appId:
          type: string
        msdkKey:
          type: string
        openId:
          type: string
        openKey:
          type: string
    RsoMobileUiUIMSDKWeChatPartnerCredentials:
      type: object
      properties:
        accessToken:
          type: string
        appId:
          type: string
        msdkKey:
          type: string
        openId:
          type: string
    RsoMobileUiUIPartnerCredentials:
      type: object
      properties:
        msdk_qq:
          $ref: '#/components/schemas/RsoMobileUiUIMSDKQQPartnerCredentials'
        msdk_wechat:
          $ref: '#/components/schemas/RsoMobileUiUIMSDKWeChatPartnerCredentials'
    RsoMobileUiUIWebViewIncomingCloseRequest:
      type: object
      properties:
        type:
          type: string
        userInitiated:
          type: boolean
    RsoMobileUiUIWebViewIncomingError:
      type: object
      properties:
        message:
          type: string
        type:
          type: string
    RsoMobileUiUIWebViewIncomingResourceRequest:
      type: object
      properties:
        body:
          type: object
          additionalProperties:
            type: ''
        id:
          type: string
        method:
          type: string
        type:
          type: string
        url:
          type: string
    RsoMobileUiUIWebViewOutgoingResourceData:
      type: object
      properties:
        body:
          type: object
          additionalProperties:
            type: ''
        code:
          type: integer
          format: int32
    RsoMobileUiUIWebViewOutgoingResourceNotification:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/RsoMobileUiUIWebViewOutgoingResourceNotificationData'
        type:
          type: string
    RsoMobileUiUIWebViewOutgoingResourceNotificationData:
      type: object
      properties:
        type:
          type: string
        url:
          type: string
        value:
          type: object
          additionalProperties:
            type: ''
    RsoMobileUiUIWebViewOutgoingResourceRequest:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/RsoMobileUiUIWebViewOutgoingResourceData'
        id:
          type: string
        type:
          type: string
    RsoMobileUiVngV1RegistrationUIStatus:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/RsoMobileUiVngV1RegistrationUIStatusType'
    RsoMobileUiVngV1RegistrationUIStatusType:
      enum:
        - uninitialized
        - visible
        - completed
        - cancelled
        - error
      type: string
    RsoMobileUiVngV1StatusResponse:
      type: object
      properties:
        action_required:
          type: boolean
        action_url:
          type: string
    RsoMobileUiWebViewAccountPromotionResponse:
      type: object
      properties:
        error:
          type: string
        fields:
          type: object
          additionalProperties:
            type: ''
        success:
          type: boolean
    ScdCookie:
      type: object
      properties:
        cookie:
          type: string
        domain:
          type: string
        path:
          type: string
    ScdCookies:
      type: object
      properties:
        cookies:
          type: array
          items:
            $ref: '#/components/schemas/ScdCookie'
        expires_in:
          type: integer
          format: int32
    ScdEntitlementsToken:
      type: object
      properties:
        accessToken:
          type: string
        entitlements:
          type: array
          items:
            type: string
        issuer:
          type: string
        subject:
          type: string
        token:
          type: string
    ScdProductSession:
      type: object
    ScdScdEnabled:
      enum:
        - Off
        - On
      type: string
    StructuredLogRequest:
      type: object
      properties:
        fields:
          type: object
          additionalProperties:
            type: object
        message:
          type: string
        severity:
          $ref: '#/components/schemas/LogSeverityLevels'
    SystemTrayBuildInfo:
      type: object
      properties:
        patchlineVisibleName:
          type: string
    SystemTrayConfigurationStatus:
      enum:
        - unknown
        - has_configuration
        - unsupported_region
        - unsupported_shard
        - unsupported_os
        - unsupported_32_bit_os
      type: string
    SystemTrayContentCookies:
      type: object
      properties:
        content_id:
          type: string
        content_path:
          type: string
        cookies:
          type: array
          items:
            $ref: '#/components/schemas/SystemTrayCookie'
    SystemTrayCookie:
      type: object
      properties:
        domain:
          type: string
        expires:
          type: integer
          format: int64
        httponly:
          type: boolean
        name:
          type: string
        path:
          type: string
        secure:
          type: boolean
        url:
          type: string
        value:
          type: string
    SystemTrayPatcherProductState:
      type: object
      properties:
        action:
          $ref: '#/components/schemas/SystemTrayPatcherProductStateAction'
        id:
          type: string
        isStopped:
          type: boolean
        isUpToDate:
          type: boolean
    SystemTrayPatcherProductStateAction:
      enum:
        - Idle
        - CheckingForUpdates
        - Patching
        - Repairing
      type: string
    SystemTrayPatchingResource:
      type: object
      properties:
        combined_patch_state:
          type: string
    SystemTrayPatchline:
      type: object
      properties:
        configuration_status:
          $ref: '#/components/schemas/SystemTrayConfigurationStatus'
        content_cookies:
          type: array
          items:
            $ref: '#/components/schemas/SystemTrayContentCookies'
        default_theme_manifest:
          type: string
        full_name:
          type: string
        id:
          type: string
        install_id:
          type: string
        theme_manifest:
          type: string
    SystemTrayProductContext:
      type: object
      properties:
        patchlineId:
          type: string
        productId:
          type: string
    SystemTrayProductPatchlineResourceV4:
      type: object
      properties:
        id:
          type: string
        install_id:
          type: string
        name:
          type: string
        patchline:
          $ref: '#/components/schemas/SystemTrayPatchline'
    SystemTrayProductSessionSession:
      type: object
    SystemTrayProductV4:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        patchlines:
          type: array
          items:
            $ref: '#/components/schemas/SystemTrayPatchline'
    SystemTrayThemeManifest:
      type: object
      properties:
        system_tray_icon:
          type: string
    SystemTrayUxCommand:
      type: object
      properties:
        action:
          type: string
        parameters:
          type: object
        showUxIfHidden:
          type: boolean
    ThirdPartyDependencyRequest:
      type: object
      properties:
        args:
          type: array
          items:
            type: string
        dependency:
          type: string
        elevate:
          type: boolean
        hash:
          type: string
        headers:
          type: object
          additionalProperties:
            type: string
        optional:
          type: boolean
        url:
          type: string
        validExitCodes:
          type: string
    ThirdPartyDependencyStatesV2:
      type: object
      properties:
        installed:
          type: array
          items:
            $ref: '#/components/schemas/InstalledDependency'
        version:
          type: integer
          format: int32
    ThirdPartyDependencyStatus:
      type: object
      properties:
        arguments:
          type: array
          items:
            type: string
        dependency:
          type: string
        download:
          $ref: '#/components/schemas/DownloadProgress'
        error:
          type: string
        errorType:
          type: string
        hash:
          type: string
        id:
          type: string
        install:
          $ref: '#/components/schemas/InstallProgress'
        optional:
          type: boolean
        phase:
          $ref: '#/components/schemas/ThirdPartyDependencyStatusPhase'
        progress:
          type: number
          format: double
    ThirdPartyDependencyStatusPhase:
      enum:
        - Unknown
        - NotInstalled
        - Imported
        - AlreadyInstalled
        - Waiting
        - Download
        - Install
        - Failed
        - Cancelled
        - Succeeded
      type: string
    UriHandlerRequest:
      type: object
      properties:
        path:
          type: string
        uriProtocol:
          type: string
    UserInfo:
      type: object
      properties:
        lol:
          $ref: '#/components/schemas/LolInfo'
        preferred_username:
          type: string
    UxCommand:
      type: object
      properties:
        action:
          $ref: '#/components/schemas/UxCommandAction'
        parameters:
          type: object
        showUxIfHidden:
          type: boolean
    UxCommandAction:
      enum:
        - ShowLogin
        - ShowAllProducts
        - ShowProduct
        - ShowSettings
        - PassFocusPermissionToFoundation
        - Test
      type: string
    VanguardAuthorization:
      type: object
      properties:
        currentAccountId:
          type: integer
          format: int64
        currentPlatformId:
          type: string
        subject:
          type: string
    VanguardPatchlineDependency:
      type: object
      properties:
        args:
          type: array
          items:
            type: string
        elevate:
          type: boolean
        hash:
          type: string
        id:
          type: string
        minVersion:
          type: string
        url:
          type: string
        version:
          type: string
    VanguardPatchlineMetadata:
      type: object
      properties:
        dependencies:
          type: array
          items:
            $ref: '#/components/schemas/VanguardPatchlineDependency'
        patchlineId:
          type: string
        productId:
          type: string
    VanguardPluginState:
      type: object
      properties:
        available:
          type: string
        enabled:
          type: boolean
        progress:
          $ref: '#/components/schemas/ThirdPartyDependencyStatus'
        restartRequired:
          type: boolean
        status:
          $ref: '#/components/schemas/VanguardUpToDateStatus'
        version:
          type: string
    VanguardProductSession:
      type: object
      properties:
        patchlineId:
          type: string
        phase:
          type: string
        productId:
          type: string
    VanguardPublishState:
      enum:
        - NotPublished
        - Published
      type: string
    VanguardScdCookie:
      type: object
      properties:
        cookie:
          type: string
        domain:
          type: string
        path:
          type: string
    VanguardScdCookies:
      type: object
      properties:
        cookies:
          type: array
          items:
            $ref: '#/components/schemas/VanguardScdCookie'
        expires_in:
          type: integer
          format: int32
    VanguardScdEnabled:
      enum:
        - Off
        - On
      type: string
    VanguardUpToDateStatus:
      enum:
        - UpToDate
        - Updating
        - UpdateAvailable
      type: string
    VngAccountRequiredStatus:
      type: object
      properties:
        action_required:
          type: boolean
    VoiceChatAccessToken:
      type: object
      properties:
        token:
          type: string
    VoiceChatAudioPropertiesResource:
      type: object
      properties:
        fastEnergyMeter:
          type: number
          format: double
        isLoopbackEnabled:
          type: boolean
        isMicActive:
          type: boolean
        isSpeakerActive:
          type: boolean
        micEnergy:
          type: integer
          format: int32
        micVolume:
          type: integer
          format: int32
        noiseFloorMeter:
          type: number
          format: double
        speakerEnergy:
          type: integer
          format: int32
        speakerVolume:
          type: integer
          format: int32
        speechThresholdMeter:
          type: number
          format: double
    VoiceChatAuthorization:
      type: object
      properties:
        subject:
          type: string
    VoiceChatCaptureDevicePermissionStatus:
      enum:
        - promptForPermission
        - permissionDenied
        - permissionGranted
      type: string
    VoiceChatDeviceResource:
      type: object
      properties:
        handle:
          type: string
        is_current_device:
          type: boolean
        is_default:
          type: boolean
        is_effective_device:
          type: boolean
        name:
          type: string
    VoiceChatIdToken:
      type: object
      properties:
        token:
          type: string
    VoiceChatJoinSession:
      type: object
      properties:
        jwt:
          type: string
    VoiceChatKeyCombo:
      type: object
      properties:
        keyBindings:
          type: array
          items:
            $ref: '#/components/schemas/VoiceChatPushToTalkKey'
        sessionId:
          type: string
    VoiceChatLogoutReason:
      enum:
        - generic
        - tokens_expired
      type: string
    VoiceChatParticipantResource:
      type: object
      properties:
        energy:
          type: integer
          format: int32
        id:
          type: string
        isMuted:
          type: boolean
        isSpeaking:
          type: boolean
        name:
          type: string
        speakingTimestamp:
          type: integer
          format: int32
        uri:
          type: string
        volume:
          type: integer
          format: int32
    VoiceChatProductSession:
      type: object
      properties:
        patchlineFullName:
          type: string
        patchlineId:
          type: string
        productId:
          type: string
        version:
          type: string
    VoiceChatPTTMode:
      enum:
        - exclusive
        - inclusive
      type: string
    VoiceChatPushToTalkKey:
      type: object
      properties:
        key:
          type: integer
          format: int32
        mouseButton:
          type: integer
          format: int32
    VoiceChatPushToTalkResource:
      type: object
      properties:
        enabled:
          type: boolean
        keyCombos:
          type: array
          items:
            $ref: '#/components/schemas/VoiceChatKeyCombo'
        mode:
          $ref: '#/components/schemas/VoiceChatPTTMode'
    VoiceChatSessionResource:
      type: object
      properties:
        id:
          type: string
        isFocused:
          type: boolean
        isMuted:
          type: boolean
        isRestricted:
          type: boolean
        isTransmitEnabled:
          type: boolean
        participants:
          type: array
          items:
            $ref: '#/components/schemas/VoiceChatParticipantResource'
        product:
          type: string
        provider:
          type: string
        status:
          $ref: '#/components/schemas/VoiceChatSessionStatus'
        volume:
          type: integer
          format: int32
    VoiceChatSessionStatus:
      enum:
        - active
        - onHold
      type: string
    VoiceChatSettingsResource:
      type: object
      properties:
        currentCaptureDeviceHandle:
          type: string
        currentRenderDeviceHandle:
          type: string
        localMicMuted:
          type: boolean
        loopbackEnabled:
          type: boolean
        micLevel:
          type: integer
          format: int32
        speakerLevel:
          type: integer
          format: int32
        vadHangoverTime:
          type: integer
          format: int32
        vadSensitivity:
          type: integer
          format: int32
    VoiceChatStateResource:
      type: object
      properties:
        connected:
          type: boolean
    VoiceChatUnnormalizedKeyCombo:
      type: object
      properties:
        keyBindings:
          type: array
          items:
            $ref: '#/components/schemas/VoiceChatUnnormalizedPushToTalkKey'
        sessionId:
          type: string
    VoiceChatUnnormalizedPushToTalkKey:
      type: object
      properties:
        key:
          type: integer
          format: int32
        mouseButton:
          type: integer
          format: int32
    VoiceChatUnnormalizedPushToTalkResource:
      type: object
      properties:
        enabled:
          type: boolean
        keyCombos:
          type: array
          items:
            $ref: '#/components/schemas/VoiceChatUnnormalizedKeyCombo'
        mode:
          $ref: '#/components/schemas/VoiceChatPTTMode'
    VoiceChatUpdateParticipantResource:
      type: object
      properties:
        isMuted:
          type: boolean
        volume:
          type: integer
          format: int32
    VoiceChatUpdateSessionResource:
      type: object
      properties:
        isFocused:
          type: boolean
        isTransmitEnabled:
          type: boolean
        volume:
          type: integer
          format: int32
    VoiceChatUpdateSettingsResource:
      type: object
      properties:
        currentCaptureDeviceHandle:
          type: string
        currentRenderDeviceHandle:
          type: string
        localMicMuted:
          type: boolean
        loopbackEnabled:
          type: boolean
        micLevel:
          type: integer
          format: int32
        speakerLevel:
          type: integer
          format: int32
        vadHangoverTime:
          type: integer
          format: int32
        vadSensitivity:
          type: integer
          format: int32
    VoiceChatVivoxCallStats:
      type: object
      properties:
        call_id:
          type: string
        capture_device_consecutively_read_count_0:
          type: integer
          format: int32
        capture_device_consecutively_read_count_1:
          type: integer
          format: int32
        capture_device_consecutively_read_count_2:
          type: integer
          format: int32
        capture_device_consecutively_read_count_3:
          type: integer
          format: int32
        capture_device_consecutively_read_count_4:
          type: integer
          format: int32
        codec_name:
          type: string
        current_bars:
          type: integer
          format: int32
        current_opus_bandwidth:
          type: integer
          format: int32
        current_opus_bit_rate:
          type: integer
          format: int32
        current_opus_complexity:
          type: integer
          format: int32
        current_opus_max_packet_size:
          type: integer
          format: int32
        current_opus_vbr_mode:
          type: integer
          format: int32
        incoming_discarded:
          type: integer
          format: int32
        incoming_out_of_time:
          type: integer
          format: int32
        incoming_packetloss:
          type: integer
          format: int32
        incoming_received:
          type: integer
          format: int32
        last_latency_measured_ms:
          type: integer
          format: int32
        latency_measurement_count:
          type: integer
          format: int32
        latency_packets_dropped:
          type: integer
          format: int32
        latency_packets_lost:
          type: integer
          format: int32
        latency_packets_malformed:
          type: integer
          format: int32
        latency_packets_negative_latency:
          type: integer
          format: int32
        latency_packets_sent:
          type: integer
          format: int32
        latency_sum_ms:
          type: integer
          format: int32
        max_latency_ms:
          type: integer
          format: int32
        min_latency_ms:
          type: integer
          format: int32
        outgoing_sent:
          type: integer
          format: int32
        plc_on:
          type: boolean
        plc_synthetic_frames:
          type: integer
          format: int32
        r_factor:
          type: number
          format: double
        render_device_errors:
          type: integer
          format: int32
        render_device_overruns:
          type: integer
          format: int32
        render_device_underruns:
          type: integer
          format: int32
        sample_interval_begin_ms:
          type: integer
          format: int64
        sample_interval_end_ms:
          type: integer
          format: int64
    VoiceChatVoiceChatHeartbeatMetrics:
      type: object
      properties:
        productsUsingVoice:
          type: array
          items:
            $ref: '#/components/schemas/VoiceChatVoiceChatHeartbeatMetrics_PerProductData'
        providerData:
          type: array
          items:
            $ref: '#/components/schemas/VoiceChatVoiceChatHeartbeatMetrics_PerProviderData'
    VoiceChatVoiceChatHeartbeatMetrics_PerProductData:
      type: object
      properties:
        channelsInUse:
          type: integer
          format: int32
        patchlineId:
          type: string
        productId:
          type: string
        providerName:
          type: string
        target:
          type: string
    VoiceChatVoiceChatHeartbeatMetrics_PerProviderData:
      type: object
      properties:
        isLoggedIn:
          type: boolean
        providerName:
          type: string
        target:
          type: string
    XboxAccountAuthorization:
      type: object
      properties:
        user_hash:
          type: string
        xsts_token:
          type: string
    XboxAccountAuthorizationParameters:
      type: object
      properties:
        authenticatorUrl:
          type: string
        showUserSelector:
          type: boolean
  securitySchemes:
    basicAuth:
      type: http
      description: 'Username: riot. Password randomly generated on RCS start, it''s NOT your account password.'
      scheme: basic
security:
  - basicAuth: [ ]
tags:
  - name: accounts-security
  - name: age-restriction
  - name: anti-addiction
  - name: app-command
  - name: builtin
  - name: chat
  - name: client-config
  - name: client-feature-flags
  - name: cookie-jar
  - name: data-store
  - name: disambiguation
  - name: entitlements
  - name: eula
  - name: first-party-fulfillment
  - name: friends
  - name: ga-warning
  - name: game-session
  - name: info-radiator
  - name: jwt-authenticator
  - name: kr-account
  - name: loyalty
  - name: mailbox
  - name: mobile-product-registry
  - name: mobile-push
  - name: name-check
  - name: native-ux
  - name: nintendo-account
  - name: patch
  - name: pay-mobile
  - name: payments
  - name: platform-ui
  - name: play-restrictions
  - name: player-account
  - name: player-affinity
  - name: player-preferences
  - name: player-reporting
  - name: player-session-lifecycle
  - name: playstation-account
  - name: prime-gaming
  - name: privacy
  - name: private-settings
  - name: process-control
  - name: product-integration
  - name: product-integration-deps
  - name: product-localization
  - name: product-metadata
  - name: product-session
  - name: riot-client-auth
  - name: riot-login
  - name: riot-messaging-service
  - name: riot-status
  - name: riotclient
  - name: riotclientapp
  - name: rnet-sanitizer
  - name: rso-auth
  - name: rso-authenticator
  - name: rso-mobile-ui
  - name: scd
  - name: swagger
  - name: telemetry
  - name: voice-chat
  - name: websocket
  - name: xbox-account
  - name: Plugins
  - name: Plugin Manager
  - name: Plugin Manager Diagnostics
  - name: Plugin Manager Info
  - name: Plugin agent
  - name: Plugin patch-proxy
  - name: Plugin product-launcher
  - name: Plugin publishing-content
  - name: Plugin restriction
  - name: Plugin riot-client-app-command
  - name: Plugin riot-client-lifecycle
  - name: Plugin riot-client-lifecycle-state
  - name: Plugin rnet-lifecycle
  - name: Plugin rnet-pft
  - name: Plugin rnet-product-registry
  - name: Plugin rnet-self-update
  - name: Plugin vanguard